{
  Log.i(AnkiDroidApp.TAG,"doInBackgroundGetTomorrowDue");
  File dir=new File(params[0]);
  File[] fileList=dir.listFiles(new WidgetStatus.AnkiFileFilter());
  ArrayList<DeckStatus> decks=new ArrayList<DeckStatus>(fileList.length);
  if (fileList != null && fileList.length != 0) {
    for (    File file : fileList) {
      String absPath=file.getAbsolutePath();
      try {
        Deck deck=DeckManager.getDeck(absPath,DeckManager.REQUESTING_ACTIVITY_BIGWIDGET,false);
        if (deck != null) {
          int failedCards=deck.getFailedDelayedCount();
          int dueCards=deck.getNextDueCards(1);
          int newCards=deck.getNextNewCards();
          decks.add(new DeckStatus(null,deck.getDeckName(),newCards,dueCards,failedCards,deck.getETA(failedCards,dueCards,newCards,true),0));
        }
        DeckManager.closeDeck(absPath,DeckManager.REQUESTING_ACTIVITY_BIGWIDGET);
      }
 catch (      RuntimeException e) {
        Log.e(AnkiDroidApp.TAG,"doInBackgroundGetTomorrowDue: an error occurred: " + e);
      }
    }
    if (this.isCancelled()) {
      sTomorrowDues=null;
      return null;
    }
    Collections.sort(decks,new WidgetStatus.ByNameComparator());
  }
  return decks.toArray(new DeckStatus[0]);
}
