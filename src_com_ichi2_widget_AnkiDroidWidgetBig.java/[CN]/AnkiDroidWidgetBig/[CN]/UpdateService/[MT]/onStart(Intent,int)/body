{
  Log.i(AnkiDroidApp.TAG,"BigWidget: OnStart");
  sContext=this;
  if (intent != null && intent.getAction() != null) {
    String action=intent.getAction();
    if (ACTION_NOTHING.equals(action)) {
    }
 else     if (ACTION_UPDATE.equals(action)) {
      if (!mWaitForAsyncTask) {
        mShowProgressDialog=false;
        updateViews(intent.getIntExtra(EXTRA_VIEW,VIEW_NOT_SPECIFIED));
      }
    }
 else     if (ACTION_OPENDECK.equals(action)) {
      showProgressDialog();
      DeckTask.launchDeckTask(DeckTask.TASK_TYPE_LOAD_DECK,mOpenDeckHandler,new DeckTask.TaskData(intent.getStringExtra(EXTRA_DECK_PATH)));
    }
 else     if (ACTION_CLOSEDECK.equals(action)) {
      DeckTask.launchDeckTask(DeckTask.TASK_TYPE_CLOSE_DECK,mCloseDeckHandler,new DeckTask.TaskData(sLoadedDeck.getDeckPath()));
    }
 else     if (ACTION_UNDO.equals(action)) {
      if (sLoadedDeck.undoAvailable()) {
        DeckTask.launchDeckTask(DeckTask.TASK_TYPE_UNDO,mUpdateCardHandler,new DeckTask.TaskData(0,sLoadedDeck,sCard.getId(),true));
      }
    }
 else     if (ACTION_BURY_CARD.equals(action)) {
      DeckTask.launchDeckTask(DeckTask.TASK_TYPE_BURY_CARD,mUpdateCardHandler,new DeckTask.TaskData(0,sLoadedDeck,sCard));
    }
 else     if (action.startsWith(ACTION_ANSWER)) {
      int ease=intent.getIntExtra(EXTRA_EASE,0);
      if (ease == 0) {
        updateViews(VIEW_SHOW_ANSWER);
      }
 else {
        DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ANSWER_CARD,mAnswerCardHandler,new DeckTask.TaskData(ease,sLoadedDeck,sCard));
      }
    }
 else     if (ACTION_SHOW_RESTRICTIONS_DIALOG.equals(action)) {
      Intent dialogIntent=new Intent(this,WidgetDialog.class);
      dialogIntent.setAction(WidgetDialog.ACTION_SHOW_RESTRICTIONS_DIALOG);
      dialogIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
      this.startActivity(dialogIntent);
    }
 else     if (ACTION_OPEN.equals(action)) {
      DeckManager.getDeck(sLoadedDeck.getDeckPath(),true,DeckManager.REQUESTING_ACTIVITY_STUDYOPTIONS);
      Intent newIntent=StudyOptions.getLoadDeckIntent(this,"");
      newIntent.removeExtra(StudyOptions.EXTRA_DECK);
      newIntent.putExtra(StudyOptions.EXTRA_START_REVIEWER,(sCurrentView != VIEW_NOTHING_DUE));
      startActivity(newIntent);
    }
 else     if (ACTION_CARDEDITOR.equals(action)) {
      Intent editIntent=new Intent(this,CardEditor.class);
      editIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
      editIntent.putExtra(CardEditor.CARD_EDITOR_ACTION,CardEditor.EDIT_BIGWIDGET_CARD);
      editIntent.putExtra(CardEditor.DECKPATH,sLoadedDeck.getDeckPath());
      this.startActivity(editIntent);
    }
 else     if (ACTION_FACTADDER.equals(action)) {
      Intent editIntent=new Intent(this,CardEditor.class);
      editIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
      editIntent.putExtra(CardEditor.CARD_EDITOR_ACTION,CardEditor.ADD_CARD);
      editIntent.putExtra(CardEditor.DECKPATH,sLoadedDeck.getDeckPath());
      this.startActivity(editIntent);
    }
 else     if (ACTION_HELP.equals(action)) {
      updateViews(VIEW_SHOW_HELP);
    }
 else     if (ACTION_LEARN_MORE.equals(action)) {
      if (sLoadedDeck != null) {
        sLoadedDeck.setupLearnMoreScheduler();
        sLoadedDeck.reset();
        sCard=sLoadedDeck.getCard();
        mShowProgressDialog=false;
        mCurrentMessage=null;
        updateViews(VIEW_SHOW_QUESTION);
      }
    }
 else     if (ACTION_REVIEW_EARLY.equals(action)) {
      if (sLoadedDeck != null) {
        sLoadedDeck.setupReviewEarlyScheduler();
        sLoadedDeck.reset();
        sCard=sLoadedDeck.getCard();
        mShowProgressDialog=false;
        mCurrentMessage=null;
        updateViews(VIEW_SHOW_QUESTION);
      }
    }
  }
}
