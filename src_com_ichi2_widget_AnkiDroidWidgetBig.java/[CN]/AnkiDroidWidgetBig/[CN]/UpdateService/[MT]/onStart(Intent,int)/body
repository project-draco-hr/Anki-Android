{
  Log.i(AnkiDroidApp.TAG,"BigWidget: OnStart");
  if (intent == null) {
  }
 else   if (contentService == null) {
    Log.i(AnkiDroidApp.TAG,"binding content service");
    updateViews();
    tempIntent=intent;
    sContext=this;
    Intent contentIntent=new Intent(this,WidgetContentService.class);
    this.bindService(contentIntent,localServiceConnection,Context.BIND_AUTO_CREATE);
  }
 else   if (intent.getAction() != null) {
    String action=intent.getAction();
    if (ACTION_NOTHING.equals(action)) {
    }
 else     if (ACTION_UPDATE.equals(action)) {
      if (!contentService.mWaitForAsyncTask) {
        if (!intent.getBooleanExtra(EXTRA_PROGRESSDIALOG,false)) {
          contentService.mBigShowProgressDialog=false;
          updateViews(intent.getIntExtra(EXTRA_VIEW,VIEW_NOT_SPECIFIED));
        }
 else         if (!contentService.mBigShowProgressDialog) {
          showProgressDialog();
        }
      }
    }
 else     if (ACTION_OPENCOLLECTION.equals(action)) {
      showProgressDialog();
      if (contentService.mCol == null) {
        contentService.mBigCurrentMessage=getResources().getString(R.string.open_collection);
        DeckTask.launchDeckTask(DeckTask.TASK_TYPE_OPEN_COLLECTION,mOpenCollectionHandler,new DeckTask.TaskData(AnkiDroidApp.getCollectionPath()));
        updateViews();
      }
 else {
        showDeckSelectionDialog();
      }
    }
 else     if (ACTION_OPENDECK.equals(action)) {
      showProgressDialog();
      if (contentService != null) {
        contentService.mCol.getDecks().select(intent.getLongExtra(DeckPicker.EXTRA_DECK_ID,1));
        DeckTask.launchDeckTask(DeckTask.TASK_TYPE_UPDATE_VALUES_FROM_DECK,mOpenDeckHandler,new DeckTask.TaskData(contentService.mCol.getSched(),true));
      }
    }
 else     if (ACTION_CLOSEDECK.equals(action)) {
      updateViews(VIEW_DECKS);
    }
 else     if (ACTION_UNDO.equals(action)) {
      if (contentService.mCol != null) {
        if (contentService.mCol.undoAvailable()) {
        }
      }
 else {
        updateViews(VIEW_DECKS);
      }
    }
 else     if (ACTION_BURY_CARD.equals(action)) {
      if (contentService.mCol != null) {
      }
 else {
        updateViews(VIEW_DECKS);
      }
    }
 else     if (action.startsWith(ACTION_ANSWER)) {
      int ease=intent.getIntExtra(EXTRA_EASE,0);
      if (ease == 0) {
        updateViews(VIEW_SHOW_ANSWER);
      }
 else {
        if (contentService.mCol != null) {
          if (contentService.mCurrentCard.timeTaken() > 12) {
            contentService.mCurrentCard.setTimer(Utils.now() - 6);
          }
          DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ANSWER_CARD,mAnswerCardHandler,new DeckTask.TaskData(contentService.mCol.getSched(),contentService.mCurrentCard,ease));
        }
 else {
          updateViews(VIEW_DECKS);
        }
      }
    }
 else     if (ACTION_SHOW_RESTRICTIONS_DIALOG.equals(action)) {
      Intent dialogIntent=new Intent(this,WidgetDialog.class);
      dialogIntent.setAction(WidgetDialog.ACTION_SHOW_RESTRICTIONS_DIALOG);
      dialogIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
      this.startActivity(dialogIntent);
    }
 else     if (ACTION_OPEN.equals(action)) {
    }
 else     if (ACTION_CARDEDITOR.equals(action)) {
    }
 else     if (ACTION_FACTADDER.equals(action)) {
    }
 else     if (ACTION_HELP.equals(action)) {
      if (contentService.mBigShowProgressDialog) {
        contentService.mBigShowProgressDialog=false;
        updateViews(VIEW_SHOW_HELP);
        contentService.mBigShowProgressDialog=true;
      }
 else {
        updateViews(VIEW_SHOW_HELP);
      }
    }
 else     if (ACTION_LEARN_MORE.equals(action)) {
    }
 else     if (ACTION_REVIEW_EARLY.equals(action)) {
    }
 else     if (ACTION_SHOW_TOMORROW_DUES.equals(action)) {
      if (contentService.mTomorrowDues == null) {
        showProgressDialog();
        contentService.mWaitForAsyncTask=true;
        AsyncTask<String,Void,DeckStatus[]> getTomorrowDuesAsyncTask=new GetTomorrowDueAsyncTask();
        getTomorrowDuesAsyncTask.execute(AnkiDroidApp.getSharedPrefs(AnkiDroidWidgetBig.UpdateService.this).getString("deckPath",AnkiDroidApp.getStorageDirectory() + "/AnkiDroid"));
      }
 else {
        updateViews(VIEW_CONGRATS);
      }
    }
  }
}
