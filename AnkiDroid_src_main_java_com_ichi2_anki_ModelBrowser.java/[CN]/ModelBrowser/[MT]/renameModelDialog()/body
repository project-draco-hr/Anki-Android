{
  try {
    mModelNameInput=new EditText(this);
    mModelNameInput.setSingleLine(true);
    mModelNameInput.setText(mModels.get(mModelListPosition).getString("name"));
    mModelNameInput.setSelection(mModelNameInput.getText().length());
    new MaterialDialog.Builder(this).title(R.string.rename_model).positiveText(R.string.rename).negativeText(R.string.dialog_cancel).customView(mModelNameInput,true).callback(new MaterialDialog.ButtonCallback(){
      @Override public void onPositive(      MaterialDialog dialog){
        JSONObject model=mModels.get(mModelListPosition);
        String deckName=mModelNameInput.getText().toString().replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]","");
        getCol().getDecks().id(deckName,true);
        if (deckName.length() > 0) {
          try {
            model.put("name",deckName);
            col.getModels().update(model);
            mModels.get(mModelListPosition).put("name",deckName);
            mModelDisplayList.set(mModelListPosition,new DisplayPair(mModels.get(mModelListPosition).getString("name"),mCardCounts.get(mModelListPosition)));
          }
 catch (          JSONException e) {
            throw new RuntimeException(e);
          }
          refreshList();
        }
 else {
          showToast(getResources().getString(R.string.toast_empty_name));
        }
      }
    }
).show();
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
}
