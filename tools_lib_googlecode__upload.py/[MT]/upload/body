def upload(file, project_name, user_name, password, summary, labels=None):
    "Upload a file to a Google Code project's file server.\n\n  Args:\n    file: The local path to the file.\n    project_name: The name of your project on Google Code.\n    user_name: Your Google account name.\n    password: The googlecode.com password for your account.\n              Note that this is NOT your global Google Account password!\n    summary: A small description for the file.\n    labels: an optional list of label strings with which to tag the file.\n\n  Returns: a tuple:\n    http_status: 201 if the upload succeeded, something else if an\n                 error occured.\n    http_reason: The human-readable string associated with http_status\n    file_url: If the upload succeeded, the URL of the file on Google\n              Code, None otherwise.\n  "
    if user_name.endswith('@gmail.com'):
        user_name = user_name[:user_name.index('@gmail.com')]
    form_fields = [('summary', summary)]
    if (labels is not None):
        form_fields.extend([('label', l.strip()) for l in labels])
    (content_type, body) = encode_upload_request(form_fields, file)
    upload_host = ('%s.googlecode.com' % project_name)
    upload_uri = '/files'
    auth_token = base64.b64encode(('%s:%s' % (user_name, password)))
    headers = {'Authorization': ('Basic %s' % auth_token), 'User-Agent': 'Googlecode.com uploader v0.9.4', 'Content-Type': content_type, }
    server = httplib.HTTPSConnection(upload_host)
    server.request('POST', upload_uri, body, headers)
    resp = server.getresponse()
    server.close()
    if (resp.status == 201):
        location = resp.getheader('Location', None)
    else:
        location = None
    return (resp.status, resp.reason, location)
