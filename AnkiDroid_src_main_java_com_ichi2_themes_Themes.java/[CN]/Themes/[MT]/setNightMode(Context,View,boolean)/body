{
  Resources res=context.getResources();
  View flipCard=view.findViewById(R.id.flashcard_layout_flip);
  View ease1=view.findViewById(R.id.flashcard_layout_ease1);
  View ease2=view.findViewById(R.id.flashcard_layout_ease2);
  View ease3=view.findViewById(R.id.flashcard_layout_ease3);
  View ease4=view.findViewById(R.id.flashcard_layout_ease4);
  View mAnswerField=view.findViewById(R.id.answer_field);
  final Drawable[] defaultButtons=new Drawable[]{flipCard.getBackground(),ease1.getBackground(),ease2.getBackground(),ease3.getBackground(),ease4.getBackground()};
  int foregroundColor;
  int nextTimeRecommendedColor;
  if (nightMode) {
    flipCard.setBackgroundResource(mNightModeButton);
    ease1.setBackgroundResource(mNightModeButton);
    ease2.setBackgroundResource(mNightModeButton);
    ease3.setBackgroundResource(mNightModeButton);
    ease4.setBackgroundResource(mNightModeButton);
    mAnswerField.setBackgroundResource(mNightModeButton);
    foregroundColor=Color.WHITE;
    nextTimeRecommendedColor=res.getColor(R.color.next_time_recommended_color_inv);
switch (mCurrentTheme) {
case THEME_WHITE:
      view.setBackgroundColor(res.getColor(R.color.white_background_night));
    ((View)view.getParent()).setBackgroundColor(res.getColor(R.color.white_background_night));
  break;
default :
view.setBackgroundColor(res.getColor(R.color.black));
break;
}
}
 else {
foregroundColor=Color.BLACK;
nextTimeRecommendedColor=res.getColor(R.color.next_time_recommended_color);
flipCard.setBackgroundDrawable(defaultButtons[0]);
ease1.setBackgroundDrawable(defaultButtons[1]);
ease2.setBackgroundDrawable(defaultButtons[2]);
ease3.setBackgroundDrawable(defaultButtons[3]);
ease4.setBackgroundDrawable(defaultButtons[4]);
}
return new int[]{foregroundColor,nextTimeRecommendedColor};
}
