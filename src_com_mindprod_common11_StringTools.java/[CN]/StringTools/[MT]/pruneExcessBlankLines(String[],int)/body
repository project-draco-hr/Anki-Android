{
  int firstNonBlankLine=lines.length;
  for (int i=0; i < lines.length; i++) {
    if (lines[i].trim().length() > 0) {
      firstNonBlankLine=i;
      break;
    }
  }
  int lastNonBlankLine=-1;
  for (int i=lines.length - 1; i > 0; i--) {
    if (lines[i].trim().length() > 0) {
      lastNonBlankLine=i;
      break;
    }
  }
  if (firstNonBlankLine > lastNonBlankLine) {
    return new String[0];
  }
  Vector keep=new Vector(lastNonBlankLine - firstNonBlankLine + 1);
  int pendingBlankLines=0;
  for (int i=firstNonBlankLine; i <= lastNonBlankLine; i++) {
    if (lines[i].trim().length() == 0) {
      pendingBlankLines++;
    }
 else {
      if (pendingBlankLines >= minBlankLinesToKeep) {
        keep.add("");
      }
      keep.add(lines[i]);
      pendingBlankLines=0;
    }
  }
  return (String[])keep.toArray(new String[keep.size()]);
}
