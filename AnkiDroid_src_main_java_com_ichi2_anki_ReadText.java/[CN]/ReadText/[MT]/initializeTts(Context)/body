{
  mReviewer=new WeakReference<Context>(context);
  mTts=new TextToSpeech(context,new TextToSpeech.OnInitListener(){
    @Override public void onInit(    int status){
      if (status == TextToSpeech.SUCCESS) {
        buildAvailableLanguages();
        if (availableTtsLocales.size() > 0) {
          Timber.d("TTS initialized and available languages found");
          ((AbstractFlashcardViewer)mReviewer.get()).ttsInitialized();
        }
 else {
          Toast.makeText(mReviewer.get(),mReviewer.get().getString(R.string.no_tts_available_message),Toast.LENGTH_LONG).show();
          Timber.w("TTS initialized but no available languages found");
        }
      }
 else {
        Toast.makeText(mReviewer.get(),mReviewer.get().getString(R.string.no_tts_available_message),Toast.LENGTH_LONG).show();
      }
      CompatHelper.getCompat().setTtsOnUtteranceProgressListener(mTts);
    }
  }
);
  mTtsParams=new HashMap<String,String>();
  mTtsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID,"stringId");
  Toast.makeText(context,context.getString(R.string.initializing_tts),Toast.LENGTH_LONG).show();
}
