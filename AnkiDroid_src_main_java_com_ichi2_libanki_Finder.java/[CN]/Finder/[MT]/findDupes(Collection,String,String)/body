{
  if (!TextUtils.isEmpty(search)) {
    search="(" + search + ") ";
  }
  search+="'" + fieldName + ":*'";
  Map<String,List<Long>> vals=new HashMap<String,List<Long>>();
  List<Pair<String,List<Long>>> dupes=new ArrayList<Pair<String,List<Long>>>();
  Map<Long,Integer> fields=new HashMap<Long,Integer>();
  Cursor cur=null;
  try {
    cur=col.getDb().getDatabase().rawQuery("select id, mid, flds from notes where id in " + Utils.ids2str(col.findNotes(search)),null);
    while (cur.moveToNext()) {
      long nid=cur.getLong(0);
      long mid=cur.getLong(1);
      String[] flds=Utils.splitFields(cur.getString(2));
      Integer ord=ordForMid(col,fields,mid,fieldName);
      if (ord == null) {
        continue;
      }
      String val=flds[fields.get(mid)];
      val=Utils.stripHTMLMedia(val);
      if (TextUtils.isEmpty(val)) {
        continue;
      }
      if (!vals.containsKey(val)) {
        vals.put(val,new ArrayList<Long>());
      }
      vals.get(val).add(nid);
      if (vals.get(val).size() == 2) {
        dupes.add(new Pair<String,List<Long>>(val,vals.get(val)));
      }
    }
  }
  finally {
    if (cur != null) {
      cur.close();
    }
  }
  return dupes;
}
