{
  super.onCreate(savedInstanceState);
  final Resources res=getResources();
  final MaterialDialog.Builder builder=new MaterialDialog.Builder(getActivity());
  int type=getArguments().getInt("type");
  if (type == CARD_BROWSER_MY_SEARCHES_TYPE_LIST) {
    mSavedFilters=(HashMap<String,String>)getArguments().getSerializable("savedFilters");
    mSearchesAdapter=new MySearchesArrayAdapter(getActivity(),new ArrayList<>(mSavedFilters.keySet()));
    mSearchesAdapter.notifyDataSetChanged();
    builder.title(res.getString(R.string.card_browser_list_my_searches_title)).adapter(mSearchesAdapter,new MaterialDialog.ListCallback(){
      @Override public void onSelection(      MaterialDialog dialog,      View itemView,      int which,      CharSequence text){
        mMySearchesDialogListener.OnSelection(mSearchesAdapter.getItem(which));
        dialog.dismiss();
      }
    }
);
  }
 else   if (type == CARD_BROWSER_MY_SEARCHES_TYPE_SAVE) {
    mCurrentSearchTerms=getArguments().getString("currentSearchTerms");
    builder.title(getString(R.string.card_browser_list_my_searches_save)).positiveText(getString(android.R.string.ok)).negativeText(getString(R.string.cancel)).input(R.string.card_browser_list_my_searches_new_name,R.string.empty_string,new MaterialDialog.InputCallback(){
      @Override public void onInput(      MaterialDialog dialog,      CharSequence text){
        mMySearchesDialogListener.OnSaveSearch(text.toString(),mCurrentSearchTerms);
      }
    }
);
  }
  MaterialDialog dialog=builder.build();
  if (dialog.getListView() != null) {
    dialog.getListView().setDivider(new ColorDrawable(res.getColor(R.color.material_grey_600)));
    dialog.getListView().setDividerHeight(1);
    float scale=res.getDisplayMetrics().density;
    int dpAsPixels=(int)(5 * scale + 0.5f);
    dialog.getView().setPadding(dpAsPixels,0,dpAsPixels,dpAsPixels);
  }
  return dialog;
}
