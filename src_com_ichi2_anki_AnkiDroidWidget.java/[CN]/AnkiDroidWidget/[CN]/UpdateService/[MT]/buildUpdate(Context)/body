{
  Log.i(AnkiDroidApp.TAG,"buildUpdate");
  RemoteViews updateViews=new RemoteViews(context.getPackageName(),R.layout.ankidroid_widget_view);
  Deck currentDeck=AnkiDroidApp.deck();
  if (!AnkiDroidApp.isSdCardMounted()) {
    updateViews.setTextViewText(R.id.anki_droid_text,context.getText(R.string.sdcard_missing_message));
    return updateViews;
  }
  if (currentDeck != null) {
    currentDeck.closeDeck();
  }
  ArrayList<DeckInformation> decks=fetchDeckInformation();
  if (currentDeck != null) {
    AnkiDroidApp.setDeck(currentDeck);
    Deck.openDeck(currentDeck.getDeckPath());
  }
  SpannableStringBuilder sb=new SpannableStringBuilder();
  int totalDue=0;
  int nbDecks=decks.size();
  for (int i=0; i < nbDecks && i < MAX_DECK_NUM; i++) {
    DeckInformation deck=decks.get(i);
    sb.append(deck.getDeckText());
    sb.append('\n');
    totalDue+=deck.mDueCards;
  }
  if (sb.length() > 1) {
    sb.subSequence(0,sb.length() - 1);
  }
  updateViews.setTextViewText(R.id.anki_droid_text,sb);
  SharedPreferences preferences=PrefSettings.getSharedPrefs(context);
  int minimumCardsDueForNotification=Integer.parseInt(preferences.getString("minimumCardsDueForNotification","25"));
  if (totalDue >= minimumCardsDueForNotification) {
    String ns=Context.NOTIFICATION_SERVICE;
    NotificationManager mNotificationManager=(NotificationManager)getSystemService(ns);
    int icon=R.drawable.anki;
    CharSequence tickerText=String.format(getString(R.string.widget_minimum_cards_due_notification_ticker_text),totalDue);
    long when=System.currentTimeMillis();
    Notification notification=new Notification(icon,tickerText,when);
    if (preferences.getBoolean("widgetVibrate",false)) {
      notification.defaults|=Notification.DEFAULT_VIBRATE;
    }
    if (preferences.getBoolean("widgetBlink",false)) {
      notification.defaults|=Notification.DEFAULT_LIGHTS;
    }
    Context appContext=getApplicationContext();
    CharSequence contentTitle=getText(R.string.widget_minimum_cards_due_notification_ticker_title);
    String contentText=sb.toString();
    Intent notificationIntent=new Intent(this,AnkiDroidApp.class);
    PendingIntent contentIntent=PendingIntent.getActivity(this,0,notificationIntent,0);
    notification.setLatestEventInfo(appContext,contentTitle,contentText,contentIntent);
    final int WIDGET_NOTIFY_ID=1;
    mNotificationManager.notify(WIDGET_NOTIFY_ID,notification);
  }
  return updateViews;
}
