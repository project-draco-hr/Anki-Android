{
  Log.i(TAG,"buildUpdate");
  RemoteViews updateViews=new RemoteViews(context.getPackageName(),R.layout.ankidroid_widget_view);
  Deck currentDeck=AnkiDroidApp.deck();
  ArrayList<DeckInformation> decks=fetchDeckInformation();
  StringBuilder sb=new StringBuilder();
  int totalDue=0;
  for (int i=0; i < decks.size() && i < 3; i++) {
    DeckInformation deck=decks.get(i);
    sb.append(String.format("%s\n",deck.toString()));
    totalDue+=deck.getDueCards();
  }
  if (sb.length() > 1) {
    sb.substring(0,sb.length() - 1);
  }
  updateViews.setTextViewText(R.id.anki_droid_text,sb);
  if (currentDeck != null) {
    AnkiDroidApp.setDeck(currentDeck);
    Deck.openDeck(currentDeck.getDeckPath());
  }
  if (totalDue > 30) {
    String ns=Context.NOTIFICATION_SERVICE;
    NotificationManager mNotificationManager=(NotificationManager)getSystemService(ns);
    int icon=R.drawable.anki;
    CharSequence tickerText=String.format("%d AnkiDroid cards due",totalDue);
    long when=System.currentTimeMillis();
    Notification notification=new Notification(icon,tickerText,when);
    notification.defaults|=Notification.DEFAULT_VIBRATE;
    notification.defaults|=Notification.DEFAULT_LIGHTS;
    Context appContext=getApplicationContext();
    CharSequence contentTitle="Cards Due";
    String contentText=sb.toString();
    Intent notificationIntent=new Intent(this,AnkiDroid.class);
    PendingIntent contentIntent=PendingIntent.getActivity(this,0,notificationIntent,0);
    notification.setLatestEventInfo(appContext,contentTitle,contentText,contentIntent);
    final int WIDGET_NOTIFY_ID=1;
    mNotificationManager.notify(WIDGET_NOTIFY_ID,notification);
  }
  return updateViews;
}
