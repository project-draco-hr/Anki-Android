{
  Log.i(AnkiDroidApp.TAG,"buildUpdate");
  RemoteViews updateViews=new RemoteViews(context.getPackageName(),R.layout.widget);
  Deck currentDeck=AnkiDroidApp.deck();
  Intent ankiDroidIntent=new Intent(context,StudyOptions.class);
  ankiDroidIntent.setAction(Intent.ACTION_MAIN);
  ankiDroidIntent.addCategory(Intent.CATEGORY_LAUNCHER);
  PendingIntent pendingAnkiDroidIntent=PendingIntent.getActivity(context,0,ankiDroidIntent,0);
  updateViews.setOnClickPendingIntent(R.id.anki_droid_logo,pendingAnkiDroidIntent);
  if (!AnkiDroidApp.isSdCardMounted()) {
    updateViews.setTextViewText(R.id.anki_droid_title,context.getText(R.string.sdcard_missing_message));
    updateViews.setTextViewText(R.id.anki_droid_name,"");
    updateViews.setTextViewText(R.id.anki_droid_status,"");
    return updateViews;
  }
  if (currentDeck != null) {
    currentDeck.closeDeck();
  }
  ArrayList<DeckInformation> decks=fetchDeckInformation();
  if (currentDeck != null) {
    AnkiDroidApp.setDeck(currentDeck);
    Deck.openDeck(currentDeck.getDeckPath());
  }
  ArrayList<DeckInformation> dueDecks=new ArrayList<DeckInformation>();
  int totalDue=0;
  for (int i=0; i < decks.size(); i++) {
    DeckInformation deck=decks.get(i);
    if (deck.mDueCards > 0) {
      totalDue+=deck.mDueCards;
      dueDecks.add(deck);
    }
  }
  if (totalDue > 0) {
    Resources resources=getResources();
    String decksText=resources.getQuantityString(R.plurals.widget_decks,dueDecks.size(),dueDecks.size());
    String text=resources.getQuantityString(R.plurals.widget_cards_in_decks_due,totalDue,totalDue,decksText);
    updateViews.setTextViewText(R.id.anki_droid_title,text);
    int currentDueDeck=0;
    DeckInformation deckInformation=dueDecks.get(currentDueDeck);
    updateViews.setTextViewText(R.id.anki_droid_name,deckInformation.mDeckName);
    updateViews.setTextViewText(R.id.anki_droid_status,deckInformation.getDeckStatus());
    if (currentDueDeck > 0) {
      updateViews.setImageViewResource(R.id.anki_droid_prev,R.drawable.widget_left_arrow);
      updateViews.setOnClickPendingIntent(R.id.anki_droid_prev,getPrevPendingIntent(context));
    }
 else {
      updateViews.setImageViewResource(R.id.anki_droid_prev,R.drawable.widget_left_arrow_disabled);
    }
    if (currentDueDeck < dueDecks.size() - 1) {
      updateViews.setImageViewResource(R.id.anki_droid_next,R.drawable.widget_right_arrow);
      updateViews.setOnClickPendingIntent(R.id.anki_droid_next,getNextPendingIntent(context));
    }
 else {
      updateViews.setImageViewResource(R.id.anki_droid_next,R.drawable.widget_right_arrow_disabled);
    }
  }
 else {
    updateViews.setTextViewText(R.id.anki_droid_title,context.getString(R.string.widget_no_cards_due));
    updateViews.setTextViewText(R.id.anki_droid_name,"");
    updateViews.setTextViewText(R.id.anki_droid_status,"");
  }
  SharedPreferences preferences=PrefSettings.getSharedPrefs(context);
  int minimumCardsDueForNotification=Integer.parseInt(preferences.getString("minimumCardsDueForNotification","25"));
  if (totalDue >= minimumCardsDueForNotification) {
    String ns=Context.NOTIFICATION_SERVICE;
    NotificationManager mNotificationManager=(NotificationManager)getSystemService(ns);
    int icon=R.drawable.anki;
    CharSequence tickerText=String.format(getString(R.string.widget_minimum_cards_due_notification_ticker_text),totalDue);
    long when=System.currentTimeMillis();
    Notification notification=new Notification(icon,tickerText,when);
    if (preferences.getBoolean("widgetVibrate",false)) {
      notification.defaults|=Notification.DEFAULT_VIBRATE;
    }
    if (preferences.getBoolean("widgetBlink",false)) {
      notification.defaults|=Notification.DEFAULT_LIGHTS;
    }
    Context appContext=getApplicationContext();
    CharSequence contentTitle=getText(R.string.widget_minimum_cards_due_notification_ticker_title);
    notification.setLatestEventInfo(appContext,contentTitle,tickerText,pendingAnkiDroidIntent);
    final int WIDGET_NOTIFY_ID=1;
    mNotificationManager.notify(WIDGET_NOTIFY_ID,notification);
  }
  return updateViews;
}
