{
  if (deck.lastSync <= 0) {
    Log.i(TAG,"deck.lastSync <= 0");
    return true;
  }
  for (int i=0; i < sums.length(); i++) {
    try {
      JSONObject summary=sums.getJSONObject(i);
      Iterator keys=summary.keys();
      while (keys.hasNext()) {
        String key=(String)keys.next();
        JSONArray l=(JSONArray)summary.get(key);
        Log.i(TAG,"Key " + key + ", length = "+ l.length());
        if (l.length() > 500) {
          return true;
        }
      }
    }
 catch (    JSONException e) {
      Log.i(TAG,"JSONException = " + e.getMessage());
    }
  }
  Log.i(TAG,"Count reviewHistory = " + AnkiDb.queryScalar("SELECT count() FROM reviewHistory WHERE time > " + deck.lastSync));
  if (AnkiDb.queryScalar("SELECT count() FROM reviewHistory WHERE time > " + deck.lastSync) > 500) {
    return true;
  }
  Log.i(TAG,"lastSync = " + deck.lastSync);
  Date lastDay=new Date(java.lang.Math.max(0,(long)(deck.lastSync - 60 * 60 * 24) * 1000));
  Log.i(TAG,"lastDay = " + lastDay.toString() + ", lastDayInMillis = "+ lastDay.getTime());
  Log.i(TAG,"Count stats = " + AnkiDb.queryScalar("SELECT count() FROM stats WHERE day >= \"" + lastDay.toString() + "\""));
  if (AnkiDb.queryScalar("SELECT count() FROM stats WHERE day >= \"" + lastDay.toString() + "\"") > 100) {
    return true;
  }
  return false;
}
