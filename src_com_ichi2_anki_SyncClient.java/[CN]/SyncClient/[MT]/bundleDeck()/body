{
  JSONObject bundledDeck=new JSONObject();
  try {
    bundledDeck.put("averageFactor",deck.getAverageFactor());
    bundledDeck.put("cardCount",deck.getCardCount());
    bundledDeck.put("collapseTime",deck.getCollapseTime());
    bundledDeck.put("created",deck.getCreated());
    bundledDeck.put("delay0",deck.getDelay0());
    bundledDeck.put("delay1",deck.getDelay1());
    bundledDeck.put("delay2",deck.getDelay2());
    bundledDeck.put("description",deck.getDescription());
    bundledDeck.put("easyIntervalMax",deck.getEasyIntervalMax());
    bundledDeck.put("easyIntervalMin",deck.getEasyIntervalMin());
    bundledDeck.put("factCount",deck.getFactCount());
    bundledDeck.put("failedCardMax",deck.getFailedCardMax());
    bundledDeck.put("failedNowCount",deck.getFailedNowCount());
    bundledDeck.put("failedSoonCount",deck.getFailedSoonCount());
    bundledDeck.put("hardIntervalMax",deck.getHardIntervalMax());
    bundledDeck.put("hardIntervalMin",deck.getHardIntervalMin());
    bundledDeck.put("highPriority",deck.getHighPriority());
    bundledDeck.put("id",deck.getId());
    bundledDeck.put("lastLoaded",deck.getLastLoaded());
    bundledDeck.put("lastSync",deck.getLastSync());
    bundledDeck.put("lowPriority",deck.getLowPriority());
    bundledDeck.put("medPriority",deck.getMedPriority());
    bundledDeck.put("midIntervalMax",deck.getMidIntervalMax());
    bundledDeck.put("midIntervalMin",deck.getMidIntervalMin());
    bundledDeck.put("modified",deck.getModified());
    bundledDeck.put("newCardModulus",deck.getNewCardModulus());
    bundledDeck.put("newCount",deck.getNewCount());
    bundledDeck.put("newCountToday",deck.getNewCountToday());
    bundledDeck.put("newEarly",deck.isNewEarly());
    bundledDeck.put("revCount",deck.getRevCount());
    bundledDeck.put("reviewEarly",deck.isReviewEarly());
    bundledDeck.put("suspended",deck.getSuspended());
    bundledDeck.put("undoEnabled",deck.isUndoEnabled());
    bundledDeck.put("utcOffset",deck.getUtcOffset());
    JSONArray meta=new JSONArray();
    Cursor cursor=AnkiDatabaseManager.getDatabase(deck.getDeckPath()).getDatabase().rawQuery("SELECT * FROM deckVars",null);
    while (cursor.moveToNext()) {
      JSONArray deckVar=new JSONArray();
      deckVar.put(cursor.getString(0));
      deckVar.put(cursor.getString(1));
      meta.put(deckVar);
    }
    cursor.close();
    bundledDeck.put("meta",meta);
  }
 catch (  JSONException e) {
    Log.i(AnkiDroidApp.TAG,"JSONException = " + e.getMessage());
  }
  Log.i(AnkiDroidApp.TAG,"Deck =");
  Utils.printJSONObject(bundledDeck,false);
  return bundledDeck;
}
