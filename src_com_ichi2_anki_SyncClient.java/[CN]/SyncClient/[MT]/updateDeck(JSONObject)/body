{
  try {
    JSONArray meta=deckPayload.getJSONArray("meta");
    String sqlMeta="INSERT OR REPLACE INTO deckVars (key, value) VALUES(?,?)";
    SQLiteStatement statement=AnkiDatabaseManager.getDatabase(deck.getDeckPath()).getDatabase().compileStatement(sqlMeta);
    int lenMeta=meta.length();
    for (int i=0; i < lenMeta; i++) {
      JSONArray deckVar=meta.getJSONArray(i);
      statement.bindString(1,deckVar.getString(0));
      statement.bindString(2,deckVar.getString(1));
      statement.execute();
    }
    statement.close();
    deck.setAverageFactor(deckPayload.getDouble("averageFactor"));
    deck.setCardCount(deckPayload.getInt("cardCount"));
    deck.setCollapseTime(deckPayload.getDouble("collapseTime"));
    deck.setCreated(deckPayload.getDouble("created"));
    deck.setCurrentModelId(deckPayload.getLong("currentModelId"));
    deck.setDelay0(deckPayload.getDouble("delay0"));
    deck.setDelay1(deckPayload.getDouble("delay1"));
    deck.setDelay2(deckPayload.getDouble("delay2"));
    deck.setDescription(deckPayload.getString("description"));
    deck.setEasyIntervalMax(deckPayload.getDouble("easyIntervalMax"));
    deck.setEasyIntervalMin(deckPayload.getDouble("easyIntervalMin"));
    deck.setFactCount(deckPayload.getInt("factCount"));
    deck.setFailedCardMax(deckPayload.getInt("failedCardMax"));
    deck.setFailedNowCount(deckPayload.getInt("failedNowCount"));
    deck.setFailedSoonCount(deckPayload.getInt("failedSoonCount"));
    deck.setHardIntervalMax(deckPayload.getDouble("hardIntervalMax"));
    deck.setHardIntervalMin(deckPayload.getDouble("hardIntervalMin"));
    deck.setHighPriority(deckPayload.getString("highPriority"));
    deck.setId(deckPayload.getLong("id"));
    deck.setLastLoaded(deckPayload.getDouble("lastLoaded"));
    deck.setLastSync(deckPayload.getDouble("modified"));
    deck.setLowPriority(deckPayload.getString("lowPriority"));
    deck.setMedPriority(deckPayload.getString("medPriority"));
    deck.setMidIntervalMax(deckPayload.getDouble("midIntervalMax"));
    deck.setMidIntervalMin(deckPayload.getDouble("midIntervalMin"));
    deck.setModified(deckPayload.getDouble("modified"));
    deck.setNewCardModulus(deckPayload.getInt("newCardModulus"));
    deck.setNewCount(deckPayload.getInt("newCount"));
    deck.setNewCountToday(deckPayload.getInt("newCountToday"));
    deck.setNewEarly(deckPayload.getBoolean("newEarly"));
    deck.setRevCount(deckPayload.getInt("revCount"));
    deck.setReviewEarly(deckPayload.getBoolean("reviewEarly"));
    deck.setSuspended(deckPayload.getString("suspended"));
    deck.setUndoEnabled(deckPayload.getBoolean("undoEnabled"));
    deck.setUtcOffset(deckPayload.getDouble("utcOffset"));
    deck.commitToDB();
    deck.updateDynamicIndices();
  }
 catch (  JSONException e) {
    Log.i(AnkiDroidApp.TAG,"JSONException = " + e.getMessage());
  }
}
