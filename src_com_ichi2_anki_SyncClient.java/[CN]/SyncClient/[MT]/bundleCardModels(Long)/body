{
  JSONArray cardModels=new JSONArray();
  Cursor cursor=AnkiDatabaseManager.getDatabase(mDeck.getDeckPath()).getDatabase().rawQuery("SELECT * FROM cardModels WHERE modelId = " + id,null);
  while (cursor.moveToNext()) {
    JSONObject cardModel=new JSONObject();
    try {
      cardModel.put("id",cursor.getLong(0));
      cardModel.put("ordinal",cursor.getInt(1));
      cardModel.put("modelId",cursor.getLong(2));
      cardModel.put("name",cursor.getString(3));
      cardModel.put("description",cursor.getString(4));
      cardModel.put("active",cursor.getString(5));
      cardModel.put("qformat",cursor.getString(6));
      cardModel.put("aformat",cursor.getString(7));
      cardModel.put("lformat",cursor.getString(8));
      cardModel.put("qedformat",cursor.getString(9));
      cardModel.put("aedformat",cursor.getString(10));
      cardModel.put("questionInAnswer",cursor.getString(11));
      cardModel.put("questionFontFamily",cursor.getString(12));
      cardModel.put("questionFontSize ",cursor.getInt(13));
      cardModel.put("questionFontColour",cursor.getString(14));
      cardModel.put("questionAlign",cursor.getInt(15));
      cardModel.put("answerFontFamily",cursor.getString(16));
      cardModel.put("answerFontSize",cursor.getInt(17));
      cardModel.put("answerFontColour",cursor.getString(18));
      cardModel.put("answerAlign",cursor.getInt(19));
      cardModel.put("lastFontFamily",cursor.getString(20));
      cardModel.put("lastFontSize",cursor.getInt(21));
      cardModel.put("lastFontColour",cursor.getString(22));
      cardModel.put("editQuestionFontFamily",cursor.getString(23));
      cardModel.put("editQuestionFontSize",cursor.getInt(24));
      cardModel.put("editAnswerFontFamily",cursor.getString(25));
      cardModel.put("editAnswerFontSize",cursor.getInt(26));
      cardModel.put("allowEmptyAnswer",cursor.getString(27));
      cardModel.put("typeAnswer",cursor.getString(28));
    }
 catch (    JSONException e) {
      Log.i(AnkiDroidApp.TAG,"JSONException = " + e.getMessage());
    }
    cardModels.put(cardModel);
  }
  cursor.close();
  return cardModels;
}
