{
  int len=cards.length();
  if (len > 0) {
    AnkiDb ankiDB=AnkiDatabaseManager.getDatabase(mDeck.getDeckPath());
    ArrayList<String> ids=new ArrayList<String>();
    for (int i=0; i < len; i++) {
      ids.add(cards.getJSONArray(i).getString(0));
    }
    String idsString=Utils.ids2str(ids);
    String sql="INSERT OR REPLACE INTO cards (id, factId, cardModelId, created, modified, tags, ordinal, " + "priority, interval, lastInterval, due, lastDue, factor, firstAnswered, reps, successive, " + "averageTime, reviewTime, youngEase0, youngEase1, youngEase2, youngEase3, youngEase4, "+ "matureEase0, matureEase1, matureEase2, matureEase3, matureEase4, yesCount, noCount, question, "+ "answer, lastFactor, spaceUntil, type, combinedDue, relativeDelay, isDue) "+ "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, 0)";
    SQLiteStatement statement=ankiDB.getDatabase().compileStatement(sql);
    for (int i=0; i < len; i++) {
      JSONArray card=cards.getJSONArray(i);
      statement.bindLong(1,card.getLong(0));
      statement.bindLong(2,card.getLong(1));
      statement.bindLong(3,card.getLong(2));
      statement.bindDouble(4,card.getDouble(3));
      statement.bindDouble(5,card.getDouble(4));
      statement.bindString(6,card.getString(5));
      statement.bindLong(7,card.getInt(6));
      statement.bindLong(8,card.getInt(7));
      statement.bindDouble(9,card.getDouble(8));
      statement.bindDouble(10,card.getDouble(9));
      statement.bindDouble(11,card.getDouble(10));
      statement.bindDouble(12,card.getDouble(11));
      statement.bindDouble(13,card.getDouble(12));
      statement.bindDouble(14,card.getDouble(13));
      statement.bindLong(15,card.getInt(14));
      statement.bindLong(16,card.getInt(15));
      statement.bindDouble(17,card.getDouble(16));
      statement.bindDouble(18,card.getDouble(17));
      statement.bindLong(19,card.getInt(18));
      statement.bindLong(20,card.getInt(19));
      statement.bindLong(21,card.getInt(20));
      statement.bindLong(22,card.getInt(21));
      statement.bindLong(23,card.getInt(22));
      statement.bindLong(24,card.getInt(23));
      statement.bindLong(25,card.getInt(24));
      statement.bindLong(26,card.getInt(25));
      statement.bindLong(27,card.getInt(26));
      statement.bindLong(28,card.getInt(27));
      statement.bindLong(29,card.getInt(28));
      statement.bindLong(30,card.getInt(29));
      statement.bindString(31,card.getString(30));
      statement.bindString(32,card.getString(31));
      statement.bindDouble(33,card.getDouble(32));
      statement.bindDouble(34,card.getDouble(33));
      statement.bindLong(35,card.getInt(34));
      statement.bindDouble(36,card.getDouble(35));
      statement.bindString(37,genType(card));
      statement.execute();
    }
    statement.close();
    ankiDB.getDatabase().execSQL("DELETE FROM cardsDeleted WHERE cardId IN " + idsString);
  }
}
