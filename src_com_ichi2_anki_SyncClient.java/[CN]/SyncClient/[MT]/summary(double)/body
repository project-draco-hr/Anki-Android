{
  Log.i(TAG,"Summary Local");
  deck.lastSync=lastSync;
  deck.commitToDB();
  AnkiDb ankiDB=AnkiDatabaseManager.getDatabase(deck.deckPath);
  String lastSyncString=String.format(ENGLISH_LOCALE,"%f",lastSync);
  JSONArray cards=cursorToJSONArray(ankiDB.database.rawQuery("SELECT id, modified FROM cards WHERE modified > " + lastSyncString,null));
  JSONArray delcards=cursorToJSONArray(ankiDB.database.rawQuery("SELECT cardId, deletedTime FROM cardsDeleted WHERE deletedTime > " + lastSyncString,null));
  JSONArray facts=cursorToJSONArray(ankiDB.database.rawQuery("SELECT id, modified FROM facts WHERE modified > " + lastSyncString,null));
  JSONArray delfacts=cursorToJSONArray(ankiDB.database.rawQuery("SELECT factId, deletedTime FROM factsDeleted WHERE deletedTime > " + lastSyncString,null));
  JSONArray models=cursorToJSONArray(ankiDB.database.rawQuery("SELECT id, modified FROM models WHERE modified > " + lastSyncString,null));
  JSONArray delmodels=cursorToJSONArray(ankiDB.database.rawQuery("SELECT modelId, deletedTime FROM modelsDeleted WHERE deletedTime > " + lastSyncString,null));
  JSONArray media=cursorToJSONArray(ankiDB.database.rawQuery("SELECT id, created FROM media WHERE created > " + lastSyncString,null));
  JSONArray delmedia=cursorToJSONArray(ankiDB.database.rawQuery("SELECT mediaId, deletedTime FROM mediaDeleted WHERE deletedTime > " + lastSyncString,null));
  JSONObject summary=new JSONObject();
  try {
    summary.put("cards",cards);
    summary.put("delcards",delcards);
    summary.put("facts",facts);
    summary.put("delfacts",delfacts);
    summary.put("models",models);
    summary.put("delmodels",delmodels);
    summary.put("media",media);
    summary.put("delmedia",delmedia);
  }
 catch (  JSONException e) {
    Log.i(TAG,"JSONException = " + e.getMessage());
  }
  Log.i(TAG,"Summary Local = ");
  Utils.printJSONObject(summary,false);
  return summary;
}
