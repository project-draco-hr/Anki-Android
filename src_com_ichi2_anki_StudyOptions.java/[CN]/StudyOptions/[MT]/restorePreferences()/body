{
  SharedPreferences preferences=PrefSettings.getSharedPrefs(getBaseContext());
  mPrefDeckPath=preferences.getString("deckPath",AnkiDroidApp.getStorageDirectory());
  mPrefStudyOptions=preferences.getBoolean("study_options",true);
  mStartupMode=Integer.parseInt(preferences.getString("startup_mode",Integer.toString(SUM_DECKPICKER_ON_FIRST_START)));
  mLastTimeOpened=preferences.getLong("lastTimeOpened",0);
  mSyncEnabled=preferences.getBoolean("syncEnabled",false);
  mSwipeEnabled=preferences.getBoolean("swipe",false);
  if (!preferences.getString("lastVersion","").equals(getVersion())) {
    Editor editor=preferences.edit();
    editor.putString("lastVersion",getVersion());
    editor.commit();
    Resources res=getResources();
    AlertDialog.Builder builder=new AlertDialog.Builder(this);
    builder.setTitle(res.getString(R.string.new_version_title) + " " + getVersion());
    builder.setPositiveButton(getResources().getString(R.string.ok),null);
    View contentView=getLayoutInflater().inflate(R.layout.dialog_webview,null);
    WebView messageWebView=(WebView)contentView.findViewById(R.id.dialog_webview);
    messageWebView.setBackgroundColor(res.getColor(R.color.card_browser_background));
    messageWebView.loadDataWithBaseURL("",getVersionMessage(),"text/html","utf-8",null);
    builder.setView(contentView);
    builder.setPositiveButton(res.getString(R.string.ok),null);
    builder.setCancelable(true);
    mNewVersionAlert=builder.create();
    mNewVersion=true;
  }
  final float gestureScale=getResources().getDisplayMetrics().density;
  int sensibility=preferences.getInt("swipeSensibility",100);
  if (sensibility != 100) {
    float sens=(200 - sensibility) / 100.0f;
    sSwipeMinDistance=(int)(SWIPE_MIN_DISTANCE_DIP * sens * gestureScale + 0.5f);
    sSwipeThresholdVelocity=(int)(SWIPE_THRESHOLD_VELOCITY_DIP * sens * gestureScale + 0.5f);
    sSwipeMaxOffPath=(int)(SWIPE_MAX_OFF_PATH_DIP * Math.sqrt(sens) * gestureScale + 0.5f);
  }
 else {
    sSwipeMinDistance=(int)(SWIPE_MIN_DISTANCE_DIP * gestureScale + 0.5f);
    sSwipeThresholdVelocity=(int)(SWIPE_THRESHOLD_VELOCITY_DIP * gestureScale + 0.5f);
    sSwipeMaxOffPath=(int)(SWIPE_MAX_OFF_PATH_DIP * gestureScale + 0.5f);
  }
  mInvertedColors=preferences.getBoolean("invertedColors",false);
  setLanguage(preferences.getString("language",""));
  return preferences;
}
