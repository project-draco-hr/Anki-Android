{
  Deck deck=AnkiDroidApp.deck();
  Resources res=getResources();
  if (deck != null) {
    int[] counts=deck.getSched().counts();
    int dueCount=counts[Scheduler.COUNTS_REV] + counts[Scheduler.COUNTS_LRN];
    int cardsCount=deck.cardCount();
    setTitle(res.getQuantityString(R.plurals.studyoptions_window_title,dueCount,deck.getDeckName(),dueCount,cardsCount));
    mTextDeckName.setText(deck.getDeckName());
    mTextReviewsDue.setText(String.valueOf(dueCount));
    mTextNewToday.setText(String.valueOf(counts[Scheduler.COUNTS_NEW]));
    String etastr="-";
    int eta=deck.getSched().eta();
    if (eta != -1) {
      etastr=Integer.toString(eta / 60);
    }
    mTextETA.setText(etastr);
    boolean limited=deck.isLimitedByGroup();
    StringBuilder sb=new StringBuilder();
    if (limited) {
      sb.append(String.valueOf(deck.totalNewCardCount(true))).append("/");
    }
    sb.append(String.valueOf(deck.totalNewCardCount(false)));
    mTextNewTotal.setText(sb.toString());
    if (mDailyBar != null) {
      double[] yesRates=deck.yesRates();
      mProgressTodayYes=yesRates[0];
      mProgressMatureYes=yesRates[1];
      double[] completion=deck.completionRates(false);
      mProgressMature=completion[0];
      mProgressAll=completion[1];
      if (limited) {
        mGlobalLimitFrame.setVisibility(View.VISIBLE);
        double[] completionLimit=deck.completionRates(true);
        mProgressMatureLimit=completionLimit[0];
        mProgressAllLimit=completionLimit[1];
      }
 else {
        mGlobalLimitFrame.setVisibility(View.GONE);
      }
      updateStatisticBars();
    }
  }
}
