{
switch (mCurrentContentView) {
case CONTENT_NO_DECK:
    setTitle(R.string.app_name);
  mTextNoDeckTitle.setText(R.string.studyoptions_nodeck_title);
mTextNoDeckMessage.setText(String.format(getResources().getString(R.string.studyoptions_nodeck_message),mPrefDeckPath));
setContentView(mNoDeckView);
break;
case CONTENT_DECK_NOT_LOADED:
setTitle(R.string.app_name);
mTextNoDeckTitle.setText(R.string.studyoptions_deck_not_loaded_title);
mTextNoDeckMessage.setText(R.string.studyoptions_deck_not_loaded_message);
setContentView(mNoDeckView);
break;
case CONTENT_STUDY_OPTIONS:
case CONTENT_SESSION_COMPLETE:
if (AnkiDroidApp.deck().name().equals("cram")) {
mToggleCram.setChecked(false);
mEditNewPerDay.setEnabled(true);
mEditSessionTime.setEnabled(true);
mEditSessionQuestions.setEnabled(true);
mStudyOptionsView.findViewById(R.id.studyoptions_more).setEnabled(true);
}
if ((AnkiDroidApp.deck() != null) && (AnkiDroidApp.deck().hasFinishScheduler())) {
AnkiDroidApp.deck().finishScheduler();
}
updateValuesFromDeck();
if (mCurrentContentView == CONTENT_STUDY_OPTIONS) {
mButtonStart.setText(R.string.studyoptions_start);
mTextTitle.setText(R.string.studyoptions_title);
}
 else {
mButtonStart.setText(R.string.studyoptions_continue);
mTextTitle.setText(R.string.studyoptions_well_done);
}
setContentView(mStudyOptionsView);
break;
case CONTENT_CONGRATS:
updateValuesFromDeck();
setContentView(mCongratsView);
break;
case CONTENT_NO_EXTERNAL_STORAGE:
setTitle(R.string.app_name);
setContentView(mNoExternalStorageView);
break;
}
}
