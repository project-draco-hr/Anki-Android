{
  Resources res=getResources();
  String[] name;
  try {
    name=mCol.getDecks().current().getString("name").split("::");
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  StringBuilder nameBuilder=new StringBuilder();
  if (name.length > 0) {
    nameBuilder.append(name[0]);
  }
  if (name.length > 2) {
    nameBuilder.append("...");
  }
  if (name.length > 1) {
    nameBuilder.append("\n").append(name[name.length - 1]);
  }
  mTextDeckName.setText(nameBuilder.toString());
  String desc=mCol.getDecks().getActualDescription();
  if (desc.length() > 0) {
    mTextDeckDescription.setText(desc);
    mTextDeckDescription.setVisibility(View.VISIBLE);
  }
 else {
    mTextDeckDescription.setVisibility(View.GONE);
  }
  DeckTask.launchDeckTask(DeckTask.TASK_TYPE_UPDATE_VALUES_FROM_DECK,mUpdateValuesFromDeckListener,new DeckTask.TaskData(mCol.getSched(),reset));
}
