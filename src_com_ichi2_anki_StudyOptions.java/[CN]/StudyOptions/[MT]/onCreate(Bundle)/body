{
  super.onCreate(savedInstanceState);
  Log.i(AnkiDroidApp.TAG,"StudyOptions Activity");
  if (hasErrorFiles()) {
    Intent i=new Intent(this,ErrorReporter.class);
    startActivityForResult(i,REPORT_ERROR);
  }
  SharedPreferences preferences=restorePreferences();
  registerExternalStorageListener();
  requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
  initAllContentViews();
  initAllDialogs();
  Intent intent=getIntent();
  if ("android.intent.action.VIEW".equalsIgnoreCase(intent.getAction()) && intent.getDataString() != null) {
    deckFilename=Uri.parse(intent.getDataString()).getPath();
    Log.i(AnkiDroidApp.TAG,"onCreate - deckFilename from intent: " + deckFilename);
  }
 else   if (savedInstanceState != null) {
    deckFilename=savedInstanceState.getString("deckFilename");
    Log.i(AnkiDroidApp.TAG,"onCreate - deckFilename from savedInstanceState: " + deckFilename);
  }
 else {
    Log.i(AnkiDroidApp.TAG,"onCreate - " + preferences.getAll().toString());
    deckFilename=preferences.getString("deckFilename",null);
    Log.i(AnkiDroidApp.TAG,"onCreate - deckFilename from preferences: " + deckFilename);
  }
  if (!sdCardAvailable) {
    showContentView(CONTENT_NO_EXTERNAL_STORAGE);
  }
 else {
    if (deckFilename == null || !new File(deckFilename).exists()) {
      showContentView(CONTENT_NO_DECK);
    }
 else {
      loadPreviousDeck();
    }
  }
}
