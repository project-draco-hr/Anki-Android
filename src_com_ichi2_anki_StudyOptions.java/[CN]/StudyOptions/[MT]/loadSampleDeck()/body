{
  File decksDirectory=new File(mPrefDeckPath);
  AnkiDroidApp.createDecksDirectoryIfMissing(decksDirectory);
  File sampleDeckFile=new File(mPrefDeckPath,SAMPLE_DECK_NAME);
  if (!sampleDeckFile.exists()) {
    try {
      InputStream stream=getResources().getAssets().open(EMPTY_DECK_NAME);
      Utils.writeToFile(stream,sampleDeckFile.getAbsolutePath());
      stream.close();
    }
 catch (    IOException e) {
      Log.e(AnkiDroidApp.TAG,Log.getStackTraceString(e));
      Log.e(AnkiDroidApp.TAG,"onCreate - The copy of tutorial.anki to the sd card failed.");
      openDeckPicker();
      return;
    }
    Deck.initializeEmptyDeck(sampleDeckFile);
    String[] questions=getResources().getStringArray(R.array.tutorial_questions);
    String[] answers=getResources().getStringArray(R.array.tutorial_answers);
    Deck deck=Deck.open(sampleDeckFile.getAbsolutePath(),false);
    LinkedHashMap<Long,CardModel> cmodels=null;
    int len=Math.min(questions.length,answers.length);
    for (int i=0; i < len; i++) {
      Fact fact=deck.newFact();
      if (cmodels == null) {
        cmodels=deck.activeCardModels(fact);
      }
      int fidx=0;
      for (      Field f : fact.getFields()) {
        if (fidx == 0) {
          f.setValue(questions[i]);
        }
 else         if (fidx == 1) {
          f.setValue(answers[i]);
        }
        fidx++;
      }
      deck.addFact(fact,cmodels,i == len - 1);
    }
    mDeckFilename=sampleDeckFile;
    displayProgressDialogAndLoadDeck();
  }
 else {
    Intent deckLoadIntent=new Intent();
    deckLoadIntent.putExtra(OPT_DB,sampleDeckFile.getAbsolutePath());
    onActivityResult(PICK_DECK_REQUEST,RESULT_OK,deckLoadIntent);
  }
}
