{
  super.onActivityResult(requestCode,resultCode,intent);
  if (resultCode == CONTENT_NO_EXTERNAL_STORAGE) {
    showContentView(CONTENT_NO_EXTERNAL_STORAGE);
  }
 else   if (requestCode == PICK_DECK_REQUEST || requestCode == DOWNLOAD_PERSONAL_DECK || requestCode == DOWNLOAD_SHARED_DECK) {
    mInDeckPicker=false;
    if (requestCode == PICK_DECK_REQUEST && resultCode == RESULT_OK) {
      showContentView(CONTENT_SESSION_COMPLETE);
      mStudyOptionsMain.setVisibility(View.INVISIBLE);
    }
 else     if ((requestCode == DOWNLOAD_SHARED_DECK || requestCode == DOWNLOAD_PERSONAL_DECK) && resultCode == RESULT_OK) {
      openDeckPicker();
      return;
    }
    if (resultCode != RESULT_OK) {
      Log.e(AnkiDroidApp.TAG,"onActivityResult - Deck browser returned with error");
      boolean fileNotDeleted=mDeckFilename != null && new File(mDeckFilename).exists();
      if (!fileNotDeleted) {
        AnkiDroidApp.setDeck(null);
        showContentView(CONTENT_NO_DECK);
      }
      displayProgressDialogAndLoadDeck();
      return;
    }
    if (intent == null) {
      Log.e(AnkiDroidApp.TAG,"onActivityResult - Deck browser returned null intent");
      displayProgressDialogAndLoadDeck();
      return;
    }
    Log.i(AnkiDroidApp.TAG,"onActivityResult = OK");
    mDeckFilename=intent.getExtras().getString(OPT_DB);
    savePreferences("deckFilename");
    if (mShowWelcomeScreen) {
      mShowWelcomeScreen=false;
      savePreferences("welcome");
    }
    boolean updateAllCards=(requestCode == DOWNLOAD_SHARED_DECK);
    displayProgressDialogAndLoadDeck(updateAllCards);
  }
 else   if (requestCode == PREFERENCES_UPDATE) {
    restorePreferences();
    showContentView();
  }
 else   if (requestCode == REQUEST_REVIEW) {
    Log.i(AnkiDroidApp.TAG,"Result code = " + resultCode);
switch (resultCode) {
case Reviewer.RESULT_SESSION_COMPLETED:
      showContentView(CONTENT_SESSION_COMPLETE);
    break;
case Reviewer.RESULT_NO_MORE_CARDS:
  showContentView(CONTENT_CONGRATS);
break;
default :
showContentView(CONTENT_STUDY_OPTIONS);
break;
}
}
 else if (requestCode == ADD_FACT && resultCode == RESULT_OK) {
resetAndUpdateValuesFromDeck();
}
 else if (requestCode == BROWSE_CARDS && resultCode == RESULT_OK) {
resetAndUpdateValuesFromDeck();
}
 else if (requestCode == STATISTICS && mCurrentContentView == CONTENT_CONGRATS) {
showContentView(CONTENT_STUDY_OPTIONS);
}
 else if (requestCode == GROUP_SELECTOR) {
if (resultCode == RESULT_OK) {
mToggleLimit.setChecked(true);
}
 else {
mToggleLimit.setChecked(false);
}
resetAndUpdateValuesFromDeck();
}
}
