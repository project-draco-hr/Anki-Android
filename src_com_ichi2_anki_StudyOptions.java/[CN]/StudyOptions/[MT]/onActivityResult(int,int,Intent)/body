{
  super.onActivityResult(requestCode,resultCode,intent);
  if (mStartedByBigWidget && ((requestCode == REQUEST_REVIEW && resultCode == Reviewer.RESULT_DEFAULT) || (requestCode == PICK_DECK_REQUEST && resultCode != RESULT_OK))) {
    DeckManager.closeMainDeck(DeckManager.REQUESTING_ACTIVITY_STUDYOPTIONS);
    finish();
    return;
  }
 else {
    mStartedByBigWidget=false;
  }
  if (resultCode == CONTENT_NO_EXTERNAL_STORAGE) {
    showContentView(CONTENT_NO_EXTERNAL_STORAGE);
  }
 else   if (requestCode == PICK_DECK_REQUEST || requestCode == DOWNLOAD_PERSONAL_DECK || requestCode == DOWNLOAD_SHARED_DECK) {
    mInDeckPicker=false;
    if (requestCode == PICK_DECK_REQUEST && resultCode == RESULT_CLOSE) {
      closeStudyOptions(true);
      return;
    }
 else     if (requestCode == PICK_DECK_REQUEST && resultCode == RESULT_RESTART) {
      restartApp();
    }
    if (requestCode == PICK_DECK_REQUEST && resultCode == RESULT_OK) {
      showContentView(CONTENT_STUDY_OPTIONS);
    }
 else     if ((requestCode == DOWNLOAD_SHARED_DECK || requestCode == DOWNLOAD_PERSONAL_DECK) && resultCode == RESULT_OK) {
      openDeckPicker();
      return;
    }
    if (resultCode != RESULT_OK) {
      Log.i(AnkiDroidApp.TAG,"onActivityResult - Deck browser returned without picking new deck");
      if (mDeckFilename == null || !(new File(mDeckFilename).exists())) {
        DeckManager.closeMainDeck();
        mCompat.invalidateOptionsMenu(this);
        showContentView(CONTENT_NO_DECK);
      }
 else {
        showContentView(CONTENT_STUDY_OPTIONS);
        if (DeckManager.getMainDeck() == null || !DeckManager.getMainDeckPath().equals(mDeckFilename)) {
          if (resultCode != RESULT_DONT_RELOAD_DECK) {
            displayProgressDialogAndLoadDeck();
          }
        }
      }
      return;
    }
    if (intent == null) {
      Log.e(AnkiDroidApp.TAG,"onActivityResult - Deck browser returned null intent");
      displayProgressDialogAndLoadDeck();
      return;
    }
    Log.i(AnkiDroidApp.TAG,"onActivityResult = OK");
    mDeckFilename=intent.getExtras().getString(OPT_DB);
    savePreferences("deckFilename");
    if (mDeckFilename == null || !new File(mDeckFilename).exists()) {
      showContentView(CONTENT_NO_DECK);
    }
    if (DeckManager.getMainDeck() == null || !DeckManager.getMainDeckPath().equals(mDeckFilename)) {
      boolean updateAllCards=(requestCode == DOWNLOAD_SHARED_DECK);
      displayProgressDialogAndLoadDeck(updateAllCards);
    }
  }
 else   if (requestCode == PREFERENCES_UPDATE) {
    restorePreferences();
    BackupManager.initBackup();
    showContentView();
    if (resultCode == RESULT_RESTART) {
      restartApp();
    }
 else     if (resultCode == RESULT_RELOAD_DECK) {
      displayProgressDialogAndLoadDeck();
    }
  }
 else   if (requestCode == REQUEST_REVIEW) {
    Log.i(AnkiDroidApp.TAG,"Result code = " + resultCode);
    mInReviewer=false;
switch (resultCode) {
case Reviewer.RESULT_SESSION_COMPLETED:
      showContentView(CONTENT_SESSION_COMPLETE);
    break;
case Reviewer.RESULT_NO_MORE_CARDS:
  showContentView(CONTENT_CONGRATS);
break;
case Reviewer.RESULT_ANSWERING_ERROR:
showContentView(CONTENT_STUDY_OPTIONS);
showDialog(DIALOG_DB_ERROR);
break;
case Reviewer.RESULT_DECK_CLOSED:
showContentView(CONTENT_STUDY_OPTIONS);
mDeckFilename=PrefSettings.getSharedPrefs(getBaseContext()).getString("deckFilename",null);
displayProgressDialogAndLoadDeck();
break;
case Reviewer.RESULT_DEFAULT:
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_SAVE_DECK,mSaveAndResetDeckHandler,new DeckTask.TaskData(DeckManager.getMainDeck(),0));
showContentView(CONTENT_STUDY_OPTIONS);
break;
}
}
 else if (requestCode == ADD_FACT && resultCode != RESULT_CANCELED) {
resetAndUpdateValuesFromDeck();
}
 else if (requestCode == BROWSE_CARDS && resultCode == RESULT_OK) {
resetAndUpdateValuesFromDeck();
}
 else if (requestCode == LOG_IN && resultCode == RESULT_OK) {
syncDeck(null);
}
 else if (requestCode == STATISTICS && mCurrentContentView == CONTENT_CONGRATS) {
showContentView(CONTENT_STUDY_OPTIONS);
}
 else if (requestCode == REPORT_ERROR) {
if (mShowRepairDialog) {
showDialog(DIALOG_DB_ERROR);
mShowRepairDialog=false;
}
 else if (showDeckPickerOnStartup()) {
openDeckPicker();
}
 else {
try {
if (mWelcomeAlert != null && mWelcomeAlert.isShowing()) {
mWelcomeAlert.dismiss();
mWelcomeAlert.show();
}
 else if (mNewVersionAlert != null && mNewVersionAlert.isShowing()) {
mNewVersionAlert.dismiss();
mNewVersionAlert.show();
}
}
 catch (IllegalArgumentException e) {
Log.e(AnkiDroidApp.TAG,"Error on dismissing and showing dialog: " + e);
}
}
}
}
