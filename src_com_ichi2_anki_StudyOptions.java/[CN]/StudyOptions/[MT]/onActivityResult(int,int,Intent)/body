{
  super.onActivityResult(requestCode,resultCode,intent);
  Log.i(AnkiDroidApp.TAG,"StudyOptions: onActivityResult");
  if (resultCode == AnkiDroidApp.RESULT_TO_HOME) {
    closeStudyOptions();
    return;
  }
  if (resultCode == DeckPicker.RESULT_MEDIA_EJECTED) {
    closeStudyOptions(DeckPicker.RESULT_MEDIA_EJECTED);
  }
 else   if (requestCode == DECK_OPTIONS) {
    resetAndUpdateValuesFromDeck();
  }
 else   if (requestCode == ADD_NOTE && resultCode != RESULT_CANCELED) {
    resetAndUpdateValuesFromDeck();
  }
 else   if (requestCode == PREFERENCES_UPDATE) {
    restorePreferences();
  }
 else   if (requestCode == REQUEST_REVIEW) {
    Log.i(AnkiDroidApp.TAG,"Result code = " + resultCode);
switch (resultCode) {
case Reviewer.RESULT_SESSION_COMPLETED:
default :
      showContentView(CONTENT_STUDY_OPTIONS,mDontSaveOnStop);
    break;
case Reviewer.RESULT_NO_MORE_CARDS:
  showContentView(CONTENT_CONGRATS,mDontSaveOnStop);
break;
case Reviewer.RESULT_ANSWERING_ERROR:
closeStudyOptions(DeckPicker.RESULT_DB_ERROR);
break;
}
mDontSaveOnStop=false;
}
 else if (requestCode == BROWSE_CARDS && resultCode == RESULT_OK) {
mDontSaveOnStop=false;
resetAndUpdateValuesFromDeck();
}
 else if (requestCode == STATISTICS && mCurrentContentView == CONTENT_CONGRATS) {
showContentView(CONTENT_STUDY_OPTIONS);
}
}
