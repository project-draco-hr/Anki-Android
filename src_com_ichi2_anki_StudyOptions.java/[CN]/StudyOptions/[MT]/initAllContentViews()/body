{
  mStudyOptionsView=getLayoutInflater().inflate(R.layout.studyoptions,null);
  mTextTitle=(TextView)mStudyOptionsView.findViewById(R.id.studyoptions_title);
  mTextDeckName=(TextView)mStudyOptionsView.findViewById(R.id.studyoptions_deck_name);
  mButtonStart=(Button)mStudyOptionsView.findViewById(R.id.studyoptions_start);
  mToggleCram=(ToggleButton)mStudyOptionsView.findViewById(R.id.studyoptions_cram);
  mTextReviewsDue=(TextView)mStudyOptionsView.findViewById(R.id.studyoptions_reviews_due);
  mTextNewToday=(TextView)mStudyOptionsView.findViewById(R.id.studyoptions_new_today);
  mTextNewTotal=(TextView)mStudyOptionsView.findViewById(R.id.studyoptions_new_total);
  mEditNewPerDay=(EditText)mStudyOptionsView.findViewById(R.id.studyoptions_new_cards_per_day);
  mEditSessionTime=(EditText)mStudyOptionsView.findViewById(R.id.studyoptions_session_minutes);
  mEditSessionQuestions=(EditText)mStudyOptionsView.findViewById(R.id.studyoptions_session_questions);
  mButtonStart.setOnClickListener(mButtonClickListener);
  mToggleCram.setOnClickListener(mButtonClickListener);
  mEditNewPerDay.addTextChangedListener(new TextWatcher(){
    public void afterTextChanged(    Editable s){
      Deck deck=AnkiDroidApp.deck();
      String inputText=mEditNewPerDay.getText().toString();
      if (deck != null) {
        if (!inputText.equals(Integer.toString(deck.getNewCardsPerDay()))) {
          if (inputText.equals("")) {
            deck.setNewCardsPerDay(0);
          }
 else           if (isValidInt(inputText)) {
            deck.setNewCardsPerDay(Integer.parseInt(inputText));
          }
 else {
            mEditNewPerDay.setText("0");
          }
          updateValuesFromDeck();
        }
      }
    }
    public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
  }
);
  mEditSessionTime.addTextChangedListener(new TextWatcher(){
    public void afterTextChanged(    Editable s){
      Deck deck=AnkiDroidApp.deck();
      String inputText=mEditSessionTime.getText().toString();
      if (deck != null) {
        if (!inputText.equals(Long.toString(deck.getSessionTimeLimit() / 60))) {
          if (inputText.equals("")) {
            deck.setSessionTimeLimit(0);
          }
 else           if (isValidLong(inputText)) {
            deck.setSessionTimeLimit(Long.parseLong(inputText) * 60);
          }
 else {
            mEditSessionTime.setText("0");
          }
          updateValuesFromDeck();
        }
      }
    }
    public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
  }
);
  mEditSessionQuestions.addTextChangedListener(new TextWatcher(){
    public void afterTextChanged(    Editable s){
      Deck deck=AnkiDroidApp.deck();
      String inputText=mEditSessionQuestions.getText().toString();
      if (deck != null) {
        if (!inputText.equals(Long.toString(deck.getSessionRepLimit()))) {
          if (inputText.equals("")) {
            deck.setSessionRepLimit(0);
          }
 else           if (isValidLong(inputText)) {
            deck.setSessionRepLimit(Long.parseLong(inputText));
          }
 else {
            mEditSessionQuestions.setText("0");
          }
          updateValuesFromDeck();
        }
      }
    }
    public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
  }
);
  mDialogMoreOptions=createMoreOptionsDialog();
  mNoDeckView=getLayoutInflater().inflate(R.layout.studyoptions_nodeck,null);
  mTextNoDeckTitle=(TextView)mNoDeckView.findViewById(R.id.studyoptions_nodeck_title);
  mTextNoDeckMessage=(TextView)mNoDeckView.findViewById(R.id.studyoptions_nodeck_message);
  mNoDeckView.findViewById(R.id.studyoptions_load_sample_deck).setOnClickListener(mButtonClickListener);
  mNoDeckView.findViewById(R.id.studyoptions_download_deck).setOnClickListener(mButtonClickListener);
  mNoDeckView.findViewById(R.id.studyoptions_load_other_deck).setOnClickListener(mButtonClickListener);
  mCongratsView=getLayoutInflater().inflate(R.layout.studyoptions_congrats,null);
  mTextCongratsMessage=(TextView)mCongratsView.findViewById(R.id.studyoptions_congrats_message);
  mButtonCongratsLearnMore=(Button)mCongratsView.findViewById(R.id.studyoptions_congrats_learnmore);
  mButtonCongratsReviewEarly=(Button)mCongratsView.findViewById(R.id.studyoptions_congrats_reviewearly);
  mButtonCongratsOpenOtherDeck=(Button)mCongratsView.findViewById(R.id.studyoptions_congrats_open_other_deck);
  mButtonCongratsFinish=(Button)mCongratsView.findViewById(R.id.studyoptions_congrats_finish);
  mButtonCongratsLearnMore.setOnClickListener(mButtonClickListener);
  mButtonCongratsReviewEarly.setOnClickListener(mButtonClickListener);
  mButtonCongratsOpenOtherDeck.setOnClickListener(mButtonClickListener);
  mButtonCongratsFinish.setOnClickListener(mButtonClickListener);
  mNoExternalStorageView=getLayoutInflater().inflate(R.layout.studyoptions_nostorage,null);
}
