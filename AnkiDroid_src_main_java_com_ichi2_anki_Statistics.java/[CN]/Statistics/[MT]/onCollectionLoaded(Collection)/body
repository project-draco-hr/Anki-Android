{
  Timber.d("onCollectionLoaded()");
  mDropDownDecks=getCol().getDecks().allSorted();
  mDropDownAdapter=new DeckDropDownAdapter(this,mDropDownDecks);
  ActionBar actionBar=getSupportActionBar();
  actionBar.setDisplayShowTitleEnabled(false);
  actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
  actionBar.setListNavigationCallbacks(mDropDownAdapter,this);
  mTaskHandler=new AnkiStatsTaskHandler(col);
  mSectionsPagerAdapter=new SectionsPagerAdapter(getSupportFragmentManager());
  mViewPager=(ViewPager)findViewById(R.id.pager);
  mViewPager.setAdapter(mSectionsPagerAdapter);
  mViewPager.setOffscreenPageLimit(8);
  mSlidingTabLayout=(SlidingTabLayout)findViewById(R.id.sliding_tabs);
  mSlidingTabLayout.setViewPager(mViewPager);
  AnkiStatsTaskHandler.createFirstStatisticChooserTask(col,mViewPager);
  float size=new TextView(this).getTextSize();
  mTaskHandler.setmStandardTextSize(size);
  supportInvalidateOptionsMenu();
  mSectionsPagerAdapter.notifyDataSetChanged();
  String currentDeckName;
  try {
    currentDeckName=getCol().getDecks().current().getString("name");
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  for (int dropDownDeckIdx=0; dropDownDeckIdx < mDropDownDecks.size(); dropDownDeckIdx++) {
    JSONObject deck=mDropDownDecks.get(dropDownDeckIdx);
    String deckName;
    try {
      deckName=deck.getString("name");
    }
 catch (    JSONException e) {
      throw new RuntimeException();
    }
    if (deckName.equals(currentDeckName)) {
      actionBar.setSelectedNavigationItem(dropDownDeckIdx + 1);
      break;
    }
  }
}
