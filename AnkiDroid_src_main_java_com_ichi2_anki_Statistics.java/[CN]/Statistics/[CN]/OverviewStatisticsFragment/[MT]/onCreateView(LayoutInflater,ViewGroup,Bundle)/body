{
  setHasOptionsMenu(true);
  View rootView=inflater.inflate(R.layout.fragment_anki_stats_overview,container,false);
  AnkiStatsTaskHandler handler=(((Statistics)getActivity()).getTaskHandler());
  if (handler == null) {
    Timber.e("Statistics.OverviewStatisticsFragment.onCreateView() TaskHandler not found");
    getActivity().finish();
    return rootView;
  }
  mWebView=(WebView)rootView.findViewById(R.id.web_view_stats);
  if (mWebView == null)   Timber.d("mChart null!!!");
 else   Timber.d("mChart is not null!");
  mProgressBar=(ProgressBar)rootView.findViewById(R.id.progress_bar_stats_overview);
  mProgressBar.setVisibility(View.VISIBLE);
  createStatisticOverview();
  mType=handler.getStatType();
  mIsCreated=true;
  mActivityPager=((Statistics)getActivity()).getViewPager();
  mActivitySectionPagerAdapter=((Statistics)getActivity()).getSectionsPagerAdapter();
  Collection col=CollectionHelper.getInstance().getCol(getActivity());
  mDeckId=col.getDecks().selected();
  mIsWholeCollection=sIsWholeCollection;
  if (!sIsWholeCollection) {
    try {
      List<String> parts=Arrays.asList(col.getDecks().current().getString("name").split("::"));
      if (sIsSubtitle)       UIUtils.setSubtitle(getActivity(),parts.get(parts.size() - 1));
 else       getActivity().setTitle(parts.get(parts.size() - 1));
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    if (sIsSubtitle)     UIUtils.setSubtitle(getActivity(),getResources().getString(R.string.stats_deck_collection));
 else     getActivity().setTitle(getResources().getString(R.string.stats_deck_collection));
  }
  return rootView;
}
