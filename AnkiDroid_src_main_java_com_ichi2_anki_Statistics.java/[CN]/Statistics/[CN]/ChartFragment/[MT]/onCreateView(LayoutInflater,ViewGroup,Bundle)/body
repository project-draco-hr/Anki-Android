{
  setHasOptionsMenu(true);
  Bundle bundle=getArguments();
  mSectionNumber=bundle.getInt(ARG_SECTION_NUMBER);
  View rootView=inflater.inflate(R.layout.fragment_anki_stats,container,false);
  mChart=(ChartView)rootView.findViewById(R.id.image_view_chart);
  if (mChart == null)   Timber.d("mChart null!!!");
 else   Timber.d("mChart is not null!");
  mProgressBar=(ProgressBar)rootView.findViewById(R.id.progress_bar_stats);
  mProgressBar.setVisibility(View.VISIBLE);
  if ((((Statistics)getActivity()).getTaskHandler()) == null) {
    Timber.e("Statistics.ChartFragment.onCreateView() TaskHandler not found");
    getActivity().finish();
    return rootView;
  }
  createChart();
  mHeight=mChart.getMeasuredHeight();
  mWidth=mChart.getMeasuredWidth();
  mChart.addFragment(this);
  mType=(((Statistics)getActivity()).getTaskHandler()).getStatType();
  mIsCreated=true;
  mActivityPager=((Statistics)getActivity()).getViewPager();
  mActivitySectionPagerAdapter=((Statistics)getActivity()).getSectionsPagerAdapter();
  mDeckId=AnkiDroidApp.getCol().getDecks().selected();
  mIsWholeCollection=AnkiStatsTaskHandler.isWholeCollection();
  if (!AnkiStatsTaskHandler.isWholeCollection()) {
    try {
      List<String> parts=Arrays.asList(AnkiDroidApp.getCol().getDecks().current().getString("name").split("::"));
      if (sIsSubtitle)       AnkiDroidApp.getCompat().setSubtitle(getActivity(),parts.get(parts.size() - 1));
 else       getActivity().setTitle(parts.get(parts.size() - 1));
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    if (sIsSubtitle)     AnkiDroidApp.getCompat().setSubtitle(getActivity(),getResources().getString(R.string.stats_deck_collection));
 else     getActivity().setTitle(getResources().getString(R.string.stats_deck_collection));
  }
  return rootView;
}
