{
  Activity activity=params[0];
  mActivity=activity;
  SharedPreferences prefs=PrefSettings.getSharedPrefs(activity);
  int lastNum=prefs.getInt("lastMessageNum",-1);
  if (lastNum == -1) {
    prefs.edit().putInt("lastMessageNum",0).commit();
    return activity;
  }
  try {
    URL fileUrl;
    fileUrl=new URL(FILE_URL);
    URLConnection conn=fileUrl.openConnection();
    conn.setConnectTimeout(TIMEOUT);
    conn.setReadTimeout(TIMEOUT);
    DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
    DocumentBuilder db=dbf.newDocumentBuilder();
    Document dom=db.parse(conn.getInputStream());
    Element docEle=dom.getDocumentElement();
    NodeList nl=docEle.getElementsByTagName("Message");
    String currentVersion=AnkiDroidApp.getPkgVersion();
    if (nl != null && nl.getLength() > 0) {
      for (int i=0; i < nl.getLength(); i++) {
        Element el=(Element)nl.item(i);
        mNum=Integer.parseInt(getXmlValue(el,NUM));
        if (mNum <= lastNum) {
          continue;
        }
        mMinVersion=getXmlValue(el,MIN_VERSION);
        if (mMinVersion != null && mMinVersion.length() > 0 && compareVersions(mMinVersion,currentVersion) > 0) {
          continue;
        }
        mMaxVersion=getXmlValue(el,MAX_VERSION);
        if (mMaxVersion != null && mMaxVersion.length() > 0 && compareVersions(mMaxVersion,currentVersion) < 0) {
          continue;
        }
        mTitle=getXmlValue(el,TITLE);
        mText=getXmlValue(el,TEXT);
        mUrl=getXmlValue(el,URL);
        if (mText != null && mText.length() > 0) {
          mShowDialog=true;
          return activity;
        }
      }
      prefs.edit().putBoolean("showBroadcastMessageToday",false).commit();
      mShowDialog=false;
    }
  }
 catch (  IOException e) {
    Log.e(AnkiDroidApp.TAG,"DownloadBroadcastMessage: IOException on reading file " + FILE_URL + ": "+ e);
    return activity;
  }
catch (  NumberFormatException e) {
    Log.e(AnkiDroidApp.TAG,"DownloadBroadcastMessage: Number of file " + FILE_URL + " could not be read: "+ e);
    return activity;
  }
catch (  ParserConfigurationException e) {
    Log.e(AnkiDroidApp.TAG,"DownloadBroadcastMessage: ParserConfigurationException: " + e);
    return activity;
  }
catch (  SAXException e) {
    Log.e(AnkiDroidApp.TAG,"DownloadBroadcastMessage: SAXException: " + e);
    return activity;
  }
  return activity;
}
