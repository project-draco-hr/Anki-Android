{
  SharedDeckDownload download=(SharedDeckDownload)downloads[0];
  URL url;
  RandomAccessFile file=null;
  InputStream is=null;
  try {
    url=new URL(ANKI_URL + "/file/get?id=" + download.getId());
    HttpURLConnection connection=(HttpURLConnection)url.openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setUseCaches(false);
    connection.setRequestMethod("GET");
    connection.setRequestProperty("Range","bytes=" + download.getDownloaded() + "-");
    connection.setRequestProperty("Accept-Encoding","identity");
    connection.setRequestProperty("Host","anki.ichi2.net");
    connection.setRequestProperty("Connection","close");
    connection.connect();
    if (connection.getResponseCode() / 100 != 2) {
      download.setStatus(Download.ERROR);
      publishProgress();
    }
 else {
      download.setStatus(Download.DOWNLOADING);
      publishProgress();
    }
    Log.i(TAG,"Response code = " + connection.getResponseCode());
    Log.i(TAG,"Connection length = " + connection.getContentLength());
    int contentLength=connection.getContentLength();
    if (contentLength < 1) {
      Log.i(TAG,"Content Length = -1");
    }
    if (download.getSize() == -1 && contentLength != -1) {
      download.setSize(contentLength);
      Log.i(TAG,"File size = " + contentLength);
    }
    file=new RandomAccessFile(mDestination + "/" + download.getTitle()+ "."+ download.getId()+ ".shared.zip.tmp","rw");
    file.seek(download.getDownloaded());
    is=connection.getInputStream();
    if (download.getFilename().endsWith(".zip")) {
      while (download.getStatus() == Download.DOWNLOADING) {
        byte buffer[];
        buffer=new byte[MAX_BUFFER_SIZE];
        int read=is.read(buffer);
        if (read == -1) {
          break;
        }
        file.write(buffer,0,read);
        download.setDownloaded(download.getDownloaded() + read);
      }
    }
    if (download.getStatus() == Download.DOWNLOADING) {
      download.setStatus(Download.COMPLETE);
      new File(mDestination + "/" + download.getTitle()+ "."+ download.getId()+ ".shared.zip.tmp").renameTo(new File(mDestination + "/" + download.getTitle()+ ".zip"));
      publishProgress();
    }
    Log.i(TAG,"Finished!");
    connection.disconnect();
  }
 catch (  Exception e) {
    e.printStackTrace();
    Log.i(TAG,"Exception Error = " + e.getMessage());
    download.setStatus(Download.ERROR);
    publishProgress();
  }
 finally {
    if (file != null) {
      try {
        file.close();
      }
 catch (      Exception e) {
      }
    }
    if (is != null) {
      try {
        is.close();
      }
 catch (      Exception e) {
      }
    }
  }
  return download;
}
