{
  Resources res=context.getResources();
  int cardCount=sDeckSummaryValues.getAsInteger("cardCount");
  int matureCount=sDeckSummaryValues.getAsInteger("matureCount");
  int unseenCount=sDeckSummaryValues.getAsInteger("unseenCount");
  int youngCount=cardCount - unseenCount - matureCount;
  int intervalSum=sDeckSummaryValues.getAsInteger("intervalSum");
  int repsMatCount=sDeckSummaryValues.getAsInteger("repsMatCount");
  int repsMatNoCount=sDeckSummaryValues.getAsInteger("repsMatNoCount");
  int repsYoungCount=sDeckSummaryValues.getAsInteger("repsYoungCount");
  int repsYoungNoCount=sDeckSummaryValues.getAsInteger("repsYoungNoCount");
  int repsFirstCount=sDeckSummaryValues.getAsInteger("repsFirstCount");
  int repsFirstNoCount=sDeckSummaryValues.getAsInteger("repsFirstNoCount");
  int reviewsLastWeek=sDeckSummaryValues.getAsInteger("reviewsLastWeek");
  int newsLastWeek=sDeckSummaryValues.getAsInteger("newsLastWeek");
  int reviewsLastMonth=sDeckSummaryValues.getAsInteger("reviewsLastMonth");
  int newsLastMonth=sDeckSummaryValues.getAsInteger("newsLastMonth");
  int reviewsLastYear=sDeckSummaryValues.getAsInteger("reviewsLastYear");
  int newsLastYear=sDeckSummaryValues.getAsInteger("newsLastYear");
  int deckAge=sDeckSummaryValues.getAsInteger("deckAge");
  int newPerDay=sDeckSummaryValues.getAsInteger("newPerDay");
  int revTomorrow=sDeckSummaryValues.getAsInteger("revTomorrow");
  int newTomorrow=sDeckSummaryValues.getAsInteger("newTomorrow");
  int timeTomorrow=sDeckSummaryValues.getAsInteger("timeTomorrow");
  StringBuilder builder=new StringBuilder();
  builder.append("<html><body text=\"#FFFFFF\">");
  builder.append(res.getString(R.string.deck_summary_deck_age,deckAge)).append("<br>");
  builder.append(res.getString(R.string.deck_summary_cards)).append(" <b>").append(Integer.toString(cardCount)).append("</b><br>");
  builder.append(res.getString(R.string.deck_summary_facts)).append(" <b>").append(Integer.toString(sDeckSummaryValues.getAsInteger("factCount"))).append("</b><br>");
  builder.append("<br><b>").append(res.getString(R.string.deck_summary_card_age)).append("</b><br>");
  builder.append(res.getString(R.string.deck_summary_cards_mature)).append(" <b>").append(Integer.toString(matureCount)).append("</b> (").append(String.format("%.1f &#37;",100.0d * getFraction(matureCount,cardCount))).append(")<br>");
  builder.append(res.getString(R.string.deck_summary_cards_young)).append(" <b>").append(Integer.toString(youngCount)).append("</b> (").append(String.format("%.1f &#37;",100.0d * getFraction(youngCount,cardCount))).append(")<br>");
  builder.append(res.getString(R.string.deck_summary_cards_unseen)).append(" <b>").append(Integer.toString(unseenCount)).append("</b> (").append(String.format("%.1f &#37;",100.0d * getFraction(unseenCount,cardCount))).append(")<br>");
  builder.append(res.getString(R.string.deck_summary_average_interval,getFraction(intervalSum,(cardCount - unseenCount)))).append("<br>");
  builder.append("<br><b>").append(res.getString(R.string.deck_summary_answers_correct)).append("</b><br>");
  builder.append(res.getString(R.string.deck_summary_answers_mature,100.0d * getFraction(repsMatCount - repsMatNoCount,repsMatCount),"&#37;",repsMatCount - repsMatNoCount,repsMatCount)).append("<br>");
  builder.append(res.getString(R.string.deck_summary_answers_young,100.0d * getFraction(repsYoungCount - repsYoungNoCount,repsYoungCount),"&#37;",repsYoungCount - repsYoungNoCount,repsYoungCount)).append("<br>");
  builder.append(res.getString(R.string.deck_summary_answers_firstseen,100.0d * getFraction(repsFirstCount - repsFirstNoCount,repsFirstCount),"&#37;",repsFirstCount - repsFirstNoCount,repsFirstCount)).append("<br>");
  builder.append("<br><b>").append(res.getString(R.string.deck_summary_forecast)).append("</b><br>");
  builder.append(res.getString(R.string.deck_summary_tomorrow_due,revTomorrow)).append("<br>");
  builder.append(res.getString(R.string.deck_summary_tomorrow_new,newTomorrow)).append("<br>");
  builder.append(res.getString(R.string.deck_summary_tomorrow_time,timeTomorrow)).append("<br>");
  builder.append(res.getString(R.string.deck_summary_finished_in,(int)Math.round(getFraction(unseenCount,newPerDay)))).append("<br>");
  builder.append("<br><b>").append(res.getString(R.string.deck_summary_average_week)).append("</b><br>");
  builder.append(res.getString(R.string.deck_summary_reviews)).append(" ").append(res.getString(R.string.deck_summary_cards_per_day,getFraction(reviewsLastWeek,Math.min((double)deckAge,7.0d)))).append("<br>");
  builder.append(res.getString(R.string.deck_summary_news)).append(" ").append(res.getString(R.string.deck_summary_cards_per_day,getFraction(newsLastWeek,Math.min((double)deckAge,7.0d)))).append("<br>");
  builder.append("<br><b>").append(res.getString(R.string.deck_summary_average_month)).append("</b><br>");
  builder.append(res.getString(R.string.deck_summary_reviews)).append(" ").append(res.getString(R.string.deck_summary_cards_per_day,getFraction(reviewsLastMonth,Math.min((double)deckAge,30.0d)))).append("<br>");
  builder.append(res.getString(R.string.deck_summary_news)).append(" ").append(res.getString(R.string.deck_summary_cards_per_day,getFraction(newsLastMonth,Math.min((double)deckAge,30.0d)))).append("<br>");
  builder.append("<br><b>").append(res.getString(R.string.deck_summary_average_year)).append("</b><br>");
  builder.append(res.getString(R.string.deck_summary_reviews)).append(" ").append(res.getString(R.string.deck_summary_cards_per_day,getFraction(reviewsLastYear,Math.min((double)deckAge,365.0d)))).append("<br>");
  builder.append(res.getString(R.string.deck_summary_news)).append(" ").append(res.getString(R.string.deck_summary_cards_per_day,getFraction(newsLastYear,Math.min((double)deckAge,365.0d)))).append("<br>");
  builder.append("<br><b>").append(res.getString(R.string.deck_summary_average_total)).append("</b><br>");
  builder.append(res.getString(R.string.deck_summary_reviews)).append(" ").append(res.getString(R.string.deck_summary_cards_per_day,getFraction(repsMatCount + repsYoungCount + repsFirstCount,deckAge))).append("<br>");
  builder.append("</body></html>");
  return builder.toString();
}
