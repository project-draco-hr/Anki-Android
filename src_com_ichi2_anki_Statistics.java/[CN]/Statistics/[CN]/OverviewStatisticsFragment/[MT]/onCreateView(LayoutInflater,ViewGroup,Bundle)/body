{
  setHasOptionsMenu(true);
  View rootView=inflater.inflate(R.layout.fragment_anki_stats_overview,container,false);
  mWebView=(WebView)rootView.findViewById(R.id.web_view_stats);
  if (mWebView == null) {
  }
 else {
  }
  mProgressBar=(ProgressBar)rootView.findViewById(R.id.progress_bar_stats_overview);
  mProgressBar.setVisibility(View.VISIBLE);
  createStatisticOverview();
  mType=(((Statistics)getActivity()).getTaskHandler()).getStatType();
  mIsCreated=true;
  mActivityPager=((Statistics)getActivity()).getViewPager();
  mActivitySectionPagerAdapter=((Statistics)getActivity()).getSectionsPagerAdapter();
  mDeckId=AnkiDroidApp.getCol().getDecks().selected();
  mIsWholeCollection=AnkiStatsTaskHandler.isWholeCollection();
  if (!AnkiStatsTaskHandler.isWholeCollection()) {
    try {
      List<String> parts=Arrays.asList(AnkiDroidApp.getCol().getDecks().current().getString("name").split("::"));
      if (sIsSubtitle)       AnkiDroidApp.getCompat().setSubtitle(getActivity(),parts.get(parts.size() - 1));
 else       getActivity().setTitle(parts.get(parts.size() - 1));
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    if (sIsSubtitle)     AnkiDroidApp.getCompat().setSubtitle(getActivity(),getResources().getString(R.string.stats_deck_collection));
 else     getActivity().setTitle(getResources().getString(R.string.stats_deck_collection));
  }
  return rootView;
}
