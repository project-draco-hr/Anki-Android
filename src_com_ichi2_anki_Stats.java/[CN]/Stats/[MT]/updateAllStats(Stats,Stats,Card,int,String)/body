{
  global.reps+=1;
  daily.reps+=1;
  double delay=card.totalTime();
  int sti=(oldState == "young") ? 0 : 1;
  AnkiDb ankiDb=AnkiDatabaseManager.getDatabase(global.deck.deckPath);
  if (delay >= 60) {
    global.reviewTime+=60;
    daily.reviewTime+=60;
    ankiDb.update_all_stats_no_avg[sti][ease].execute();
  }
 else {
    global.reviewTime+=delay;
    global.averageTime=(global.reviewTime / (double)global.reps);
    daily.reviewTime+=delay;
    daily.averageTime=(daily.reviewTime / (double)daily.reps);
    if (sti == 0) {
switch (ease) {
case 0:
        global.youngEase0+=1;
      daily.youngEase0+=1;
    break;
case 1:
  global.youngEase1+=1;
daily.youngEase1+=1;
break;
case 2:
global.youngEase2+=1;
daily.youngEase2+=1;
break;
case 3:
global.youngEase3+=1;
daily.youngEase3+=1;
break;
case 4:
global.youngEase4+=1;
daily.youngEase4+=1;
break;
default :
}
}
 else {
switch (ease) {
case 0:
global.matureEase0+=1;
daily.matureEase0+=1;
break;
case 1:
global.matureEase1+=1;
daily.matureEase1+=1;
break;
case 2:
global.matureEase2+=1;
daily.matureEase2+=1;
break;
case 3:
global.matureEase3+=1;
daily.matureEase3+=1;
break;
case 4:
global.matureEase4+=1;
daily.matureEase4+=1;
break;
default :
}
}
ankiDb.update_all_stats_and_avg[sti][ease].bindDouble(1,delay);
ankiDb.update_all_stats_and_avg[sti][ease].bindDouble(2,delay);
ankiDb.update_all_stats_and_avg[sti][ease].execute();
}
}
