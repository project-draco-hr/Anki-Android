{
  Resources res=getResources();
switch (item.getItemId()) {
case android.R.id.home:
    Timber.i("NoteEditor:: Home button pressed");
  closeCardEditorWithCheck();
return true;
case R.id.action_save:
Timber.i("NoteEditor:: Save note button pressed");
saveNote();
return true;
case R.id.action_add_card_from_card_editor:
case R.id.action_copy_card:
Timber.i("NoteEditor:: Copy or add card button pressed");
Intent intent=new Intent(NoteEditor.this,NoteEditor.class);
intent.putExtra(EXTRA_CALLER,CALLER_CARDEDITOR);
if (item.getItemId() == R.id.action_copy_card) {
intent.putExtra(EXTRA_CONTENTS,getFieldsText());
}
startActivityForResultWithAnimation(intent,REQUEST_ADD,ActivityTransitionAnimation.LEFT);
return true;
case R.id.action_reset_card_progress:
Timber.i("NoteEditor:: Reset progress button pressed");
ConfirmationDialog dialog=new ConfirmationDialog(){
@Override public void confirm(){
Timber.i("NoteEditor:: OK button pressed");
getCol().getSched().forgetCards(new long[]{mCurrentEditedCard.getId()});
getCol().reset();
mReloadRequired=true;
UIUtils.showThemedToast(NoteEditor.this,getResources().getString(R.string.reset_card_dialog_acknowledge),true);
}
}
;
String title=res.getString(R.string.reset_card_dialog_title);
String message=res.getString(R.string.reset_card_dialog_message);
dialog.setArgs(title,message);
showDialogFragment(dialog);
return true;
case R.id.action_reschedule_card:
Timber.i("NoteEditor:: Reschedule button pressed");
showDialogFragment(NoteEditorRescheduleCard.newInstance());
return true;
default :
return super.onOptionsItemSelected(item);
}
}
