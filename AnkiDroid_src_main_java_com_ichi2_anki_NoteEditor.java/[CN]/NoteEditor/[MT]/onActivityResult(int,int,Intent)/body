{
  super.onActivityResult(requestCode,resultCode,data);
  if (resultCode == DeckPicker.RESULT_DB_ERROR) {
    closeNoteEditor(DeckPicker.RESULT_DB_ERROR);
  }
switch (requestCode) {
case REQUEST_ADD:
    if (resultCode != RESULT_CANCELED) {
      mChanged=true;
    }
  break;
case REQUEST_MULTIMEDIA_EDIT:
if (resultCode != RESULT_CANCELED) {
  Collection col=getCol();
  Bundle extras=data.getExtras();
  int index=extras.getInt(MultimediaEditFieldActivity.EXTRA_RESULT_FIELD_INDEX);
  IField field=(IField)extras.get(MultimediaEditFieldActivity.EXTRA_RESULT_FIELD);
  IMultimediaEditableNote mNote=NoteService.createEmptyNote(mEditorNote.model());
  NoteService.updateMultimediaNoteFromJsonNote(col,mEditorNote,mNote);
  mNote.setField(index,field);
  FieldEditText fieldEditText=mEditFields.get(index);
  if (field.getType() == EFieldType.TEXT) {
    fieldEditText.setText(field.getFormattedValue());
  }
 else   if (fieldEditText.hasFocus()) {
    fieldEditText.getText().replace(fieldEditText.getSelectionStart(),fieldEditText.getSelectionEnd(),field.getFormattedValue());
  }
 else {
    fieldEditText.getText().append(field.getFormattedValue());
  }
  NoteService.saveMedia(col,(MultimediaEditableNote)mNote);
  mChanged=true;
}
break;
case REQUEST_TEMPLATE_EDIT:
if (resultCode == RESULT_OK) {
mReloadRequired=true;
}
updateCards(mEditorNote.model());
}
}
