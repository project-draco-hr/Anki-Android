{
  mediaButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      Timber.i("NoteEditor:: Multimedia button pressed for field %d",index);
      final Collection col=CollectionHelper.getInstance().getCol(NoteEditor.this);
      if (mEditorNote.items()[index][1].length() > 0) {
        IMultimediaEditableNote mNote=NoteService.createEmptyNote(mEditorNote.model());
        NoteService.updateMultimediaNoteFromJsonNote(col,mEditorNote,mNote);
        IField field=mNote.getField(index);
        startMultimediaFieldEditor(index,mNote,field);
      }
 else {
        PopupMenuWithIcons popup=new PopupMenuWithIcons(NoteEditor.this,v,false);
        MenuInflater inflater=popup.getMenuInflater();
        inflater.inflate(R.menu.popupmenu_multimedia_options,popup.getMenu());
        popup.setOnMenuItemClickListener(new OnMenuItemClickListener(){
          @Override public boolean onMenuItemClick(          MenuItem item){
            IMultimediaEditableNote mNote=NoteService.createEmptyNote(mEditorNote.model());
            NoteService.updateMultimediaNoteFromJsonNote(col,mEditorNote,mNote);
            IField field=mNote.getField(index);
switch (item.getItemId()) {
case R.id.menu_multimedia_audio:
              Timber.i("NoteEditor:: Record audio button pressed");
            field=new AudioField();
          mNote.setField(index,field);
        startMultimediaFieldEditor(index,mNote,field);
      return true;
case R.id.menu_multimedia_photo:
    Timber.i("NoteEditor:: Add image button pressed");
  field=new ImageField();
mNote.setField(index,field);
startMultimediaFieldEditor(index,mNote,field);
return true;
case R.id.menu_multimedia_text:
Timber.i("NoteEditor:: Advanced editor button pressed");
startMultimediaFieldEditor(index,mNote,field);
return true;
default :
return false;
}
}
}
);
popup.show();
}
}
}
);
}
