{
  final Resources res=getResources();
  if (mSelectedTags == null) {
    mSelectedTags=new ArrayList<String>();
  }
  if (mAddNote) {
    for (    FieldEditText f : mEditFields) {
      updateField(f);
    }
    try {
      mEditorNote.model().put("did",mCurrentDid);
      mEditorNote.setTagsFromStr(tagsAsString(mSelectedTags));
      JSONArray ja=new JSONArray();
      for (      String t : mSelectedTags) {
        ja.put(t);
      }
      getCol().getModels().current().put("tags",ja);
      getCol().getModels().setChanged();
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
    DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ADD_FACT,mSaveFactHandler,new DeckTask.TaskData(mEditorNote));
  }
 else {
    final JSONObject newModel=getCurrentlySelectedModel();
    final JSONObject oldModel=mCurrentEditedCard.model();
    if (!newModel.equals(oldModel)) {
      mReloadRequired=true;
      if (mModelChangeCardMap.size() < mEditorNote.cards().size() || mModelChangeCardMap.containsKey(null)) {
        ConfirmationDialog dialog=new ConfirmationDialog(){
          @Override public void confirm(){
            changeNoteTypeWithErrorHandling(oldModel,newModel);
          }
        }
;
        dialog.setArgs(res.getString(R.string.confirm_map_cards_to_nothing));
        showDialogFragment(dialog);
      }
 else {
        changeNoteTypeWithErrorHandling(oldModel,newModel);
      }
      return;
    }
    boolean modified=false;
    if (mCurrentEditedCard.getDid() != mCurrentDid) {
      mReloadRequired=true;
      getCol().getSched().remFromDyn(new long[]{mCurrentEditedCard.getId()});
      mCurrentEditedCard.load();
      mEditorNote=mCurrentEditedCard.note();
      mCurrentEditedCard.setDid(mCurrentDid);
      modified=true;
    }
    for (    FieldEditText f : mEditFields) {
      modified=modified | updateField(f);
    }
    for (    String t : mSelectedTags) {
      modified=modified || !mEditorNote.hasTag(t);
    }
    modified=modified || mEditorNote.getTags().size() > mSelectedTags.size();
    if (modified) {
      mEditorNote.setTagsFromStr(tagsAsString(mSelectedTags));
      mChanged=true;
    }
    closeNoteEditor();
  }
}
