{
  mFieldsLayoutContainer.removeAllViews();
  mEditFields=new LinkedList<FieldEditText>();
  Typeface mCustomTypeface=null;
  SharedPreferences preferences=AnkiDroidApp.getSharedPrefs(getBaseContext());
  String customFont=preferences.getString("browserEditorFont","");
  if (!customFont.equals("")) {
    mCustomTypeface=AnkiFont.getTypeface(this,customFont);
  }
  for (int i=0; i < fields.length; i++) {
    View editline_view=getLayoutInflater().inflate(R.layout.card_multimedia_editline,null);
    FieldEditText newTextbox=(FieldEditText)editline_view.findViewById(R.id.id_note_editText);
    initFieldEditText(newTextbox,i,fields[i],mCustomTypeface,!editModelMode);
    TextView label=newTextbox.getLabel();
    label.setPadding((int)UIUtils.getDensityAdjustedValue(this,3.4f),0,0,0);
    mEditFields.add(newTextbox);
    ImageButton mediaButton=(ImageButton)editline_view.findViewById(R.id.id_media_button);
    int[] icons=Themes.getResFromAttr(this,new int[]{R.attr.attachFileImage,R.attr.upDownImage});
    if (editModelMode && allowFieldRemapping()) {
      mediaButton.setBackgroundResource(icons[1]);
      setRemapButtonListener(mediaButton,i);
    }
 else     if (editModelMode && !allowFieldRemapping()) {
      mediaButton.setBackgroundResource(0);
    }
 else {
      mediaButton.setBackgroundResource(icons[0]);
      setMMButtonListener(mediaButton,i);
    }
    mFieldsLayoutContainer.addView(label);
    mFieldsLayoutContainer.addView(editline_view);
  }
}
