{
  Log.i(AnkiDroidApp.TAG,"doInBackgroundOpenCollection");
  long time=Utils.intNow(1000);
  Resources res=AnkiDroidApp.getInstance().getBaseContext().getResources();
  String collectionFile=params[0].getString();
  SharedPreferences prefs=AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext());
  Collection oldCol=AnkiDroidApp.getCol();
  Collection col=null;
  publishProgress(new TaskData(res.getString(R.string.open_collection)));
  if (!(AnkiDroidApp.colIsOpen() && oldCol.getPath().equals(collectionFile))) {
    if (BackupManager.safetyBackupNeeded(collectionFile)) {
      publishProgress(new TaskData(res.getString(R.string.backup_collection)));
      BackupManager.performBackup(collectionFile);
    }
    publishProgress(new TaskData(res.getString(R.string.open_collection)));
    try {
      col=AnkiDroidApp.openCollection(collectionFile);
    }
 catch (    RuntimeException e) {
      BackupManager.restoreCollectionIfMissing(collectionFile);
      Log.e(AnkiDroidApp.TAG,"doInBackgroundOpenCollection - RuntimeException on opening collection: " + e);
      AnkiDroidApp.saveExceptionReportFile(e,"doInBackgroundOpenCollection");
      return new TaskData(false);
    }
    if (prefs.contains("createTutorial") && prefs.getBoolean("createTutorial",false)) {
      prefs.edit().remove("createTutorial").commit();
      publishProgress(new TaskData(res.getString(R.string.tutorial_load)));
      doInBackgroundLoadTutorial(new TaskData(col));
    }
  }
 else {
    Log.i(AnkiDroidApp.TAG,"doInBackgroundOpenCollection: collection still open - reusing it");
    col=oldCol;
  }
  Object[] counts=null;
  DeckTask.TaskData result=doInBackgroundLoadDeckCounts(new TaskData(col));
  if (result != null) {
    counts=result.getObjArray();
  }
  return new TaskData(col,counts);
}
