{
  Sched sched=params[0].getSched();
  Collection col=sched.getCol();
  Card card=params[0].getCard();
  Note note=card.note();
  int type=params[0].getInt();
  try {
    col.getDb().getDatabase().beginTransaction();
    try {
switch (type) {
case 0:
        col.markUndo(Collection.UNDO_BURY_NOTE,new Object[]{col.getDirty(),note.cards(),card.getId()});
      sched.buryNote(note.getId());
    break;
case 1:
  col.markUndo(Collection.UNDO_SUSPEND_CARD,new Object[]{card});
if (card.getQueue() == -1) {
  sched.unsuspendCards(new long[]{card.getId()});
}
 else {
  sched.suspendCards(new long[]{card.getId()});
}
break;
case 2:
ArrayList<Card> cards=note.cards();
long[] cids=new long[cards.size()];
for (int i=0; i < cards.size(); i++) {
cids[i]=cards.get(i).getId();
}
col.markUndo(Collection.UNDO_SUSPEND_NOTE,new Object[]{cards,card.getId()});
sched.suspendCards(cids);
break;
case 3:
Cursor cur=null;
ArrayList<Card> allCards=note.cards();
long[] cids=new long[allCards.size()];
for (int i=0; i < allCards.size(); i++) {
cids[i]=allCards.get(i).getId();
}
ArrayList<Object[]> revLogData=new ArrayList<Object[]>();
try {
cur=col.getDb().getDatabase().rawQuery("SELECT * FROM revlog WHERE cid IN " + Utils.ids2str(cids),null);
while (cur.moveToNext()) {
revLogData.add(new Object[]{cur.getLong(0),cur.getLong(1),cur.getInt(2),cur.getInt(3),cur.getInt(4),cur.getInt(5),cur.getInt(6),cur.getInt(7),cur.getInt(8)});
}
}
  finally {
if (cur != null && !cur.isClosed()) {
cur.close();
}
}
col.markUndo(Collection.UNDO_DELETE_NOTE,new Object[]{note,allCards,card.getId(),revLogData});
col.remNotes(new long[]{note.getId()});
break;
}
publishProgress(new TaskData(getCard(col.getSched()),0));
col.getDb().getDatabase().setTransactionSuccessful();
}
  finally {
col.getDb().getDatabase().endTransaction();
}
}
 catch (RuntimeException e) {
Log.e(AnkiDroidApp.TAG,"doInBackgroundSuspendCard - RuntimeException on suspending card: " + e);
AnkiDroidApp.saveExceptionReportFile(e,"doInBackgroundSuspendCard");
return new TaskData(false);
}
return new TaskData(true);
}
