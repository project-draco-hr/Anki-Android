{
  Log.i(AnkiDroidApp.TAG,"doInBackgroundLoadTutorial");
  Resources res=AnkiDroidApp.getInstance().getBaseContext().getResources();
  Collection col=params[0].getCollection();
  String[] questions=res.getStringArray(R.array.tutorial_questions);
  String[] answers=res.getStringArray(R.array.tutorial_answers);
  String[] sampleQuestions=res.getStringArray(R.array.tutorial_capitals_questions);
  String[] sampleAnswers=res.getStringArray(R.array.tutorial_capitals_answers);
  col.getDb().getDatabase().beginTransaction();
  try {
    long did=col.getDecks().id(res.getString(R.string.tutorial_title));
    int len=Math.min(questions.length,answers.length);
    for (int i=0; i < len + Math.min(sampleQuestions.length,sampleAnswers.length); i++) {
      Note note=col.newNote();
      int fidx=0;
      for (      String f : note.values()) {
        if (fidx == 0) {
          f=(i < len) ? questions[i] : sampleQuestions[i - len];
        }
 else         if (fidx == 1) {
          f=(i < len) ? answers[i] : sampleAnswers[i - len];
        }
        fidx++;
      }
      note.setDid(did);
      col.addNote(note);
    }
    if (col.getSched().cardCount("(" + did + ")") == 0) {
      col.getDecks().rem(did,true);
      return new TaskData(false);
    }
 else {
      col.save();
      col.getDb().getDatabase().setTransactionSuccessful();
      return new TaskData(true);
    }
  }
  finally {
    col.getDb().getDatabase().endTransaction();
  }
}
