{
  super.onCreate(savedInstanceState);
  StyledDialog.Builder builder=new StyledDialog.Builder(getActivity());
  setCancelable(true);
  builder.setTitle(getTitle());
  builder.setMessage(getMessage());
switch (getArguments().getInt("dialogType")) {
case DIALOG_USER_NOT_LOGGED_IN_SYNC:
    builder.setIcon(R.drawable.ic_dialog_alert);
  builder.setNegativeButton(res().getString(R.string.dialog_cancel),null);
builder.setPositiveButton(res().getString(R.string.log_in),new DialogInterface.OnClickListener(){
  @Override public void onClick(  DialogInterface dialog,  int which){
    ((SyncErrorDialogListener)getActivity()).loginToSyncServer();
  }
}
);
return builder.create();
case DIALOG_CONNECTION_ERROR:
builder.setIcon(R.drawable.ic_dialog_alert);
builder.setPositiveButton(res().getString(R.string.retry),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((SyncErrorDialogListener)getActivity()).sync();
dismissAllDialogFragments();
}
}
);
builder.setNegativeButton(res().getString(R.string.dialog_cancel),clearAllDialogsClickListener);
return builder.create();
case DIALOG_SYNC_CONFLICT_RESOLUTION:
builder.setIcon(android.R.drawable.ic_input_get);
builder.setPositiveButton(res().getString(R.string.sync_conflict_local),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((SyncErrorDialogListener)getActivity()).showSyncErrorDialog(DIALOG_SYNC_CONFLICT_CONFIRM_KEEP_LOCAL);
}
}
);
builder.setNeutralButton(res().getString(R.string.sync_conflict_remote),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((SyncErrorDialogListener)getActivity()).showSyncErrorDialog(DIALOG_SYNC_CONFLICT_CONFIRM_KEEP_REMOTE);
}
}
);
builder.setNegativeButton(res().getString(R.string.dialog_cancel),clearAllDialogsClickListener);
builder.setCancelable(true);
return builder.create();
case DIALOG_SYNC_CONFLICT_CONFIRM_KEEP_LOCAL:
builder.setPositiveButton(res().getString(R.string.dialog_positive_overwrite),new Dialog.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
SyncErrorDialogListener activity=(SyncErrorDialogListener)getActivity();
activity.sync("upload",activity.getSyncMediaUsn());
dismissAllDialogFragments();
}
}
);
builder.setNegativeButton(res().getString(R.string.dialog_cancel),null);
return builder.create();
case DIALOG_SYNC_CONFLICT_CONFIRM_KEEP_REMOTE:
builder.setPositiveButton(res().getString(R.string.dialog_positive_overwrite),new Dialog.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
SyncErrorDialogListener activity=(SyncErrorDialogListener)getActivity();
activity.sync("download",activity.getSyncMediaUsn());
dismissAllDialogFragments();
}
}
);
builder.setNegativeButton(res().getString(R.string.dialog_cancel),null);
return builder.create();
case DIALOG_SYNC_SANITY_ERROR:
builder.setPositiveButton(getString(R.string.sync_sanity_local),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((SyncErrorDialogListener)getActivity()).showSyncErrorDialog(DIALOG_SYNC_SANITY_ERROR_CONFIRM_KEEP_LOCAL);
}
}
);
builder.setNeutralButton(getString(R.string.sync_sanity_remote),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((SyncErrorDialogListener)getActivity()).showSyncErrorDialog(DIALOG_SYNC_SANITY_ERROR_CONFIRM_KEEP_REMOTE);
}
}
);
builder.setNegativeButton(res().getString(R.string.dialog_cancel),null);
return builder.create();
case DIALOG_SYNC_SANITY_ERROR_CONFIRM_KEEP_LOCAL:
builder.setPositiveButton(res().getString(R.string.dialog_positive_overwrite),new Dialog.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
SyncErrorDialogListener activity=(SyncErrorDialogListener)getActivity();
Collection col=activity.getCol();
if (col != null) {
col.modSchema(true);
col.setMod();
activity.sync("upload",0);
dismissAllDialogFragments();
}
}
}
);
builder.setNegativeButton(res().getString(R.string.dialog_cancel),null);
return builder.create();
case DIALOG_SYNC_SANITY_ERROR_CONFIRM_KEEP_REMOTE:
builder.setPositiveButton(res().getString(R.string.dialog_positive_overwrite),new Dialog.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
SyncErrorDialogListener activity=(SyncErrorDialogListener)getActivity();
Collection col=activity.getCol();
if (col != null) {
col.modSchema(true);
col.setMod();
activity.sync("download",0);
dismissAllDialogFragments();
}
}
}
);
builder.setNegativeButton(res().getString(R.string.dialog_cancel),null);
return builder.create();
default :
return null;
}
}
