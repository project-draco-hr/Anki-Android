{
  StyledDialog dialog=null;
  Resources res=getResources();
  StyledDialog.Builder builder1=new StyledDialog.Builder(this.getActivity());
  builder1.setTitle(res.getString(R.string.custom_study));
  builder1.setIcon(android.R.drawable.ic_menu_sort_by_size);
  builder1.setItems(res.getStringArray(R.array.custom_study_options_labels),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      DialogFragment dialogFragment;
      if (which == CustomStudyDialog.CUSTOM_STUDY_TAGS) {
        dialogFragment=com.ichi2.anki.dialogs.TagsDialog.newInstance(TagsDialog.TYPE_CUSTOM_STUDY_TAGS,new ArrayList<String>(),new ArrayList<String>(getCol().getTags().all()));
        ((TagsDialog)dialogFragment).setTagsDialogListener(new TagsDialogListener(){
          @Override public void onPositive(          List<String> selectedTags,          int option){
            StringBuilder sb=new StringBuilder();
switch (option) {
case 1:
              sb.append("is:new ");
            break;
case 2:
          sb.append("is:due ");
        break;
default :
      break;
  }
  int i=0;
  for (  String tag : selectedTags) {
    if (i != 0) {
      sb.append("or ");
    }
 else {
      sb.append("(");
    }
    sb.append("tag:").append(tag).append(" ");
    i++;
  }
  if (i > 0) {
    sb.append(")");
  }
  mSearchTerms=sb.toString();
  createFilteredDeck(new JSONArray(),new Object[]{mSearchTerms,Consts.DYN_MAX_SIZE,Consts.DYN_RANDOM},false);
}
}
);
}
 else {
dialogFragment=CustomStudyDialog.newInstance(which);
}
((AnkiActivity)getActivity()).showDialogFragment(dialogFragment);
}
}
);
builder1.setCancelable(true);
dialog=builder1.create();
dialog.setOwnerActivity(getActivity());
dialog.show();
}
