{
switch (item.getItemId()) {
case R.id.action_undo:
    Timber.i("StudyOptionsFragment:: Undo button pressed");
  getCol().undo();
openReviewer();
return true;
case R.id.action_deck_options:
Timber.i("StudyOptionsFragment:: Deck options button pressed");
if (getCol().getDecks().isDyn(getCol().getDecks().selected())) {
openFilteredDeckOptions();
}
 else {
Intent i=new Intent(getActivity(),DeckOptions.class);
startActivityForResult(i,DECK_OPTIONS);
ActivityTransitionAnimation.slide(getActivity(),ActivityTransitionAnimation.FADE);
}
return true;
case R.id.action_custom_study:
Timber.i("StudyOptionsFragment:: custom study button pressed");
showCustomStudyContextMenu();
return true;
case R.id.action_unbury:
Timber.i("StudyOptionsFragment:: unbury button pressed");
getCol().getSched().unburyCardsForDeck();
refreshInterfaceAndDecklist(true);
item.setVisible(false);
return true;
case R.id.action_rebuild:
Timber.i("StudyOptionsFragment:: rebuild cram deck button pressed");
mProgressDialog=StyledProgressDialog.show(getActivity(),"",getResources().getString(R.string.rebuild_cram_deck),true);
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_REBUILD_CRAM,getDeckTaskListener(true),new DeckTask.TaskData(mFragmented));
return true;
case R.id.action_empty:
Timber.i("StudyOptionsFragment:: empty cram deck button pressed");
mProgressDialog=StyledProgressDialog.show(getActivity(),"",getResources().getString(R.string.empty_cram_deck),false);
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_EMPTY_CRAM,getDeckTaskListener(true),new DeckTask.TaskData(mFragmented));
return true;
case R.id.action_rename:
((DeckPicker)getActivity()).renameDeckDialog(getCol().getDecks().selected());
return true;
case R.id.action_delete:
((DeckPicker)getActivity()).confirmDeckDeletion(getCol().getDecks().selected());
return true;
case R.id.action_export:
((DeckPicker)getActivity()).exportDeck(getCol().getDecks().selected());
return true;
default :
return false;
}
}
