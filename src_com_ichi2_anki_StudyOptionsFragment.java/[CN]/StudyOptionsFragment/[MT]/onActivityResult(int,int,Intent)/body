{
  super.onActivityResult(requestCode,resultCode,intent);
  if (resultCode == DeckPicker.RESULT_DB_ERROR) {
    closeStudyOptions(DeckPicker.RESULT_DB_ERROR);
  }
  if (resultCode == AnkiDroidApp.RESULT_TO_HOME) {
    closeStudyOptions();
    return;
  }
  if (resultCode == DeckPicker.RESULT_MEDIA_EJECTED) {
    closeStudyOptions(DeckPicker.RESULT_MEDIA_EJECTED);
  }
 else {
    if (!AnkiDroidApp.colIsOpen()) {
      reloadCollection();
      mDontSaveOnStop=false;
      return;
    }
    if (requestCode == DECK_OPTIONS) {
      if (mCramInitialConfig != null) {
        mCramInitialConfig=null;
        try {
          JSONObject deck=AnkiDroidApp.getCol().getDecks().current();
          if (deck.getInt("dyn") != 0 && deck.has("empty")) {
            deck.remove("empty");
          }
        }
 catch (        JSONException e) {
          throw new RuntimeException(e);
        }
        rebuildCramDeck();
      }
 else {
        resetAndUpdateValuesFromDeck();
      }
    }
 else     if (requestCode == ADD_NOTE && resultCode != Activity.RESULT_CANCELED) {
      resetAndUpdateValuesFromDeck();
    }
 else     if (requestCode == REQUEST_REVIEW) {
switch (resultCode) {
default :
        resetAndUpdateValuesFromDeck();
      break;
case Reviewer.RESULT_NO_MORE_CARDS:
    prepareCongratsView();
  setFragmentContentView(mCongratsView);
break;
}
mDontSaveOnStop=false;
}
 else if (requestCode == BROWSE_CARDS && (resultCode == Activity.RESULT_OK || resultCode == Activity.RESULT_CANCELED)) {
mDontSaveOnStop=false;
resetAndUpdateValuesFromDeck();
}
 else if (requestCode == STATISTICS && mCurrentContentView == CONTENT_CONGRATS) {
resetAndUpdateValuesFromDeck();
mCurrentContentView=CONTENT_STUDY_OPTIONS;
setFragmentContentView(mStudyOptionsView);
}
}
}
