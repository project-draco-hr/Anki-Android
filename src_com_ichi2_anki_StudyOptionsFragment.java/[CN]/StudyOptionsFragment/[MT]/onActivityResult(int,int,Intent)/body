{
  super.onActivityResult(requestCode,resultCode,intent);
  Log.i(AnkiDroidApp.TAG,"StudyOptions: onActivityResult");
  if (resultCode == DeckPicker.RESULT_DB_ERROR) {
    closeStudyOptions(DeckPicker.RESULT_DB_ERROR);
  }
  if (resultCode == AnkiDroidApp.RESULT_TO_HOME) {
    closeStudyOptions();
    return;
  }
  if (resultCode == DeckPicker.RESULT_MEDIA_EJECTED) {
    closeStudyOptions(DeckPicker.RESULT_MEDIA_EJECTED);
  }
 else   if (requestCode == DECK_OPTIONS) {
    try {
      JSONObject deck=mCol.getDecks().current();
      if (deck.getInt("dyn") != 0 && deck.has("empty") && deck.getBoolean("empty")) {
        deck.remove("empty");
        rebuildCramDeck();
      }
 else {
        resetAndUpdateValuesFromDeck();
      }
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
  }
 else   if (requestCode == ADD_NOTE && resultCode != getActivity().RESULT_CANCELED) {
    resetAndUpdateValuesFromDeck();
  }
 else   if (requestCode == PREFERENCES_UPDATE) {
    restorePreferences();
  }
 else   if (requestCode == REQUEST_REVIEW) {
    Log.i(AnkiDroidApp.TAG,"Result code = " + resultCode);
switch (resultCode) {
case Reviewer.RESULT_SESSION_COMPLETED:
default :
      resetAndUpdateValuesFromDeck();
    break;
case Reviewer.RESULT_NO_MORE_CARDS:
  mTextCongratsMessage.setText(mCol.getSched().finishedMsg(getActivity()));
setFragmentContentView(mCongratsView);
break;
}
mDontSaveOnStop=false;
}
 else if (requestCode == BROWSE_CARDS && resultCode == getActivity().RESULT_OK) {
mDontSaveOnStop=false;
resetAndUpdateValuesFromDeck();
}
 else if (requestCode == STATISTICS && mCurrentContentView == CONTENT_CONGRATS) {
resetAndUpdateValuesFromDeck();
setFragmentContentView(mStudyOptionsView);
}
}
