{
  DeckTask.launchDeckTask(DeckTask.TASK_TYPE_OPEN_COLLECTION,new DeckTask.TaskListener(){
    @Override public void onPostExecute(    DeckTask.TaskData result){
      if (mOpenCollectionDialog.isShowing()) {
        try {
          mOpenCollectionDialog.dismiss();
        }
 catch (        Exception e) {
          Log.e(AnkiDroidApp.TAG,"onPostExecute - Dialog dismiss Exception = " + e.getMessage());
        }
      }
      if (!AnkiDroidApp.colIsOpen()) {
        closeStudyOptions();
      }
 else       if (!mFragmented) {
        ((StudyOptionsActivity)getActivity()).loadContent(false);
      }
    }
    @Override public void onPreExecute(){
      mOpenCollectionDialog=StyledOpenCollectionDialog.show(getActivity(),getResources().getString(R.string.open_collection),new OnCancelListener(){
        @Override public void onCancel(        DialogInterface arg0){
          closeStudyOptions();
        }
      }
);
    }
    @Override public void onProgressUpdate(    DeckTask.TaskData... values){
    }
  }
,new DeckTask.TaskData(AnkiDroidApp.getSharedPrefs(getActivity().getBaseContext()).getString("deckPath",AnkiDroidApp.getDefaultAnkiDroidDirectory()) + AnkiDroidApp.COLLECTION_PATH));
}
