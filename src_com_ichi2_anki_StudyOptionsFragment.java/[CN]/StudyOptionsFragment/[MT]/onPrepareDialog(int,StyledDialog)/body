{
  Resources res=getResources();
switch (id) {
case DIALOG_CUSTOM_STUDY_DETAILS:
    styledDialog.setTitle(res.getStringArray(R.array.custom_study_options_labels)[mCustomDialogChoice]);
switch (mCustomDialogChoice + 1) {
case CUSTOM_STUDY_NEW:
    if (colOpen()) {
      Collection col=getCol();
      mCustomStudyTextView1.setText(res.getString(R.string.custom_study_new_total_new,col.getSched().totalNewForCurrentDeck()));
    }
  mCustomStudyTextView2.setText(res.getString(R.string.custom_study_new_extend));
mCustomStudyEditText.setText(Integer.toString(AnkiDroidApp.getSharedPrefs(getActivity()).getInt("extendNew",10)));
styledDialog.setButtonOnClickListener(Dialog.BUTTON_POSITIVE,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
  if (colOpen()) {
    try {
      int n=Integer.parseInt(mCustomStudyEditText.getText().toString());
      AnkiDroidApp.getSharedPrefs(getActivity()).edit().putInt("extendNew",n).commit();
      Collection col=getCol();
      JSONObject deck=col.getDecks().current();
      deck.put("extendNew",n);
      col.getDecks().save(deck);
      col.getSched().extendLimits(n,0);
      resetAndRefreshInterface();
    }
 catch (    NumberFormatException e) {
      Themes.showThemedToast(getActivity().getBaseContext(),getResources().getString(R.string.custom_study_invalid_number),false);
    }
catch (    JSONException e) {
      throw new RuntimeException(e);
    }
  }
}
}
);
break;
case CUSTOM_STUDY_REV:
if (colOpen()) {
Collection col=getCol();
mCustomStudyTextView1.setText(res.getString(R.string.custom_study_rev_total_rev,col.getSched().totalRevForCurrentDeck()));
}
mCustomStudyTextView2.setText(res.getString(R.string.custom_study_rev_extend));
mCustomStudyEditText.setText(Integer.toString(AnkiDroidApp.getSharedPrefs(getActivity()).getInt("extendRev",10)));
styledDialog.setButtonOnClickListener(Dialog.BUTTON_POSITIVE,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
if (colOpen()) {
try {
int n=Integer.parseInt(mCustomStudyEditText.getText().toString());
AnkiDroidApp.getSharedPrefs(getActivity()).edit().putInt("extendRev",n).commit();
Collection col=getCol();
JSONObject deck=col.getDecks().current();
deck.put("extendRev",n);
col.getDecks().save(deck);
col.getSched().extendLimits(0,n);
resetAndRefreshInterface();
}
 catch (NumberFormatException e) {
Themes.showThemedToast(getActivity().getBaseContext(),getResources().getString(R.string.custom_study_invalid_number),false);
}
catch (JSONException e) {
throw new RuntimeException(e);
}
}
}
}
);
break;
case CUSTOM_STUDY_FORGOT:
mCustomStudyTextView1.setText("");
mCustomStudyTextView2.setText(res.getString(R.string.custom_study_forgotten));
mCustomStudyEditText.setText(Integer.toString(AnkiDroidApp.getSharedPrefs(getActivity()).getInt("forgottenDays",2)));
styledDialog.setButtonOnClickListener(Dialog.BUTTON_POSITIVE,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
JSONArray ar=new JSONArray();
try {
int forgottenDays=Integer.parseInt(((EditText)mCustomStudyEditText).getText().toString());
ar.put(0,1);
createFilteredDeck(ar,new Object[]{String.format(Locale.US,"rated:%d:1",forgottenDays),Consts.DYN_MAX_SIZE,Consts.DYN_RANDOM},false);
}
 catch (NumberFormatException e) {
Themes.showThemedToast(getActivity().getBaseContext(),getResources().getString(R.string.custom_study_invalid_number),false);
}
catch (JSONException e) {
throw new RuntimeException(e);
}
}
}
);
break;
case CUSTOM_STUDY_AHEAD:
mCustomStudyTextView1.setText("");
mCustomStudyTextView2.setText(res.getString(R.string.custom_study_ahead));
mCustomStudyEditText.setText(Integer.toString(AnkiDroidApp.getSharedPrefs(getActivity()).getInt("aheadDays",1)));
styledDialog.setButtonOnClickListener(Dialog.BUTTON_POSITIVE,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
try {
int days=Integer.parseInt(((EditText)mCustomStudyEditText).getText().toString());
createFilteredDeck(new JSONArray(),new Object[]{String.format(Locale.US,"prop:due<=%d",days),Consts.DYN_MAX_SIZE,Consts.DYN_DUE},true);
}
 catch (NumberFormatException e) {
Themes.showThemedToast(getActivity().getBaseContext(),getResources().getString(R.string.custom_study_invalid_number),false);
}
}
}
);
break;
case CUSTOM_STUDY_RANDOM:
mCustomStudyTextView1.setText("");
mCustomStudyTextView2.setText(res.getString(R.string.custom_study_random));
mCustomStudyEditText.setText(Integer.toString(AnkiDroidApp.getSharedPrefs(getActivity()).getInt("randomCards",100)));
styledDialog.setButtonOnClickListener(Dialog.BUTTON_POSITIVE,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
try {
int randomCards=Integer.parseInt(((EditText)mCustomStudyEditText).getText().toString());
createFilteredDeck(new JSONArray(),new Object[]{"",randomCards,Consts.DYN_RANDOM},true);
}
 catch (NumberFormatException e) {
Themes.showThemedToast(getActivity().getBaseContext(),getResources().getString(R.string.custom_study_invalid_number),false);
}
}
}
);
break;
case CUSTOM_STUDY_PREVIEW:
mCustomStudyTextView1.setText("");
mCustomStudyTextView2.setText(res.getString(R.string.custom_study_preview));
mCustomStudyEditText.setText(Integer.toString(AnkiDroidApp.getSharedPrefs(getActivity()).getInt("previewDays",1)));
styledDialog.setButtonOnClickListener(Dialog.BUTTON_POSITIVE,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
String previewDays=((EditText)mCustomStudyEditText).getText().toString();
createFilteredDeck(new JSONArray(),new Object[]{"is:new added:" + previewDays,Consts.DYN_MAX_SIZE,Consts.DYN_OLDEST},false);
}
}
);
break;
}
}
}
