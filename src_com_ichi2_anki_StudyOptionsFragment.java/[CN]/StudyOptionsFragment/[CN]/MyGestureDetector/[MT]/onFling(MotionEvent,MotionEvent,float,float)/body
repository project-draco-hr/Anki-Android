{
  if (mSwipeEnabled) {
    try {
      if (e1.getX() - e2.getX() > AnkiDroidApp.sSwipeMinDistance && Math.abs(velocityX) > AnkiDroidApp.sSwipeThresholdVelocity && Math.abs(e1.getY() - e2.getY()) < AnkiDroidApp.sSwipeMaxOffPath) {
        if (mCongratsView != null && mCongratsView.getVisibility() == View.VISIBLE) {
          if (AnkiDroidApp.colIsOpen()) {
            AnkiDroidApp.getCol().undo();
            resetAndUpdateValuesFromDeck();
            finishCongrats();
          }
        }
 else {
          openReviewer();
        }
      }
 else       if (e2.getX() - e1.getX() > AnkiDroidApp.sSwipeMinDistance && Math.abs(velocityX) > AnkiDroidApp.sSwipeThresholdVelocity && Math.abs(e1.getY() - e2.getY()) < AnkiDroidApp.sSwipeMaxOffPath) {
        closeStudyOptions();
      }
 else       if (e2.getY() - e1.getY() > AnkiDroidApp.sSwipeMinDistance && Math.abs(velocityY) > AnkiDroidApp.sSwipeThresholdVelocity && Math.abs(e1.getX() - e2.getX()) < AnkiDroidApp.sSwipeMaxOffPath) {
        DeckTask.launchDeckTask(DeckTask.TASK_TYPE_LOAD_STATISTICS,mLoadStatisticsHandler,new DeckTask.TaskData(AnkiDroidApp.getCol(),Stats.TYPE_FORECAST,false));
      }
 else       if (e1.getY() - e2.getY() > AnkiDroidApp.sSwipeMinDistance && Math.abs(velocityY) > AnkiDroidApp.sSwipeThresholdVelocity && Math.abs(e1.getX() - e2.getX()) < AnkiDroidApp.sSwipeMaxOffPath) {
        addNote();
      }
    }
 catch (    Exception e) {
      Log.e(AnkiDroidApp.TAG,"onFling Exception = " + e.getMessage());
    }
  }
  return false;
}
