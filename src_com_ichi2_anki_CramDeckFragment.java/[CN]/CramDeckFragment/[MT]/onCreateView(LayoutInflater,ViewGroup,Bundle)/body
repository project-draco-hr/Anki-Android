{
  if (container == null) {
    return null;
  }
  mFragmented=getActivity().getClass() != CramDeckActivity.class;
  View main=inflater.inflate(R.layout.cram_deck,null);
  mCramDeckName=(EditText)main.findViewById(R.id.cram_deck_name);
  mCramDeckName.addTextChangedListener(new TextWatcher(){
    @Override public void afterTextChanged(    Editable arg0){
      if (mCramDeckName.getText().length() == 0) {
        mCreateButton.setEnabled(false);
      }
 else {
        mCreateButton.setEnabled(true);
      }
    }
    @Override public void beforeTextChanged(    CharSequence arg0,    int arg1,    int arg2,    int arg3){
    }
    @Override public void onTextChanged(    CharSequence arg0,    int arg1,    int arg2,    int arg3){
    }
  }
);
  mDecks=(LinearLayout)main.findViewById(R.id.cram_deck_decks_button);
  mDeckLabel=(TextView)main.findViewById(R.id.cram_deck_decks_text);
  mDecks.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
    }
  }
);
  mSteps=(EditText)main.findViewById(R.id.cram_deck_steps);
  mLimit=(EditText)main.findViewById(R.id.cram_deck_limit);
  mInterval=(EditText)main.findViewById(R.id.cram_deck_interval);
  mCreateButton=(Button)main.findViewById(R.id.cram_deck_create);
  mCreateButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      try {
        mDeck.put("steps",DeckOptions.getDelays(mSteps.getText().toString()));
        mDeck.put("limit",Integer.parseInt(mLimit.getText().toString()));
        mDeck.put("fmult",Integer.parseInt(mLimit.getText().toString()) / 100.0);
      }
 catch (      JSONException e) {
        throw new RuntimeException(e);
      }
      closeCramDeckAdder();
    }
  }
);
  mCancelButton=(Button)main.findViewById(R.id.cram_deck_cancel);
  mCancelButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      closeCramDeckAdder();
    }
  }
);
  mCol=Collection.currentCollection();
  if (mCol == null) {
    return null;
  }
  mDeck=mCol.getDecks().current();
  if (!mFragmented) {
    main.setBackgroundResource(R.drawable.white_wallpaper);
  }
  return main;
}
