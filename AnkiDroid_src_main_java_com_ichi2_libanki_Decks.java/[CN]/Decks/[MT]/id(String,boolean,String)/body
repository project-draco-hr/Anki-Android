{
  try {
    name=name.replace("\"","");
    for (    Map.Entry<Long,JSONObject> g : mDecks.entrySet()) {
      if (g.getValue().getString("name").equalsIgnoreCase(name)) {
        return g.getKey();
      }
    }
    if (!create) {
      return null;
    }
    if (name.contains("::")) {
      name=_ensureParents(name);
    }
    JSONObject g;
    long id;
    g=new JSONObject(type);
    g.put("name",name);
    while (true) {
      id=Utils.intNow(1000);
      if (!mDecks.containsKey(id)) {
        break;
      }
    }
    g.put("id",id);
    mDecks.put(id,g);
    save(g);
    maybeAddToActive();
    return id;
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
}
