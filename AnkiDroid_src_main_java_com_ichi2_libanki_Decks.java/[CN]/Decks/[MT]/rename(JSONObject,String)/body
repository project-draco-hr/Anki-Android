{
  if (allNames().contains(newName)) {
    throw new DeckRenameException(DeckRenameException.ALREADY_EXISTS);
  }
  try {
    newName=_ensureParents(newName);
    if (newName.contains("::")) {
      List<String> parts=Arrays.asList(newName.split("::",-1));
      String newParent=TextUtils.join("::",parts.subList(0,parts.size() - 1));
      if (byName(newParent).getInt("dyn") != 0) {
        throw new DeckRenameException(DeckRenameException.FILTERED_NOSUBDEKCS);
      }
    }
    String oldName=g.getString("name");
    for (    JSONObject grp : all()) {
      if (grp.getString("name").startsWith(oldName + "::")) {
        grp.put("name",grp.getString("name").replaceFirst(Pattern.quote(oldName + "::"),newName + "::"));
        save(grp);
      }
    }
    g.put("name",newName);
    newName=_ensureParents(newName);
    save(g);
    maybeAddToActive();
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
}
