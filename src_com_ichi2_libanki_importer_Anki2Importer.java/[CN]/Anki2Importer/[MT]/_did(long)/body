{
  try {
    if (mDecks.containsKey(did)) {
      return mDecks.get(did);
    }
    JSONObject g=mSrc.getDecks().get(did);
    String name=g.getString("name");
    if (mDeckPrefix != null) {
      String[] tmpname=name.split("::");
      name=mDeckPrefix;
      if (tmpname.length > 1) {
        for (int i=0; i < tmpname.length - 2; i++) {
          name+="::" + tmpname[i + 1];
        }
      }
    }
    String head="";
    String[] parents=name.split("::");
    for (int i=0; i < parents.length - 1; ++i) {
      if (head.length() > 0) {
        head=head.concat("::");
      }
      head=head.concat(parents[i]);
      long idInSrc=mSrc.getDecks().id(head);
      _did(idInSrc);
    }
    long newid=mDst.getDecks().id(name);
    if (g.has("conf") && g.getLong("conf") != 1) {
      mDst.getDecks().updateConf(mSrc.getDecks().getConf(g.getLong("conf")));
      JSONObject g2=mDst.getDecks().get(newid);
      g2.put("conf",g.getLong("conf"));
      mDst.getDecks().save(g2);
    }
    JSONObject deck=mDst.getDecks().get(newid);
    deck.put("desc",g.getString("desc"));
    mDst.getDecks().save(deck);
    mDecks.put(did,newid);
    return newid;
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
}
