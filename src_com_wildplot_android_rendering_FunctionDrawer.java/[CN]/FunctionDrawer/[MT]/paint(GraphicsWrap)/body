{
  isOnReset=false;
  if (function instanceof StepFunction2D) {
    this.isStepFunction=true;
  }
  StrokeWrap oldStroke=g.getStroke();
  g.setStroke(new BasicStrokeWrap(this.size));
  ColorWrap oldColor=g.getColor();
  RectangleWrap field=g.getClipBounds();
  g.setColor(color);
  if (autoscale) {
    double[] start=this.plotSheet.toCoordinatePoint(0,0,field);
    double[] end=this.plotSheet.toCoordinatePoint(0,0 + this.plotSheet.getFrameThickness()[PlotSheet.UPPER_FRAME_THICKNESS_INDEX],field);
    this.scaleFactor=Math.abs(end[1] - start[1]);
  }
 else {
    this.scaleFactor=1.0;
  }
  if (this.isOnFrame)   yOffset=plotSheet.getyRange()[0];
  double[] drawingPoint=plotSheet.toCoordinatePoint(field.x,0,field);
  if (this.isOnFrame)   drawingPoint=plotSheet.toCoordinatePoint(field.x + this.plotSheet.getFrameThickness()[PlotSheet.LEFT_FRAME_THICKNESS_INDEX],0,field);
  double f_x=function.f(drawingPoint[0]) * scaleFactor * extraScaleFactor;
  double f_x_old=f_x;
  float[] coordStart=plotSheet.toGraphicPoint(drawingPoint[0],f_x,field);
  if (this.isOnFrame)   coordStart=plotSheet.toGraphicPoint(drawingPoint[0],this.yOffset - f_x,field);
  float[] coordEnd=coordStart;
  float leftStart=field.x + 1;
  float rightEnd=field.width + field.x;
  if (this.isOnFrame) {
    leftStart=field.x + this.plotSheet.getFrameThickness()[PlotSheet.LEFT_FRAME_THICKNESS_INDEX] + 1;
    rightEnd=field.width + field.x - this.plotSheet.getFrameThickness()[PlotSheet.RIGHT_FRAME_THICKNESS_INDEX];
  }
  if (this.hasLimit) {
    leftStart=plotSheet.xToGraphic(leftLimit,field);
    rightEnd=plotSheet.xToGraphic(rightLimit,field);
  }
  for (int i=Math.round(leftStart); i < rightEnd; i++) {
    if (isOnReset)     return;
    drawingPoint=plotSheet.toCoordinatePoint(i,0,field);
    coordEnd=coordStart;
    f_x_old=f_x;
    f_x=function.f(drawingPoint[0]) * scaleFactor * extraScaleFactor;
    coordStart=plotSheet.toGraphicPoint(drawingPoint[0],f_x,field);
    if (this.isOnFrame)     coordStart=plotSheet.toGraphicPoint(drawingPoint[0],this.yOffset - f_x,field);
    double overlap=0.2 * (plotSheet.getyRange()[1] - plotSheet.getyRange()[0]);
    if (f_x_old != Double.NaN && f_x != Double.NaN && f_x_old != Double.NEGATIVE_INFINITY && f_x != Double.NEGATIVE_INFINITY && f_x_old != Double.POSITIVE_INFINITY && f_x != Double.POSITIVE_INFINITY && f_x_old <= plotSheet.getyRange()[1] + overlap && f_x_old >= plotSheet.getyRange()[0] - overlap && f_x <= plotSheet.getyRange()[1] + overlap && f_x >= plotSheet.getyRange()[0] - overlap) {
      g.drawLine(coordStart[0],coordStart[1],coordEnd[0],coordEnd[1]);
    }
 else     if (!warned) {
      System.err.println("Could not draw part of function, possible pole or out of reach");
      warned=true;
    }
  }
  g.setStroke(oldStroke);
  g.setColor(oldColor);
}
