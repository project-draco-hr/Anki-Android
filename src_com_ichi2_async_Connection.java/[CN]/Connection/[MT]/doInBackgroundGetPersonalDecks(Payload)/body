{
  Resources res=sContext.getResources();
  DeckManager.closeMainDeck();
  try {
    String username=(String)data.data[0];
    String password=(String)data.data[1];
    AnkiDroidProxy server=new AnkiDroidProxy(username,password);
    int connectResult=server.connect(false);
    if (connectResult != AnkiDroidProxy.LOGIN_OK) {
      if (connectResult == AnkiDroidProxy.LOGIN_INVALID_USER_PASS) {
        data.result=res.getString(R.string.invalid_username_password);
      }
 else       if (connectResult == AnkiDroidProxy.LOGIN_OLD_VERSION) {
        data.result=String.format(res.getString(R.string.sync_log_old_version),res.getString(R.string.link_ankidroid));
      }
 else       if (connectResult == AnkiDroidProxy.LOGIN_TOO_BUSY) {
        data.result=res.getString(R.string.sync_too_busy);
      }
 else {
        data.result=res.getString(R.string.login_generic_error);
      }
      data.success=false;
      return data;
    }
    data.result=server.getPersonalDecks();
  }
 catch (  Exception e) {
    data.success=false;
    data.result=null;
    data.exception=e;
    Log.e(AnkiDroidApp.TAG,"doInBackgroundGetPersonalDecks - Error getting personal decks = " + e.getMessage());
    Log.e(AnkiDroidApp.TAG,Log.getStackTraceString(e));
  }
  return data;
}
