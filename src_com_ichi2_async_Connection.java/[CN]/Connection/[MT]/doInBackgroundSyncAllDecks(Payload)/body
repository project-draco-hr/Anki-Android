{
  Log.i(AnkiDroidApp.TAG,"doInBackgroundSyncAllDecks");
  ArrayList<HashMap<String,String>> decksChangelogs=new ArrayList<HashMap<String,String>>();
  String username=(String)data.data[0];
  String password=(String)data.data[1];
  Log.i(AnkiDroidApp.TAG,"username = " + username);
  Log.i(AnkiDroidApp.TAG,"password = " + password);
  ArrayList<HashMap<String,String>> decksToSync=(ArrayList<HashMap<String,String>>)data.data[2];
  for (  HashMap<String,String> deckToSync : decksToSync) {
    Log.i(AnkiDroidApp.TAG,"Synchronizing deck");
    String deckPath=deckToSync.get("filepath");
    try {
      Deck deck=Deck.openDeck(deckPath);
      Payload syncDeckData=new Payload(new Object[]{username,password,deck,deckPath});
      syncDeckData=doInBackgroundSyncDeck(syncDeckData);
      decksChangelogs.add((HashMap<String,String>)syncDeckData.result);
    }
 catch (    Exception e) {
      Log.e(AnkiDroidApp.TAG,"Exception e = " + e.getMessage());
      String deckName=deckPath.substring(deckPath.lastIndexOf("/") + 1);
      deckName=deckName.substring(0,deckName.length() - ".anki".length());
      HashMap<String,String> deckChangelog=new HashMap<String,String>();
      deckChangelog.put("deckName",deckName);
      deckChangelog.put("message",sContext.getResources().getString(R.string.sync_log_error_message));
      decksChangelogs.add(deckChangelog);
    }
  }
  data.result=decksChangelogs;
  return data;
}
