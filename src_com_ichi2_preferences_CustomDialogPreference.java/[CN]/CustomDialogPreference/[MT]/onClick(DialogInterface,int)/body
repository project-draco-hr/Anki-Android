{
  if (which == DialogInterface.BUTTON_POSITIVE) {
    if (this.getTitle().equals(mContext.getResources().getString(R.string.reset_dialogs))) {
      Editor editor=AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext()).edit();
      editor.putBoolean("dontShowLowMemory",false);
      editor.commit();
    }
 else     if (this.getTitle().equals(mContext.getResources().getString(R.string.reset_messages))) {
      Editor editor=AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext()).edit();
      editor.putInt("lastMessageNum",0);
      editor.putBoolean("showBroadcastMessageToday",true);
      editor.commit();
    }
 else     if (this.getTitle().equals(mContext.getResources().getString(R.string.reset_all))) {
      if (MetaDB.resetDB(mContext)) {
        Toast successReport=Toast.makeText(this.getContext(),AnkiDroidApp.getAppResources().getString(R.string.reset_confirmation),Toast.LENGTH_SHORT);
        successReport.show();
      }
    }
 else     if (this.getTitle().equals(mContext.getResources().getString(R.string.deck_conf_reset))) {
      Editor editor=AnkiDroidApp.getSharedPrefs(mContext).edit();
      editor.putBoolean("confReset",true);
      editor.commit();
    }
 else     if (this.getTitle().equals(mContext.getResources().getString(R.string.deck_conf_remove))) {
      Editor editor=AnkiDroidApp.getSharedPrefs(mContext).edit();
      editor.putBoolean("confRemove",true);
      editor.commit();
    }
 else     if (this.getTitle().equals(mContext.getResources().getString(R.string.deck_conf_set_subdecks))) {
      Editor editor=AnkiDroidApp.getSharedPrefs(mContext).edit();
      editor.putBoolean("confSetSubdecks",true);
      editor.commit();
    }
 else {
      if (MetaDB.resetLanguages(mContext)) {
        Toast successReport=Toast.makeText(this.getContext(),AnkiDroidApp.getAppResources().getString(R.string.reset_confirmation),Toast.LENGTH_SHORT);
        successReport.show();
      }
    }
  }
}
