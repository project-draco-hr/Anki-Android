{
  super.onCreate(savedInstanceState);
  MaterialDialog.Builder builder=new MaterialDialog.Builder(getActivity()).title(getTitle()).content(getMessage()).cancelable(true);
switch (getArguments().getInt("dialogType")) {
case DIALOG_USER_NOT_LOGGED_IN_SYNC:
    Drawable icon=res().getDrawable(R.drawable.ic_sync_problem_black_36dp);
  icon.setAlpha(Themes.ALPHA_ICON_ENABLED_DARK);
return builder.icon(icon).positiveText(res().getString(R.string.log_in)).negativeText(res().getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
  @Override public void onPositive(  MaterialDialog dialog){
    ((SyncErrorDialogListener)getActivity()).loginToSyncServer();
  }
}
).show();
case DIALOG_CONNECTION_ERROR:
icon=res().getDrawable(R.drawable.ic_sync_problem_black_36dp);
icon.setAlpha(Themes.ALPHA_ICON_ENABLED_DARK);
return builder.icon(icon).positiveText(res().getString(R.string.retry)).negativeText(res().getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
((SyncErrorDialogListener)getActivity()).sync();
dismissAllDialogFragments();
}
@Override public void onNegative(MaterialDialog dialog){
dismissAllDialogFragments();
}
}
).show();
case DIALOG_SYNC_CONFLICT_RESOLUTION:
icon=res().getDrawable(R.drawable.ic_sync_problem_black_36dp);
icon.setAlpha(Themes.ALPHA_ICON_ENABLED_DARK);
return builder.icon(icon).positiveText(res().getString(R.string.sync_conflict_local)).negativeText(res().getString(R.string.sync_conflict_remote)).neutralText(res().getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
((SyncErrorDialogListener)getActivity()).showSyncErrorDialog(DIALOG_SYNC_CONFLICT_CONFIRM_KEEP_LOCAL);
}
@Override public void onNegative(MaterialDialog dialog){
((SyncErrorDialogListener)getActivity()).showSyncErrorDialog(DIALOG_SYNC_CONFLICT_CONFIRM_KEEP_REMOTE);
}
@Override public void onNeutral(MaterialDialog dialog){
dismissAllDialogFragments();
}
}
).show();
case DIALOG_SYNC_CONFLICT_CONFIRM_KEEP_LOCAL:
return builder.positiveText(res().getString(R.string.dialog_positive_overwrite)).negativeText(res().getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
SyncErrorDialogListener activity=(SyncErrorDialogListener)getActivity();
activity.sync("upload");
dismissAllDialogFragments();
}
}
).show();
case DIALOG_SYNC_CONFLICT_CONFIRM_KEEP_REMOTE:
return builder.positiveText(res().getString(R.string.dialog_positive_overwrite)).negativeText(res().getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
SyncErrorDialogListener activity=(SyncErrorDialogListener)getActivity();
activity.sync("download");
dismissAllDialogFragments();
}
}
).show();
case DIALOG_SYNC_SANITY_ERROR:
return builder.positiveText(res().getString(R.string.sync_sanity_local)).neutralText(res().getString(R.string.sync_sanity_remote)).negativeText(res().getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
((SyncErrorDialogListener)getActivity()).showSyncErrorDialog(DIALOG_SYNC_SANITY_ERROR_CONFIRM_KEEP_LOCAL);
}
@Override public void onNeutral(MaterialDialog dialog){
((SyncErrorDialogListener)getActivity()).showSyncErrorDialog(DIALOG_SYNC_SANITY_ERROR_CONFIRM_KEEP_REMOTE);
}
}
).show();
case DIALOG_SYNC_SANITY_ERROR_CONFIRM_KEEP_LOCAL:
return builder.positiveText(res().getString(R.string.dialog_positive_overwrite)).negativeText(res().getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
((SyncErrorDialogListener)getActivity()).sync("upload");
dismissAllDialogFragments();
}
}
).show();
case DIALOG_SYNC_SANITY_ERROR_CONFIRM_KEEP_REMOTE:
return builder.positiveText(res().getString(R.string.dialog_positive_overwrite)).negativeText(res().getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
((SyncErrorDialogListener)getActivity()).sync("download");
dismissAllDialogFragments();
}
}
).show();
default :
return null;
}
}
