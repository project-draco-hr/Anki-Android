{
  String mdir=dir();
  String base=fIllegalCharReg.matcher(new File(opath).getName()).replaceAll("");
  File newMediaFile=new File(mdir,base);
  String dst=newMediaFile.getAbsolutePath();
  if (!newMediaFile.exists()) {
    try {
      Utils.copyFile(new File(opath),newMediaFile);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
    return base;
  }
  if (Utils.fileChecksum(opath).equals(Utils.fileChecksum(dst))) {
    return base;
  }
  String root, ext;
  int extIndex=base.lastIndexOf('.');
  if (extIndex == 0 || extIndex == -1) {
    root=base;
    ext="";
  }
 else {
    root=base.substring(0,extIndex);
    ext=base.substring(extIndex);
  }
  StringBuilder sb=null;
  String path=null;
  Matcher m=null;
  int n=0;
  Pattern fileOrdinal=Pattern.compile(" \\((\\d+)\\)$");
  while (true) {
    sb=new StringBuilder(mdir);
    path=sb.append(File.separatorChar).append(root).append(ext).toString();
    newMediaFile=new File(path);
    if (!newMediaFile.exists()) {
      break;
    }
    m=fileOrdinal.matcher(root);
    if (!m.find()) {
      root=root.concat(" (1)");
    }
 else {
      n=Integer.parseInt(m.group(1));
      root=m.replaceFirst(" (" + String.valueOf(n + 1) + ")");
    }
  }
  try {
    Utils.copyFile(new File(opath),newMediaFile);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  return newMediaFile.getName();
}
