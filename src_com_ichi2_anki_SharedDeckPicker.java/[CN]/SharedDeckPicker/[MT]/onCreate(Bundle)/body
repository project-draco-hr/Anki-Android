{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.download_deck_picker);
  registerExternalStorageListener();
  initAlertDialogs();
  SharedPreferences pref=PrefSettings.getSharedPrefs(getBaseContext());
  username=pref.getString("username","");
  password=pref.getString("password","");
  mSharedDeckDownloads=new ArrayList<Download>();
  mSharedDecks=new ArrayList<SharedDeck>();
  mAllSharedDecks=new ArrayList<Object>();
  mSharedDecksAdapter=new SharedDecksAdapter();
  mSharedDecksListView=(ListView)findViewById(R.id.list);
  mSharedDecksListView.setAdapter(mSharedDecksAdapter);
  mSharedDecksListView.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      deckToDownload=(SharedDeck)mAllSharedDecks.get(position);
      SharedDeckDownload sharedDeckDownload=new SharedDeckDownload(deckToDownload.getId(),deckToDownload.getTitle(),deckToDownload.getFileName(),deckToDownload.getSize());
      mSharedDeckDownloads.add(sharedDeckDownload);
      refreshSharedDecksList();
      SharedPreferences preferences=PrefSettings.getSharedPrefs(getBaseContext());
      String deckPath=preferences.getString("deckPath",AnkiDroidApp.getStorageDirectory());
      mDownloadManager.downloadFile(sharedDeckDownload);
    }
  }
);
  mDownloadManager=DownloadManager.getSharedInstance(getApplicationContext(),username,password,pref.getString("deckPath",AnkiDroidApp.getStorageDirectory()));
  Connection.getSharedDecks(getSharedDecksListener,new Connection.Payload(new Object[]{}));
}
