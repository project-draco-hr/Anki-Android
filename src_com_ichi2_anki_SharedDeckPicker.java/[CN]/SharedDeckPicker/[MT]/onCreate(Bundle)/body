{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.download_deck_picker);
  initDownloadManagerService();
  registerExternalStorageListener();
  initDialogs();
  mSharedDeckDownloads=new ArrayList<Download>();
  mSharedDecks=new ArrayList<SharedDeck>();
  mAllSharedDecks=new ArrayList<Object>();
  mSharedDecksAdapter=new SharedDecksAdapter();
  mSharedDecksListView=(ListView)findViewById(R.id.list);
  mSharedDecksListView.setAdapter(mSharedDecksAdapter);
  registerForContextMenu(mSharedDecksListView);
  mSharedDecksListView.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      Resources res=getResources();
      Object obj=mAllSharedDecks.get(position);
      if (obj instanceof SharedDeck) {
        SharedDeck selectedDeck=(SharedDeck)obj;
        for (        Download d : mSharedDeckDownloads) {
          if (d.getTitle().equals(selectedDeck.getTitle())) {
            Toast duplicateMessage=Toast.makeText(SharedDeckPicker.this,res.getString(R.string.duplicate_download),Toast.LENGTH_SHORT);
            duplicateMessage.show();
            return;
          }
        }
        SharedDeckDownload sharedDeckDownload=new SharedDeckDownload(selectedDeck.getId(),selectedDeck.getTitle());
        sharedDeckDownload.setSize(selectedDeck.getSize());
        mSharedDeckDownloads.add(sharedDeckDownload);
        refreshSharedDecksList();
        try {
          startService(mDownloadManagerServiceIntent);
          mDownloadManagerService.downloadFile(sharedDeckDownload);
        }
 catch (        RemoteException e) {
          Log.e(AnkiDroidApp.TAG,"RemoteException = " + e.getMessage());
          e.printStackTrace();
        }
      }
    }
  }
);
  Connection.getSharedDecks(getSharedDecksListener,new Connection.Payload(new Object[]{}));
}
