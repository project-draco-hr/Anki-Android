{
  super.onCreate(savedInstanceState);
  if (notificationBar == false) {
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
  }
  setContentView(R.layout.main);
  registerExternalStorageListener();
  initAlertDialogs();
  mSharedDecks=new ArrayList<SharedDeck>();
  mSharedDecksAdapter=new SimpleAdapter(this,mSharedDecks,R.layout.shared_deck_item,new String[]{"title","facts"},new int[]{R.id.SharedDeckTitle,R.id.SharedDeckFacts});
  mSharedDecksListView=(ListView)findViewById(R.id.files);
  mSharedDecksListView.setAdapter(mSharedDecksAdapter);
  mSharedDecksListView.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      downloadedDeck=mSharedDecks.get(position);
      Connection.downloadSharedDeck(downloadSharedDeckListener,new Connection.Payload(new Object[]{downloadedDeck}));
    }
  }
);
  Connection.getSharedDecks(getSharedDecksListener,new Connection.Payload(new Object[]{}));
}
