{
  SharedDeckDownload download=(SharedDeckDownload)downloads[0];
  URL url;
  RandomAccessFile file=null;
  InputStream is=null;
  try {
    url=new URL("http://" + AnkiDroidProxy.SYNC_HOST + "/file/get?id="+ download.getId());
    HttpURLConnection connection=(HttpURLConnection)url.openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setUseCaches(false);
    connection.setRequestMethod("GET");
    connection.setRequestProperty("Accept-Encoding","identity");
    connection.setRequestProperty("Host",AnkiDroidProxy.SYNC_HOST);
    connection.setRequestProperty("Connection","close");
    connection.connect();
    long startTime=System.currentTimeMillis();
    if (connection.getResponseCode() / 100 != 2) {
      download.setStatus(Download.STATUS_ERROR);
      publishProgress();
    }
 else {
      download.setStatus(Download.STATUS_DOWNLOADING);
      publishProgress();
    }
    int contentLength=connection.getContentLength();
    if (contentLength < 1) {
    }
    if (download.getSize() == -1 && contentLength != -1) {
      download.setSize(contentLength);
    }
    file=new RandomAccessFile(mDestination + "/tmp/" + download.getTitle()+ "."+ download.getId()+ ".shared.zip.tmp","rw");
    is=connection.getInputStream();
    while (download.getStatus() == Download.STATUS_DOWNLOADING) {
      byte[] buffer;
      buffer=new byte[MAX_BUFFER_SIZE];
      int read=is.read(buffer);
      if (read == -1) {
        break;
      }
      file.write(buffer,0,read);
      download.setDownloaded(download.getDownloaded() + read);
      publishProgress();
    }
    if (download.getStatus() == Download.STATUS_DOWNLOADING) {
      download.setStatus(Download.STATUS_COMPLETE);
      new File(mDestination + "/tmp/" + download.getTitle()+ "."+ download.getId()+ ".shared.zip.tmp").renameTo(new File(mDestination + "/tmp/" + download.getTitle()+ ".zip"));
      long finishTime=System.currentTimeMillis();
    }
 else     if (download.getStatus() == Download.STATUS_CANCELLED) {
      new File(mDestination + "/tmp/" + download.getTitle()+ "."+ download.getId()+ ".shared.zip.tmp").delete();
    }
    publishProgress();
    connection.disconnect();
  }
 catch (  Exception e) {
    e.printStackTrace();
    download.setStatus(Download.STATUS_ERROR);
    publishProgress();
  }
 finally {
    if (file != null) {
      try {
        file.close();
      }
 catch (      Exception e) {
      }
    }
    if (is != null) {
      try {
        is.close();
      }
 catch (      Exception e) {
      }
    }
  }
  return download;
}
