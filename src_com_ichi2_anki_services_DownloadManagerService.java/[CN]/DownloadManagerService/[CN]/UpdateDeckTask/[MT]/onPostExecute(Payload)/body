{
  super.onPostExecute(result);
  HashMap<String,Object> results=(HashMap<String,Object>)result.result;
  Deck deck=(Deck)results.get("deck");
  if (deck != null) {
    deck.closeDeck();
  }
  if (result.success) {
    SharedDeckDownload download=(SharedDeckDownload)result.data[0];
    SharedPreferences pref=PrefSettings.getSharedPrefs(getBaseContext());
    Editor editor=pref.edit();
    editor.putLong("numUpdatedCards:" + mDestination + "/tmp/"+ download.getTitle()+ ".anki.updating",0);
    editor.commit();
    new File(mDestination + "/tmp/" + download.getTitle()+ ".anki.updating").renameTo(new File(mDestination + "/" + download.getTitle()+ ".anki"));
    new File(mDestination + "/tmp/" + download.getTitle()+ ".media/").renameTo(new File(mDestination + "/" + download.getTitle()+ ".media/"));
    mSharedDeckDownloads.remove(download);
    notifySharedDeckObservers();
    showNotification(download.getTitle());
    stopIfFinished();
  }
}
