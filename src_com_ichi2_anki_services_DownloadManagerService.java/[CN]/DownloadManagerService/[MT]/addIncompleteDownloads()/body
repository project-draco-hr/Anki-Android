{
  File dir=new File(mDestination + "/tmp/");
  File[] fileList=dir.listFiles(new IncompleteDownloadsFilter());
  if (fileList != null) {
    for (    File file : fileList) {
      String filename=file.getName();
      if (filename.endsWith(".anki.tmp")) {
        Download download=new Download(filename.substring(0,filename.length() - ".anki.tmp".length()));
        download.setDownloaded(file.length());
        mPersonalDeckDownloads.add(download);
      }
 else       if (filename.endsWith(".shared.zip.tmp")) {
        filename=filename.substring(0,filename.length() - ".shared.zip.tmp".length());
        int lastDotPosition=filename.lastIndexOf(".");
        String identifier=filename.substring(lastDotPosition + 1,filename.length());
        String title=filename.substring(0,lastDotPosition);
        SharedDeckDownload download=new SharedDeckDownload(Integer.parseInt(identifier),title);
        download.setDownloaded(file.length());
        mSharedDeckDownloads.add(download);
      }
 else       if (filename.endsWith(".anki.updating")) {
        String title=filename.substring(0,filename.length() - ".anki.updating".length());
        SharedDeckDownload download=new SharedDeckDownload(title);
        SharedPreferences pref=PrefSettings.getSharedPrefs(getBaseContext());
        String pausedPref="paused:" + mDestination + "/tmp/"+ download.getFilename()+ ".anki.updating";
        if (pref.getBoolean(pausedPref,false)) {
          download.setStatus(SharedDeckDownload.STATUS_PAUSED);
        }
 else {
          download.setStatus(SharedDeckDownload.STATUS_UPDATING);
        }
        mSharedDeckDownloads.add(download);
      }
    }
    notifyObservers();
  }
  stopIfFinished();
}
