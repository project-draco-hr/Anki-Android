{
  JSONObject conf;
  try {
    conf=_lapseConf(card);
    card.setLapses(card.getLapses() + 1);
    card.setLastIvl(card.getIvl());
    card.setIvl(_nextLapseIvl(card,conf));
    card.setFactor(Math.max(1300,card.getFactor() - 200));
    card.setDue(mToday + card.getIvl());
    if (conf.getJSONArray("delays").length() > 0) {
      card.setODue(card.getDue());
      card.setDue((int)(_delayForGrade(conf,0) + Utils.now()));
      int left=conf.getJSONArray("delays").length();
      card.setLeft(left + _leftToday(conf.getJSONArray("delays"),left) * 1000);
      card.setQueue(1);
      mLrnCount+=card.getLeft() / 1000;
    }
    if (!_checkLeech(card,conf) && conf.getJSONArray("delays").length() > 0) {
      _sortIntoLrn(card.getDue(),card.getId());
      return false;
    }
 else {
      return true;
    }
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
}
