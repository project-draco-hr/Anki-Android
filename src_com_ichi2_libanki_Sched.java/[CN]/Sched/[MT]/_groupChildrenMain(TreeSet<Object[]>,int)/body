{
  TreeSet<Object[]> tree=new TreeSet<Object[]>(new DeckNameCompare());
  Iterator<Object[]> it=grps.iterator();
  Object[] tmp=null;
  while (tmp != null || it.hasNext()) {
    Object[] head;
    if (tmp != null) {
      head=tmp;
      tmp=null;
    }
 else {
      head=it.next();
    }
    String[] title=(String[])head[0];
    long did=(Long)head[1];
    int newCount=(Integer)head[2];
    int lrnCount=(Integer)head[3];
    int revCount=(Integer)head[4];
    TreeSet<Object[]> children=new TreeSet<Object[]>(new DeckNameCompare());
    while (it.hasNext()) {
      Object[] o=it.next();
      if (((String[])o[0])[depth].equals(title[depth])) {
        children.add(o);
      }
 else {
        tmp=o;
        break;
      }
    }
    children=_groupChildrenMain(children,depth + 1);
    for (    Object[] ch : children) {
      newCount+=(Integer)ch[2];
      lrnCount+=(Integer)ch[3];
      revCount+=(Integer)ch[4];
    }
    tree.add(new Object[]{title,did,newCount,lrnCount,revCount,children});
  }
  TreeSet<Object[]> result=new TreeSet<Object[]>(new DeckNameCompare());
  for (  Object[] t : tree) {
    result.add(new Object[]{t[0],t[1],t[2],t[3],t[4]});
    result.addAll((TreeSet<Object[]>)t[5]);
  }
  return result;
}
