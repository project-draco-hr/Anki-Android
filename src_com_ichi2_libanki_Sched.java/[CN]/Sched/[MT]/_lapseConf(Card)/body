{
  try {
    JSONObject conf=_cardConf(card);
    if (card.getODid() == 0) {
      return conf.getJSONObject("lapse");
    }
    JSONObject oconf=mCol.getDecks().confForDid(card.getODid());
    JSONArray delays=conf.optJSONArray("delays");
    if (delays == null) {
      delays=oconf.getJSONObject("lapse").getJSONArray("delays");
    }
    JSONObject dict=new JSONObject();
    dict.put("minInt",oconf.getJSONObject("lapse").getInt("minInt"));
    dict.put("leechFails",oconf.getJSONObject("lapse").getInt("leechFails"));
    dict.put("leechAction",oconf.getJSONObject("lapse").getInt("leechAction"));
    dict.put("mult",oconf.getJSONObject("lapse").getDouble("mult"));
    dict.put("delays",delays);
    dict.put("resched",conf.getBoolean("resched"));
    return dict;
  }
 catch (  JSONException e) {
    JSONObject conf=_cardConf(card);
    if (!mCol.getDecks().isDyn(card.getDid()) && card.getODid() != 0) {
      card.setODue(0);
      card.setODid(0);
      AnkiDroidApp.saveExceptionReportFile(e,"fixedODidInconsistencyInSched_lapseConf");
      return _lapseConf(card);
    }
 else {
      throw new RuntimeException(e);
    }
  }
}
