{
  try {
    if (m.getInt("type") == Sched.MODEL_CLOZE) {
      return _availClozeOrds(m,flds);
    }
    String[] fields=Utils.splitFields(flds);
    for (    String f : fields) {
      f=f.trim();
    }
    ArrayList<Integer> avail=new ArrayList<Integer>();
    JSONArray reqArray=m.getJSONArray("req");
    for (int i=0; i < reqArray.length(); i++) {
      JSONArray sr=reqArray.getJSONArray(i);
      int ord=sr.getInt(0);
      String type=sr.getString(1);
      JSONArray req=sr.getJSONArray(2);
      if (type.equals("none")) {
        continue;
      }
 else       if (type.equals("all")) {
        boolean ok=true;
        for (int j=0; j < req.length(); j++) {
          int idx=req.getInt(j);
          if (fields[idx] == null || fields[idx].length() == 0) {
            ok=false;
            break;
          }
        }
        if (!ok) {
          continue;
        }
      }
 else       if (type.equals("any")) {
        boolean ok=false;
        for (int j=0; j < req.length(); j++) {
          int idx=req.getInt(j);
          if (fields[idx] != null && fields[idx].length() != 0) {
            ok=true;
            break;
          }
        }
        if (!ok) {
          continue;
        }
      }
      avail.add(ord);
    }
    return avail;
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
}
