{
  double now=Utils.now();
  ContentValues values=new ContentValues();
  values.put("id",fact.getId());
  values.put("modelId",fact.getModelId());
  values.put("created",now);
  values.put("modified",now);
  values.put("tags",fact.getTags());
  values.put("spaceUntil",0);
  getDB().insert(this,"facts",null,values);
  if (cardModels.isEmpty()) {
    Log.e(AnkiDroidApp.TAG,"Error while adding fact: No cardmodels for the new fact");
    return null;
  }
  mFactCount++;
  for (  Field f : fact.getFields()) {
    values.clear();
    values.put("value",f.getValue());
    values.put("id",f.getId());
    values.put("factId",f.getFactId());
    values.put("fieldModelId",f.getFieldModelId());
    values.put("ordinal",f.getOrdinal());
    getDB().insert(this,"fields",null,values);
  }
  ArrayList<Long> newCardIds=new ArrayList<Long>();
  for (  Map.Entry<Long,CardModel> entry : cardModels.entrySet()) {
    CardModel cardModel=entry.getValue();
    Card newCard=new Card(this,fact,cardModel,Utils.now());
    newCard.addToDb();
    newCardIds.add(newCard.getId());
    mCardCount++;
    mNewAvail++;
    Log.i(AnkiDroidApp.TAG,entry.getKey().toString());
  }
  commitToDB();
  fact.setModified(true,this);
  updateFactTags(new long[]{fact.getId()});
  flushMod();
  if (reset) {
    reset();
  }
  return fact;
}
