{
  AnkiDb ankiDB=AnkiDatabaseManager.getDatabase(mDeckPath);
  ArrayList<String> factTagsList=factTags(factIds);
  long tagId=tagId(tag,true);
  int nbFactTags=factTagsList.size();
  for (int i=0; i < nbFactTags; i++) {
    String newTags=factTagsList.get(i);
    if (newTags.indexOf(tag) == -1) {
      if (newTags.length() == 0) {
        newTags+=tag;
      }
 else {
        newTags+="," + tag;
      }
    }
    Log.i(AnkiDroidApp.TAG,"old tags = " + factTagsList.get(i));
    Log.i(AnkiDroidApp.TAG,"new tags = " + newTags);
    if (newTags.length() > factTagsList.get(i).length()) {
      ankiDB.getDatabase().execSQL("update facts set " + "tags = \"" + newTags + "\", "+ "modified = "+ String.format(ENGLISH_LOCALE,"%f",Utils.now())+ " where id = "+ factIds[i]);
    }
  }
  ArrayList<String> cardIdList=ankiDB.queryColumn(String.class,"select id from cards where factId in " + Utils.ids2str(factIds),0);
  ContentValues values=new ContentValues();
  for (  String cardId : cardIdList) {
    try {
      ankiDB.queryScalar("select id from cardTags" + " where cardId = " + cardId + " and tagId = "+ tagId+ " and src = 0");
    }
 catch (    SQLException e) {
      values.put("cardId",cardId);
      values.put("tagId",tagId);
      values.put("src","0");
      ankiDB.getDatabase().insert("cardTags",null,values);
    }
  }
  flushMod();
}
