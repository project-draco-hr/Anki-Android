{
  mUndoStack=new Stack<UndoRow>();
  mRedoStack=new Stack<UndoRow>();
  mUndoEnabled=true;
  try {
    getDB().getDatabase().execSQL("CREATE TEMPORARY TABLE undoLog (seq INTEGER PRIMARY KEY NOT NULL, sql TEXT)");
  }
 catch (  SQLException e) {
    Log.i(AnkiDroidApp.TAG,"Failed to create temporary table: " + e.getMessage());
  }
  ArrayList<String> tables=getDB().queryColumn(String.class,"SELECT name FROM sqlite_master WHERE type = 'table'",0);
  Iterator<String> iter=tables.iterator();
  while (iter.hasNext()) {
    String table=iter.next();
    if (table.equals("undoLog") || table.equals("sqlite_stat1")) {
      continue;
    }
    ArrayList<String> columns=getDB().queryColumn(String.class,"PRAGMA TABLE_INFO(" + table + ")",1);
    StringBuilder sql=new StringBuilder(512);
    sql.append("CREATE TEMP TRIGGER _undo_%s_it AFTER INSERT ON %s BEGIN INSERT INTO undoLog VALUES ").append("(null, 'DELETE FROM %s WHERE rowid = ' || new.rowid); END");
    getDB().getDatabase().execSQL(String.format(Utils.ENGLISH_LOCALE,sql.toString(),table,table,table));
    sql=new StringBuilder(512);
    sql.append(String.format(Utils.ENGLISH_LOCALE,"CREATE TEMP TRIGGER _undo_%s_ut AFTER UPDATE ON %s BEGIN " + "INSERT INTO undoLog VALUES (null, 'UPDATE %s ",table,table,table));
    String sep="SET ";
    for (    String column : columns) {
      if (column.equals("unique")) {
        continue;
      }
      sql.append(String.format(Utils.ENGLISH_LOCALE,"%s%s=' || quote(old.%s) || '",sep,column,column));
      sep=",";
    }
    sql.append(" WHERE rowid = ' || old.rowid); END");
    getDB().getDatabase().execSQL(sql.toString());
    sql=new StringBuilder(512);
    sql.append(String.format(Utils.ENGLISH_LOCALE,"CREATE TEMP TRIGGER _undo_%s_dt BEFORE DELETE ON %s BEGIN " + "INSERT INTO undoLog VALUES (null, 'INSERT INTO %s (rowid",table,table,table));
    for (    String column : columns) {
      sql.append(String.format(Utils.ENGLISH_LOCALE,",\"%s\"",column));
    }
    sql.append(") VALUES (' || old.rowid ||'");
    for (    String column : columns) {
      if (column.equals("unique")) {
        sql.append(",1");
        continue;
      }
      sql.append(String.format(Utils.ENGLISH_LOCALE,", ' || quote(old.%s) ||'",column));
    }
    sql.append(")'); END");
    getDB().getDatabase().execSQL(sql.toString());
  }
}
