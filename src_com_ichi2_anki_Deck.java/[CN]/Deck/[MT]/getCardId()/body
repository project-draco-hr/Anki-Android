{
  long id;
  if ((delay0 != 0) && (failedNowCount != 0))   return AnkiDatabaseManager.getDatabase(deckPath).queryScalar("SELECT id FROM failedCards LIMIT 1");
  if ((failedCardMax != 0) && (failedSoonCount >= failedCardMax))   return AnkiDatabaseManager.getDatabase(deckPath).queryScalar("SELECT id FROM failedCards LIMIT 1");
  if (timeForNewCard()) {
    id=maybeGetNewCard();
    if (id != 0)     return id;
  }
  if (revCount != 0)   return getRevCard();
  id=maybeGetNewCard();
  if (id != 0)   return id;
  if (reviewEarly) {
    id=getCardIdAhead();
    if (id != 0)     return id;
 else {
      resetAfterReviewEarly();
      checkDue();
    }
  }
  if (showFailedLast()) {
    try {
      id=AnkiDatabaseManager.getDatabase(deckPath).queryScalar("SELECT id FROM failedCards LIMIT 1");
    }
 catch (    Exception e) {
      return 0;
    }
    return id;
  }
  return 0;
}
