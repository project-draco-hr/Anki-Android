{
  ArrayList<String> factTagsList=factTags(factIds);
  long tagId=tagId(tag,false);
  int nbFactTags=factTagsList.size();
  for (int i=0; i < nbFactTags; i++) {
    String factTags=factTagsList.get(i);
    String newTags=factTags;
    int tagIdx=factTags.indexOf(tag);
    if ((tagIdx == 0) && (factTags.length() > tag.length())) {
      newTags=factTags.substring(tag.length() + 1,factTags.length());
    }
 else     if ((tagIdx > 0) && (tagIdx + tag.length() == factTags.length())) {
      newTags=factTags.substring(0,tagIdx - 1);
    }
 else     if (tagIdx > 0) {
      newTags=factTags.substring(0,tagIdx - 1) + factTags.substring(tag.length(),factTags.length());
    }
 else     if (tagIdx == 0) {
      newTags="";
    }
    Log.i(AnkiDroidApp.TAG,"old tags = " + factTags);
    Log.i(AnkiDroidApp.TAG,"new tags = " + newTags);
    if (newTags.length() < factTags.length()) {
      getDB().getDatabase().execSQL("update facts set " + "tags = \"" + newTags + "\", "+ "modified = "+ String.format(Utils.ENGLISH_LOCALE,"%f",Utils.now())+ " where id = "+ factIds[i]);
    }
  }
  ArrayList<String> cardIdList=getDB().queryColumn(String.class,"select id from cards where factId in " + Utils.ids2str(factIds),0);
  for (  String cardId : cardIdList) {
    getDB().getDatabase().execSQL("DELETE FROM cardTags WHERE cardId = " + cardId + " and tagId = "+ tagId+ " and src = "+ Card.TAGS_FACT);
  }
  try {
    getDB().queryScalar("select id from cardTags where tagId = " + tagId + " limit 1");
  }
 catch (  SQLException e) {
    getDB().getDatabase().execSQL("delete from tags" + " where id = " + tagId);
  }
  flushMod();
}
