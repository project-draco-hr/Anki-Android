{
  List<String> expected;
  List<String> actual;
  Collection tmp=Shared.getEmptyCol(getContext());
  Note n=tmp.newNote();
  n.setItem("Front","[sound:foo.mp3]");
  long mid=n.model().getLong("id");
  tmp.addNote(n);
  FileOutputStream os;
  os=new FileOutputStream(new File(tmp.getMedia().dir(),"foo.mp3"),false);
  os.write("foo".getBytes());
  os.close();
  tmp.close();
  Collection empty=Shared.getEmptyCol(getContext());
  Importer imp=new Anki2Importer(empty,tmp.getPath());
  imp.run();
  expected=Arrays.asList("foo.mp3");
  actual=Arrays.asList(new File(empty.getMedia().dir()).list());
  actual.retainAll(expected);
  assertEquals(expected.size(),actual.size());
  empty.remCards(Utils.arrayList2array(empty.getDb().queryColumn(Long.class,"select id from cards",0)));
  imp=new Anki2Importer(empty,tmp.getPath());
  imp.run();
  expected=Arrays.asList("foo.mp3");
  actual=Arrays.asList(new File(empty.getMedia().dir()).list());
  actual.retainAll(expected);
  assertEquals(expected.size(),actual.size());
  n=empty.getNote(empty.getDb().queryLongScalar("select id from notes"));
  assertTrue(n.getFields()[0].contains("foo.mp3"));
  empty.remCards(Utils.arrayList2array(empty.getDb().queryColumn(Long.class,"select id from cards",0)));
  os=new FileOutputStream(new File(empty.getMedia().dir(),"foo.mp3"),false);
  os.write("bar".getBytes());
  os.close();
  imp=new Anki2Importer(empty,tmp.getPath());
  imp.run();
  expected=Arrays.asList("foo.mp3",String.format("foo_%s.mp3",mid));
  actual=Arrays.asList(new File(empty.getMedia().dir()).list());
  actual.retainAll(expected);
  assertEquals(expected.size(),actual.size());
  n=empty.getNote(empty.getDb().queryLongScalar("select id from notes"));
  assertTrue(n.getFields()[0].contains("_"));
  empty.remCards(Utils.arrayList2array(empty.getDb().queryColumn(Long.class,"select id from cards",0)));
  os=new FileOutputStream(new File(empty.getMedia().dir(),"foo.mp3"));
  os.write("bar".getBytes());
  os.close();
  imp=new Anki2Importer(empty,tmp.getPath());
  imp.run();
  expected=Arrays.asList("foo.mp3",String.format("foo_%s.mp3",mid));
  actual=Arrays.asList(new File(empty.getMedia().dir()).list());
  actual.retainAll(expected);
  assertEquals(expected.size(),actual.size());
  n=empty.getNote(empty.getDb().queryLongScalar("select id from notes"));
  assertTrue(n.getFields()[0].contains("_"));
}
