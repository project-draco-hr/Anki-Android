{
  name=name.replace("\'","").replace("\"","");
  for (  Map.Entry<Long,JSONObject> g : mDecks.entrySet()) {
    try {
      if (g.getValue().getString("name").equalsIgnoreCase(name)) {
        return g.getKey();
      }
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
  }
  if (!create) {
    return 0;
  }
  if (name.matches(".*::.*")) {
    name=_ensureParents(name);
  }
  JSONObject g;
  long id;
  try {
    g=new JSONObject(defaultDeck);
    g.put("name",name);
    id=Utils.intNow(1000);
    while (mDecks.containsKey(id)) {
      id=Utils.intNow();
    }
    g.put("id",id);
    mDecks.put(id,g);
    mDeckIds.put(name,id);
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  save(g);
  maybeAddToActive();
  return id;
}
