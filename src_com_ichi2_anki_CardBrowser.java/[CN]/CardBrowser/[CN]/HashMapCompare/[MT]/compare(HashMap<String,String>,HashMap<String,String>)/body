{
  try {
    int result;
switch (mSelectedOrder) {
case CARD_ORDER_ANSWER:
      result=object1.get("answer").compareToIgnoreCase(object2.get("answer"));
    if (result == 0) {
      result=object1.get("question").compareToIgnoreCase(object2.get("question"));
    }
  return result;
case CARD_ORDER_QUESTION:
result=object1.get("question").compareToIgnoreCase(object2.get("question"));
if (result == 0) {
result=object1.get("answer").compareToIgnoreCase(object2.get("answer"));
}
return result;
case CARD_ORDER_DUE:
result=Double.valueOf(object1.get("due")).compareTo(Double.valueOf(object2.get("due")));
if (result == 0) {
Long.valueOf(object1.get("id")).compareTo(Long.valueOf(object2.get("id")));
}
return result;
case CARD_ORDER_INTERVAL:
result=Double.valueOf(object1.get("interval")).compareTo(Double.valueOf(object2.get("interval")));
if (result == 0) {
Long.valueOf(object1.get("id")).compareTo(Long.valueOf(object2.get("id")));
}
return result;
case CARD_ORDER_FACTOR:
result=Double.valueOf(object1.get("factor")).compareTo(Double.valueOf(object2.get("factor")));
if (result == 0) {
Long.valueOf(object1.get("id")).compareTo(Long.valueOf(object2.get("id")));
}
return result;
case CARD_ORDER_CREATED:
result=Double.valueOf(object1.get("created")).compareTo(Double.valueOf(object2.get("created")));
if (result == 0) {
Long.valueOf(object1.get("id")).compareTo(Long.valueOf(object2.get("id")));
}
return result;
}
return 0;
}
 catch (Exception e) {
Log.e(AnkiDroidApp.TAG,"Error on sorting cards: " + e);
return 0;
}
}
