{
  Resources res=getResources();
  StyledDialog ad=(StyledDialog)dialog;
switch (id) {
case DIALOG_ORDER:
    for (int i=0; i < mOrderByFields.length; ++i) {
      if (i != CARD_ORDER_NONE && i == mOrder) {
        if (mOrderAsc) {
          ad.changeListItem(i,mOrderByFields[i] + " (\u25b2)");
        }
 else {
          ad.changeListItem(i,mOrderByFields[i] + " (\u25bc)");
        }
      }
 else {
        ad.changeListItem(i,mOrderByFields[i]);
      }
    }
  break;
case DIALOG_CONTEXT_MENU:
HashMap<String,String> card=mCards.get(mPositionInCardsList);
int flags=Integer.parseInt(card.get("flags"));
if (flags == 2 || flags == 3) {
ad.changeListItem(CONTEXT_MENU_MARK,res.getString(R.string.card_browser_unmark_card));
}
 else {
ad.changeListItem(CONTEXT_MENU_MARK,res.getString(R.string.card_browser_mark_card));
}
if (flags == 1 || flags == 3) {
ad.changeListItem(CONTEXT_MENU_SUSPEND,res.getString(R.string.card_browser_unsuspend_card));
}
 else {
ad.changeListItem(CONTEXT_MENU_SUSPEND,res.getString(R.string.card_browser_suspend_card));
}
ad.setTitle(card.get("sfld"));
break;
case DIALOG_TAGS:
mSelectedTags.clear();
ad.setMultiChoiceItems(allTags,new boolean[allTags.length],new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
String tag=allTags[which];
if (mSelectedTags.contains(tag)) {
mSelectedTags.remove(tag);
}
 else {
mSelectedTags.add(tag);
}
}
}
);
break;
}
}
