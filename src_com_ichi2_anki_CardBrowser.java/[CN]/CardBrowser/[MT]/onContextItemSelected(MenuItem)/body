{
  AdapterContextMenuInfo info=(AdapterContextMenuInfo)item.getMenuInfo();
switch (item.getItemId()) {
case CONTEXT_MENU_MARK:
    mPositionInCardsList=info.position;
  DeckTask.launchDeckTask(DeckTask.TASK_TYPE_MARK_CARD,mMarkCardHandler,new DeckTask.TaskData(0,mDeck,mSelectedCard));
return true;
case CONTEXT_MENU_SUSPEND:
mPositionInCardsList=info.position;
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_SUSPEND_CARD,mSuspendCardHandler,new DeckTask.TaskData(0,mDeck,mSelectedCard));
return true;
case CONTEXT_MENU_DELETE:
mPositionInCardsList=info.position;
Dialog dialog;
Resources res=getResources();
AlertDialog.Builder builder=new AlertDialog.Builder(this);
builder.setTitle(res.getString(R.string.delete_card_title));
builder.setIcon(android.R.drawable.ic_dialog_alert);
builder.setMessage(String.format(res.getString(R.string.delete_card_message),mCards.get(mPositionInCardsList).get("question"),mCards.get(mPositionInCardsList).get("answer")));
builder.setPositiveButton(res.getString(R.string.yes),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DELETE_CARD,mDeleteCardHandler,new DeckTask.TaskData(mSelectedCard));
}
}
);
builder.setNegativeButton(res.getString(R.string.no),null);
dialog=builder.create();
dialog.show();
return true;
case CONTEXT_MENU_DETAILS:
mAboutWebView.loadDataWithBaseURL("",mSelectedCard.getCardDetails(this),"text/html","utf-8",null);
mDetailsDialog.show();
return true;
default :
return super.onContextItemSelected(item);
}
}
