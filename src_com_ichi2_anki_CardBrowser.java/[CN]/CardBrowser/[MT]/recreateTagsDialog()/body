{
  Resources res=getResources();
  if (allTags.length == 0) {
    String[] oldTags=AnkiDroidApp.deck().allTags_();
    Log.i(AnkiDroidApp.TAG,"all tags: " + Arrays.toString(oldTags));
    allTags=new String[oldTags.length];
    for (int i=0; i < oldTags.length; i++) {
      allTags[i]=oldTags[i];
    }
  }
  mSelectedTags.clear();
  AlertDialog.Builder builder=new AlertDialog.Builder(this);
  builder.setTitle(R.string.studyoptions_limit_select_tags);
  builder.setMultiChoiceItems(allTags,null,new DialogInterface.OnMultiChoiceClickListener(){
    public void onClick(    DialogInterface dialog,    int whichButton,    boolean isChecked){
      String tag=allTags[whichButton];
      if (!isChecked) {
        Log.i(AnkiDroidApp.TAG,"unchecked tag: " + tag);
        mSelectedTags.remove(tag);
      }
 else {
        Log.i(AnkiDroidApp.TAG,"checked tag: " + tag);
        mSelectedTags.add(tag);
      }
    }
  }
);
  builder.setPositiveButton(res.getString(R.string.select),new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      updateCardsList();
    }
  }
);
  builder.setNegativeButton(res.getString(R.string.cancel),new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      mSelectedTags.clear();
    }
  }
);
  builder.setOnCancelListener(new OnCancelListener(){
    @Override public void onCancel(    DialogInterface dialog){
      mSelectedTags.clear();
    }
  }
);
  mTagsDialog=builder.create();
}
