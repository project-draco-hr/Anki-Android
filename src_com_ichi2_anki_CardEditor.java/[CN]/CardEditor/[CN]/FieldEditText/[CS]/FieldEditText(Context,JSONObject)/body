{
  super(context);
  mField=field;
  mContext=context;
  String content=null;
  int ord;
  try {
    ord=mField.getInt("ord");
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  content=mEditorNote.values()[ord];
  if (content == null) {
    content="";
  }
 else {
    content=content.replaceAll("<br(\\s*\\/*)>",NEW_LINE);
  }
  if (mPrefFixArabic) {
    this.setText(ArabicUtilities.reshapeSentence(content));
  }
 else {
    this.setText(content);
  }
  this.setMinimumWidth(400);
  this.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (mCutMode) {
        updateSpannables();
      }
    }
  }
);
  if (ord == 0) {
    this.setOnFocusChangeListener(new View.OnFocusChangeListener(){
      @Override public void onFocusChange(      View arg0,      boolean arg1){
        if (create) {
          create=false;
          return;
        }
        if (mEditorNote.dupeOrEmpty(FieldEditText.this.getText().toString()) != 0) {
          FieldEditText.this.setBackgroundResource(R.drawable.blue_edit_text_dupe);
          mSave.setEnabled(false);
        }
 else {
          FieldEditText.this.setBackgroundResource(R.drawable.blue_edit_text);
          mSave.setEnabled(true);
        }
      }
    }
);
  }
}
