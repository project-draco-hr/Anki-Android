{
  Resources res=getResources();
  mTemplates=mCurrentModel.getTemplates();
  mSelectedTemplates.clear();
  int length=mTemplates.size();
  boolean[] checked=new boolean[length];
  String[] templates=new String[length];
  try {
    for (int i=0; i < length; i++) {
      JSONObject template=mTemplates.get(i);
      templates[i]=template.getString("name");
      if (template.getString("actv").toLowerCase().equals("true")) {
        checked[i]=true;
        mSelectedTemplates.put(i,template);
      }
    }
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  AlertDialog.Builder builder=new AlertDialog.Builder(this);
  builder.setTitle(R.string.select_card_model);
  builder.setMultiChoiceItems(templates,checked,new DialogInterface.OnMultiChoiceClickListener(){
    public void onClick(    DialogInterface dialog,    int whichButton,    boolean isChecked){
      String tag=allTags[whichButton];
      if (!isChecked) {
        Log.i(AnkiDroidApp.TAG,"unchecked tag: " + tag);
        mSelectedTemplates.remove(whichButton);
      }
 else {
        Log.i(AnkiDroidApp.TAG,"checked tag: " + tag);
        mSelectedTemplates.put(whichButton,mTemplates.get(whichButton));
      }
    }
  }
);
  builder.setPositiveButton(res.getString(R.string.select),new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      cardModelsChanged();
    }
  }
);
  builder.setNegativeButton(res.getString(R.string.cancel),null);
  return builder.create();
}
