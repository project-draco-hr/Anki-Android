{
  mFieldsLayoutContainer.removeAllViews();
  mEditFields=new LinkedList<FieldEditText>();
  String[][] fields=mEditorNote.items();
  Typeface mCustomTypeface=null;
  SharedPreferences preferences=AnkiDroidApp.getSharedPrefs(getBaseContext());
  String customFont=preferences.getString("browserEditorFont","");
  if (!customFont.equals("")) {
    mCustomTypeface=AnkiFont.getTypeface(this,customFont);
  }
  for (int i=0; i < fields.length; i++) {
    View editline_view=getLayoutInflater().inflate(R.layout.card_multimedia_editline,null);
    FieldEditText newTextbox=(FieldEditText)editline_view.findViewById(R.id.id_note_editText);
    newTextbox.init(i,fields[i]);
    if (mCustomTypeface != null) {
      newTextbox.setTypeface(mCustomTypeface);
    }
    TextView label=newTextbox.getLabel();
    label.setTextColor(Color.BLACK);
    label.setPadding((int)UIUtils.getDensityAdjustedValue(this,3.4f),0,0,0);
    mEditFields.add(newTextbox);
    ImageButton mediaButton=(ImageButton)editline_view.findViewById(R.id.id_media_button);
    mediaButton.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        PopupMenuWithIcons popup=new PopupMenuWithIcons(CardEditor.this,v,true);
        MenuInflater inflater=popup.getMenuInflater();
        inflater.inflate(R.menu.popupmenu_multimedia_options,popup.getMenu());
        popup.show();
      }
    }
);
    mFieldsLayoutContainer.addView(label);
    mFieldsLayoutContainer.addView(editline_view);
  }
}
