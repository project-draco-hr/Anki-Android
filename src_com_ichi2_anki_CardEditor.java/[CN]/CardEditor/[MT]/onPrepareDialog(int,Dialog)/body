{
  StyledDialog ad=(StyledDialog)dialog;
switch (id) {
case DIALOG_TAGS:
    if (allTags == null) {
      String[] oldTags=AnkiDroidApp.deck().allUserTags();
      if (oldTags == null) {
        Themes.showThemedToast(CardEditor.this,getResources().getString(R.string.error_insufficient_memory),false);
        ad.setEnabled(false);
        return;
      }
      Log.i(AnkiDroidApp.TAG,"all tags: " + Arrays.toString(oldTags));
      allTags=new String[oldTags.length];
      for (int i=0; i < oldTags.length; i++) {
        allTags[i]=oldTags[i];
      }
    }
  mSelectedTags.clear();
List<String> selectedList=Arrays.asList(Utils.parseTags(mFactTags));
int length=allTags.length;
boolean[] checked=new boolean[length];
for (int i=0; i < length; i++) {
String tag=allTags[i];
if (selectedList.contains(tag)) {
checked[i]=true;
mSelectedTags.add(tag);
}
}
ad.setMultiChoiceItems(allTags,checked,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface arg0,int which){
String tag=allTags[which];
if (mSelectedTags.contains(tag)) {
Log.i(AnkiDroidApp.TAG,"unchecked tag: " + tag);
mSelectedTags.remove(tag);
}
 else {
Log.i(AnkiDroidApp.TAG,"checked tag: " + tag);
mSelectedTags.add(tag);
}
}
}
);
break;
case DIALOG_CARD_MODEL_SELECT:
mCardModels=mDeck.cardModels(mEditorFact);
int size=mCardModels.size();
String dialogItems[]=new String[size];
cardModelIds.clear();
int i=0;
for (Long id2 : mCardModels.keySet()) {
dialogItems[i]=mCardModels.get(id2).getName();
cardModelIds.add(id2);
i++;
}
boolean[] checkedItems=new boolean[size];
for (int j=0; j < size; j++) {
;
checkedItems[j]=mSelectedCardModels.containsKey(cardModelIds.get(j));
}
mNewSelectedCardModels.clear();
mNewSelectedCardModels.putAll(mSelectedCardModels);
ad.setMultiChoiceItems(dialogItems,checkedItems,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface arg0,int which){
long m=cardModelIds.get(which);
if (mNewSelectedCardModels.containsKey(m)) {
mNewSelectedCardModels.remove(m);
}
 else {
mNewSelectedCardModels.put(m,mCardModels.get(m));
}
mCardModelDialog.getButton(StyledDialog.BUTTON_POSITIVE).setEnabled(!mNewSelectedCardModels.isEmpty());
}
}
);
ad.getButton(StyledDialog.BUTTON_POSITIVE).setEnabled(!mNewSelectedCardModels.isEmpty());
break;
}
}
