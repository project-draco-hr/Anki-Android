{
  Themes.applyTheme(this);
  super.onCreate(savedInstanceState);
  registerExternalStorageListener();
  setContentView(R.layout.card_editor);
  mFieldsLayoutContainer=(LinearLayout)findViewById(R.id.CardEditorEditFieldsLayout);
  mSave=(Button)findViewById(R.id.CardEditorSaveButton);
  mCancel=(Button)findViewById(R.id.CardEditorCancelButton);
  mTags=(Button)findViewById(R.id.CardEditorTagButton);
  if (getIntent().getBooleanExtra("callfromcardbrowser",false)) {
    mEditorCard=CardBrowser.getEditorCard();
  }
 else {
    mEditorCard=Reviewer.getEditorCard();
  }
  mEditorFact=mEditorCard.getFact();
  TreeSet<Field> fields=mEditorFact.getFields();
  mEditFields=new LinkedList<FieldEditText>();
  mModified=false;
  SharedPreferences preferences=PrefSettings.getSharedPrefs(getBaseContext());
  mPrefFixArabic=preferences.getBoolean("fixArabicText",false);
  mSave.setEnabled(!mPrefFixArabic);
  Iterator<Field> iter=fields.iterator();
  while (iter.hasNext()) {
    FieldEditText newTextbox=new FieldEditText(this,iter.next());
    TextView label=newTextbox.getLabel();
    mEditFields.add(newTextbox);
    mFieldsLayoutContainer.addView(label);
    mFieldsLayoutContainer.addView(newTextbox);
  }
  mFactTags=mEditorFact.getTags();
  mTags.setText(getResources().getString(R.string.CardEditorTags,mFactTags));
  mTags.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      recreateTagsDialog();
      if (!mTagsDialog.isShowing()) {
        mTagsDialog.show();
      }
    }
  }
);
  allTags=null;
  mSelectedTags=new HashSet<String>();
  mSave.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      Iterator<FieldEditText> iter=mEditFields.iterator();
      while (iter.hasNext()) {
        FieldEditText current=iter.next();
        mModified|=current.updateField();
      }
      if (!mEditorFact.getTags().equals(mFactTags)) {
        mEditorFact.setTags(mFactTags);
        mModified=true;
      }
      if (mModified) {
        setResult(RESULT_OK);
      }
 else {
        setResult(RESULT_CANCELED);
      }
      closeCardEditor();
    }
  }
);
  mCancel.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      setResult(RESULT_CANCELED);
      closeCardEditor();
    }
  }
);
  initDialogs();
}
