{
  super.onCreate(savedInstanceState);
  registerExternalStorageListener();
  setContentView(R.layout.card_editor);
  mFieldsLayoutContainer=(LinearLayout)findViewById(R.id.CardEditorEditFieldsLayout);
  mSave=(Button)findViewById(R.id.CardEditorSaveButton);
  mCancel=(Button)findViewById(R.id.CardEditorCancelButton);
  if (getIntent().getBooleanExtra("callfromcardbrowser",false)) {
    mEditorCard=CardBrowser.getEditorCard();
  }
 else {
    mEditorCard=Reviewer.getEditorCard();
  }
  Fact cardFact=mEditorCard.getFact();
  TreeSet<Field> fields=cardFact.getFields();
  mEditFields=new LinkedList<FieldEditText>();
  mModified=false;
  Iterator<Field> iter=fields.iterator();
  while (iter.hasNext()) {
    FieldEditText newTextbox=new FieldEditText(this,iter.next());
    TextView label=newTextbox.getLabel();
    mEditFields.add(newTextbox);
    mFieldsLayoutContainer.addView(label);
    mFieldsLayoutContainer.addView(newTextbox);
  }
  mSave.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      Iterator<FieldEditText> iter=mEditFields.iterator();
      while (iter.hasNext()) {
        FieldEditText current=iter.next();
        mModified|=current.updateField();
      }
      if (mModified) {
        setResult(RESULT_OK);
      }
 else {
        setResult(RESULT_CANCELED);
      }
      finish();
    }
  }
);
  mCancel.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      setResult(RESULT_CANCELED);
      closeCardEditor();
    }
  }
);
}
