{
  Sched.DeckDueTreeNode node=mDeckList.get(position);
  boolean collapsed=getCol().getDecks().get(node.did).optBoolean("collapsed",false);
  holder.mDeckExpander.setText(deckExpander(node.depth,collapsed,node.children.size()));
  if (node.children.size() > 0) {
    holder.mDeckExpander.setClickable(false);
    holder.mDeckExpander.setTag(node.did);
    holder.mDeckExpander.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View view){
        collapseContextMenuDeck((Long)view.getTag());
      }
    }
);
  }
 else {
    holder.mDeckExpander.setClickable(false);
  }
  holder.mDeckName.setText(node.names[0]);
  holder.mDeckNew.setText(String.valueOf(node.newCount));
  holder.mDeckNew.setTextColor((node.newCount == 0) ? getResources().getColor(R.color.zero_count) : getResources().getColor(R.color.new_count));
  holder.mDeckLearn.setText(String.valueOf(node.lrnCount));
  holder.mDeckLearn.setTextColor((node.lrnCount == 0) ? getResources().getColor(R.color.zero_count) : getResources().getColor(R.color.learn_count));
  holder.mDeckRev.setText(String.valueOf(node.revCount));
  holder.mDeckRev.setTextColor((node.revCount == 0) ? getResources().getColor(R.color.zero_count) : getResources().getColor(R.color.review_count));
  holder.mDeckLayout.setTag(node.did);
  holder.mDeckLayout.setOnClickListener(mDeckClickListener);
  holder.mDeckLayout.setOnLongClickListener(mDeckLongClickListener);
  if (node.did == getCol().getDecks().current().optLong("id")) {
  }
}
