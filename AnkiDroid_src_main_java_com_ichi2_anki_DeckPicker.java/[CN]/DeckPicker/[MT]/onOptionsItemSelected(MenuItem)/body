{
  Resources res=getResources();
switch (item.getItemId()) {
case R.id.action_undo:
    Timber.i("DeckPicker:: Undo button pressed");
  undoLastReview();
return true;
case R.id.action_sync:
Timber.i("DeckPicker:: Sync button pressed");
sync();
return true;
case R.id.action_import:
Timber.i("DeckPicker:: Import button pressed");
showImportDialog(ImportDialog.DIALOG_IMPORT_HINT);
return true;
case R.id.action_new_filtered_deck:
Timber.i("DeckPicker:: New filtered deck button pressed");
mDialogEditText=new EditText(DeckPicker.this);
ArrayList<String> names=getCol().getDecks().allNames();
int n=1;
String name=String.format("%s %d",res.getString(R.string.filtered_deck_name),n);
while (names.contains(name)) {
n++;
name=String.format("%s %d",res.getString(R.string.filtered_deck_name),n);
}
mDialogEditText.setText(name);
new MaterialDialog.Builder(DeckPicker.this).title(res.getString(R.string.new_deck)).customView(mDialogEditText,true).positiveText(res.getString(R.string.create)).negativeText(res.getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
String filteredDeckName=mDialogEditText.getText().toString();
Timber.i("DeckPicker:: Creating filtered deck...");
getCol().getDecks().newDyn(filteredDeckName);
openStudyOptions(true);
}
}
).show();
return true;
case R.id.action_check_database:
Timber.i("DeckPicker:: Check database button pressed");
showDatabaseErrorDialog(DatabaseErrorDialog.DIALOG_CONFIRM_DATABASE_CHECK);
return true;
case R.id.action_check_media:
Timber.i("DeckPicker:: Check media button pressed");
showMediaCheckDialog(MediaCheckDialog.DIALOG_CONFIRM_MEDIA_CHECK);
return true;
case R.id.action_model_browser_open:
Timber.i("DeckPicker:: Model browser button pressed");
Intent noteTypeBrowser=new Intent(this,ModelBrowser.class);
startActivityForResultWithAnimation(noteTypeBrowser,0,ActivityTransitionAnimation.LEFT);
return true;
case R.id.action_restore_backup:
Timber.i("DeckPicker:: Restore from backup button pressed");
showDatabaseErrorDialog(DatabaseErrorDialog.DIALOG_CONFIRM_RESTORE_BACKUP);
return true;
case R.id.action_export:
Timber.i("DeckPicker:: Export collection button pressed");
String msg=getResources().getString(R.string.confirm_apkg_export);
showDialogFragment(ExportDialog.newInstance(msg));
return true;
default :
return super.onOptionsItemSelected(item);
}
}
