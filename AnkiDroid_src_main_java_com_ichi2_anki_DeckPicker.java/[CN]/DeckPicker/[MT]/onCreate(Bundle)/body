{
  Timber.d("onCreate()");
  super.onCreate(savedInstanceState);
  SharedPreferences preferences=AnkiDroidApp.getSharedPrefs(getBaseContext());
  setContentView(R.layout.homescreen);
  View mainView=findViewById(android.R.id.content);
  View studyoptionsFrame=findViewById(R.id.studyoptions_fragment);
  mFragmented=studyoptionsFrame != null && studyoptionsFrame.getVisibility() == View.VISIBLE;
  registerExternalStorageListener();
  initNavigationDrawer(mainView);
  setTitle(getResources().getString(R.string.app_name));
  mRecyclerView=(RecyclerView)findViewById(R.id.files);
  mRecyclerView.addItemDecoration(new DividerItemDecoration(this));
  mRecyclerViewLayoutManager=new LinearLayoutManager(this);
  mRecyclerView.setLayoutManager(mRecyclerViewLayoutManager);
  mDeckListAdapter=new DeckAdapter(getLayoutInflater(),this);
  mDeckListAdapter.setDeckClickListener(mDeckClickListener);
  mDeckListAdapter.setDeckExpanderClickListener(mDeckExpanderClickListener);
  mDeckListAdapter.setDeckLongClickListener(mDeckLongClickListener);
  mRecyclerView.setAdapter(mDeckListAdapter);
  mActionsMenu=(FloatingActionsMenu)findViewById(R.id.add_content_menu);
  final FloatingActionButton addDeckButton=(FloatingActionButton)findViewById(R.id.add_deck_action);
  final FloatingActionButton addSharedButton=(FloatingActionButton)findViewById(R.id.add_shared_action);
  final FloatingActionButton addNoteButton=(FloatingActionButton)findViewById(R.id.add_note_action);
  addDeckButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View view){
      mActionsMenu.collapse();
      mDialogEditText=new EditText(DeckPicker.this);
      mDialogEditText.setSingleLine(true);
      new MaterialDialog.Builder(DeckPicker.this).title(R.string.new_deck).positiveText(R.string.dialog_ok).customView(mDialogEditText,true).callback(new MaterialDialog.ButtonCallback(){
        @Override public void onPositive(        MaterialDialog dialog){
          String deckName=mDialogEditText.getText().toString();
          Timber.i("DeckPicker:: Creating new deck...");
          getCol().getDecks().id(deckName,true);
          CardBrowser.clearSelectedDeck();
          updateDeckList();
        }
      }
).negativeText(R.string.dialog_cancel).show();
    }
  }
);
  addSharedButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View view){
      mActionsMenu.collapse();
      addSharedDeck();
    }
  }
);
  addNoteButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View view){
      mActionsMenu.collapse();
      addNote();
    }
  }
);
  mTodayTextView=(TextView)findViewById(R.id.today_stats_text_view);
  final Resources res=getResources();
  mTodayTextView=(TextView)findViewById(R.id.today_stats_text_view);
  if (!CollectionHelper.hasStorageAccessPermission(this)) {
    ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},REQUEST_STORAGE_PERMISSION);
  }
 else {
    showStartupScreensAndDialogs(preferences,0);
  }
}
