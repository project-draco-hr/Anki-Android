{
  Timber.d("onCreate()");
  Intent intent=getIntent();
  Themes.applyTheme(this);
  super.onCreate(savedInstanceState);
  SharedPreferences preferences=AnkiDroidApp.getSharedPrefs(getBaseContext());
  View mainView=getLayoutInflater().inflate(R.layout.deck_picker,null);
  setContentView(mainView);
  View studyoptionsFrame=findViewById(R.id.studyoptions_fragment);
  mFragmented=studyoptionsFrame != null && studyoptionsFrame.getVisibility() == View.VISIBLE;
  Themes.setContentStyle(mFragmented ? mainView : mainView.findViewById(R.id.deckpicker_view),Themes.CALLER_DECKPICKER);
  sIsWholeCollection=!mFragmented;
  registerExternalStorageListener();
  initNavigationDrawer(mainView);
  if (savedInstanceState == null) {
    selectNavigationItem(DRAWER_DECK_PICKER);
  }
  setTitle(getResources().getString(R.string.app_name));
  mDeckList=new ArrayList<>();
  mRecyclerView=(RecyclerView)findViewById(R.id.files);
  mRecyclerView.addItemDecoration(new DividerItemDecoration(this,null,false,true));
  mRecyclerViewLayoutManager=new LinearLayoutManager(this);
  mRecyclerView.setLayoutManager(mRecyclerViewLayoutManager);
  mDeckListAdapter=new DeckAdapter(mDeckList,getResources(),getLayoutInflater(),getCol());
  mDeckListAdapter.setDeckClickListener(mDeckClickListener);
  mDeckListAdapter.setDeckExpanderClickListener(mDeckExpanderClickListener);
  mDeckListAdapter.setDeckLongClickListener(mDeckLongClickListener);
  mRecyclerView.setAdapter(mDeckListAdapter);
  mTodayTextView=(TextView)findViewById(R.id.today_stats_text_view);
  final Resources res=getResources();
  mAddButton=(ImageButton)findViewById(R.id.fab);
  mAddButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      new MaterialDialog.Builder(DeckPicker.this).items(new String[]{res.getString(R.string.menu_add_note),res.getString(R.string.menu_get_shared_decks),res.getString(R.string.new_deck)}).itemsCallback(new MaterialDialog.ListCallback(){
        @Override public void onSelection(        MaterialDialog materialDialog,        View view,        int i,        CharSequence charSequence){
switch (i) {
case 0:
            hideShowcaseView();
          addNote();
        break;
case 1:
      hideShowcaseView();
    if (colIsOpen())     addSharedDeck();
  break;
case 2:
hideShowcaseView();
mDialogEditText=new EditText(DeckPicker.this);
mDialogEditText.setSingleLine(true);
new MaterialDialog.Builder(DeckPicker.this).title(R.string.new_deck).positiveText(R.string.dialog_ok).customView(mDialogEditText,true).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
String deckName=mDialogEditText.getText().toString().replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]","");
Timber.i("DeckPicker:: Creating new deck...");
getCol().getDecks().id(deckName,true);
updateDeckList();
}
}
).negativeText(R.string.dialog_cancel).show();
}
}
}
).build().show();
}
}
);
mTodayTextView=(TextView)findViewById(R.id.today_stats_text_view);
showStartupScreensAndDialogs(preferences,0);
}
