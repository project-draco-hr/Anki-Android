{
  DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DELETE_DECK,new DeckTask.TaskListener(){
    @Override public void onPreExecute(){
      mProgressDialog=StyledProgressDialog.show(DeckPicker.this,"",getResources().getString(R.string.delete_deck),true);
    }
    @SuppressWarnings("unchecked") @Override public void onPostExecute(    TaskData result){
      if (result == null) {
        return;
      }
      Object[] res=result.getObjArray();
      updateDecksList((TreeSet<Object[]>)res[0],(Integer)res[1],(Integer)res[2]);
      if (mFragmented) {
        selectDeck(getCol().getDecks().selected());
      }
      if (mProgressDialog.isShowing()) {
        try {
          mProgressDialog.dismiss();
        }
 catch (        Exception e) {
          Timber.e(e,"onPostExecute - Exception dismissing dialog");
        }
      }
    }
    @Override public void onProgressUpdate(    TaskData... values){
    }
    @Override public void onCancelled(){
    }
  }
,new TaskData(getCol(),mContextMenuDid));
}
