{
  int nullExceptionCount=0;
  InvocationTargetException nullException=null;
  ArrayList<T> results=new ArrayList<>();
  Cursor cursor=null;
  try {
    cursor=mDatabase.rawQuery(query,null);
    String methodName=getCursorMethodName(type.getSimpleName());
    while (cursor.moveToNext()) {
      try {
        results.add(type.cast(Cursor.class.getMethod(methodName,int.class).invoke(cursor,column)));
      }
 catch (      InvocationTargetException e) {
        if (cursor.isNull(column)) {
          nullExceptionCount++;
          if (nullExceptionCount == 1) {
            nullException=e;
            Toast.makeText(AnkiDroidApp.getInstance().getBaseContext(),"Error report pending: unexpected null in database.",Toast.LENGTH_LONG).show();
          }
        }
 else {
          throw new RuntimeException(e);
        }
      }
    }
  }
 catch (  NoSuchMethodException|IllegalAccessException|IllegalArgumentException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (cursor != null) {
      cursor.close();
    }
    if (nullExceptionCount > 0) {
      if (nullException != null) {
        StringBuilder sb=new StringBuilder();
        sb.append("DB.queryColumn (column " + column + "): ");
        sb.append("Exception due to null. Query: " + query);
        sb.append(" Null occurrences during this query: " + nullExceptionCount);
        AnkiDroidApp.sendExceptionReport(nullException,"queryColumn_encounteredNull",sb.toString());
        Timber.w(sb.toString());
      }
 else {
        StringBuilder sb=new StringBuilder();
        sb.append("DB.queryColumn(): Critical error -- ");
        sb.append("unable to pass in the actual exception to error reporting.");
        AnkiDroidApp.sendExceptionReport(new RuntimeException("queryColumn null"),"queryColumn_encounteredNull",sb.toString());
        Timber.e(sb.toString());
      }
    }
  }
  return results;
}
