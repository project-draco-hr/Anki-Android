{
  Themes.applyTheme(this,Themes.THEME_NO_THEME);
  super.onCreate(savedInstanceState);
  Intent intent=getIntent();
  if (intent != null) {
    String action=intent.getAction();
    if (action != null) {
      if (ACTION_SHOW_DECK_SELECTION_DIALOG.equals(action)) {
        DeckManager.getSelectDeckDialog(this,new OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            Intent newIntent=new Intent(WidgetDialog.this,AnkiDroidWidgetBig.UpdateService.class);
            newIntent.setAction(AnkiDroidWidgetBig.UpdateService.ACTION_OPENDECK);
            newIntent.putExtra(AnkiDroidWidgetBig.UpdateService.EXTRA_DECK_PATH,DeckManager.getDeckPathAfterDeckSelectionDialog(which));
            startService(newIntent);
          }
        }
,null,new OnDismissListener(){
          @Override public void onDismiss(          DialogInterface arg0){
            WidgetDialog.this.finishWithoutAnimation();
          }
        }
).show();
      }
 else       if (ACTION_SHOW_RESTRICTIONS_DIALOG.equals(action)) {
        Resources res=getResources();
        StyledDialog.Builder builder=new StyledDialog.Builder(this);
        builder.setTitle(res.getString(R.string.widget_big)).setMessage(R.string.widget_big_restrictions_dialog).setOnDismissListener(new OnDismissListener(){
          @Override public void onDismiss(          DialogInterface arg0){
            WidgetDialog.this.finishWithoutAnimation();
          }
        }
).setPositiveButton(res.getString(R.string.ok),null);
        builder.show();
      }
    }
  }
}
