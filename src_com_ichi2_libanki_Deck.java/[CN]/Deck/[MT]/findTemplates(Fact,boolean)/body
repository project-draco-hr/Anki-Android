{
  ArrayList<JSONObject> ok=new ArrayList<JSONObject>();
  Model model=fact.getModel();
  for (  Map.Entry<Integer,JSONObject> t : fact.getModel().getTemplates().entrySet()) {
    JSONObject template=t.getValue();
    try {
      if (template.getString("actv").toLowerCase().equals("true") || !checkActive) {
        QAData data=new QAData(1,1,model.getId(),1,template.getInt("ord"),"",fact.joinedFields());
        HashMap<String,String> now=_renderQA(model,null,data);
        data.mFields=Utils.joinFields(new String[fact.getFields().length]);
        HashMap<String,String> empty=_renderQA(model,null,data);
        if (now.get("q").equals(empty.get("q"))) {
          continue;
        }
        if (!template.getString("emptyAns").toLowerCase().toLowerCase().equals("true")) {
          if (now.get("a").equals(empty.get("a"))) {
            continue;
          }
        }
        ok.add(template);
      }
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
  }
  return (JSONObject[])ok.toArray(new JSONObject[ok.size()]);
}
