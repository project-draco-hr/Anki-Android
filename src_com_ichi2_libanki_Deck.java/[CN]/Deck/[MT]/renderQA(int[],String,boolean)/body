{
  String where="";
  if (type.equals("card")) {
    where="AND c.id IN " + Utils.ids2str(ids);
  }
 else   if (type.equals("fact")) {
    where="AND f.id IN " + Utils.ids2str(ids);
  }
 else   if (type.equals("model")) {
    where="AND m.id IN " + Utils.ids2str(ids);
  }
 else   if (type.equals("all")) {
    where="";
  }
  LinkedHashMap<Integer,Model> mods=models();
  LinkedHashMap<Integer,String> groups=new LinkedHashMap<Integer,String>();
  Cursor cur=null;
  try {
    cur=getDB().getDatabase().rawQuery("SELECT id, name FROM groups",null);
    while (cur.moveToNext()) {
      groups.put(cur.getInt(0),cur.getString(1));
    }
  }
  finally {
    if (cur != null && !cur.isClosed()) {
      cur.close();
    }
  }
  ArrayList<String[]> result=new ArrayList<String[]>();
  HashMap<String,String> qa=new HashMap<String,String>();
  for (  QAData row : _qaData(where)) {
    qa=_renderQA(mods.get(row.mMId),groups.get(row.mGId),row,enrichWithClass);
    result.add(new String[]{qa.get("id"),qa.get("q"),qa.get("a")});
  }
  return result;
}
