{
  if (val.equals("*")) {
    return "skip";
  }
 else   if (val.equals("filtered")) {
    return "c.odid";
  }
  List<Long> ids=null;
  try {
    if (val.equalsIgnoreCase("current")) {
      ids=dids(mCol.getDecks().current().getLong("id"));
    }
 else     if (!val.contains("*")) {
      ids=dids(mCol.getDecks().id(val,false));
    }
 else {
      ids=new ArrayList<Long>();
      val=val.replace("*",".*");
      val=val.replace("+","\\+");
      for (      JSONObject d : mCol.getDecks().all()) {
        if (d.getString("name").matches("(?i)" + val)) {
          for (          long id : dids(d.getLong("id"))) {
            if (!ids.contains(id)) {
              ids.add(id);
            }
          }
        }
      }
    }
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  if (ids == null || ids.size() == 0) {
    return null;
  }
  String sids=Utils.ids2str(ids);
  return "c.did in " + sids + " or c.odid in "+ sids;
}
