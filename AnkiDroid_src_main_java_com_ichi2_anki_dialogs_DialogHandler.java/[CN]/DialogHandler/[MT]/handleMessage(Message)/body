{
  Bundle msgData=msg.getData();
  if (msg.what == MSG_SHOW_COLLECTION_LOADING_ERROR_DIALOG) {
    ((DeckPicker)mActivity.get()).showDatabaseErrorDialog(DatabaseErrorDialog.DIALOG_LOAD_FAILED);
  }
 else   if (msg.what == MSG_SHOW_COLLECTION_IMPORT_REPLACE_DIALOG) {
    ((DeckPicker)mActivity.get()).showImportDialog(ImportDialog.DIALOG_IMPORT_REPLACE_CONFIRM,msgData.getString("importPath"));
  }
 else   if (msg.what == MSG_SHOW_COLLECTION_IMPORT_ADD_DIALOG) {
    ((DeckPicker)mActivity.get()).showImportDialog(ImportDialog.DIALOG_IMPORT_ADD_CONFIRM,msgData.getString("importPath"));
  }
 else   if (msg.what == MSG_SHOW_SYNC_ERROR_DIALOG) {
    int id=msgData.getInt("dialogType");
    String message=msgData.getString("dialogMessage");
    ((DeckPicker)mActivity.get()).showSyncErrorDialog(id,message);
  }
 else   if (msg.what == MSG_SHOW_EXPORT_COMPLETE_DIALOG) {
    AsyncDialogFragment f=DeckPickerExportCompleteDialog.newInstance(msgData.getString("exportPath"));
    mActivity.get().showAsyncDialogFragment(f);
  }
 else   if (msg.what == MSG_SHOW_MEDIA_CHECK_COMPLETE_DIALOG) {
    int id=msgData.getInt("dialogType");
    if (id != MediaCheckDialog.DIALOG_CONFIRM_MEDIA_CHECK) {
      List<List<String>> checkList=new ArrayList<List<String>>();
      checkList.add(msgData.getStringArrayList("nohave"));
      checkList.add(msgData.getStringArrayList("unused"));
      checkList.add(msgData.getStringArrayList("invalid"));
      ((DeckPicker)mActivity.get()).showMediaCheckDialog(id,checkList);
    }
  }
 else   if (msg.what == MSG_SHOW_DATABASE_ERROR_DIALOG) {
    ((DeckPicker)mActivity.get()).showDatabaseErrorDialog(msgData.getInt("dialogType"));
  }
 else   if (msg.what == MSG_SHOW_FORCE_FULL_SYNC_DIALOG) {
    ConfirmationDialog dialog=new ConfirmationDialog(){
      @Override public void confirm(){
        ((AnkiActivity)getActivity()).getCol().modSchemaNoCheck();
      }
    }
;
    dialog.setArgs(msgData.getString("message"));
    (mActivity.get()).showDialogFragment(dialog);
  }
 else   if (msg.what == MSG_DO_SYNC) {
    SharedPreferences preferences=AnkiDroidApp.getSharedPrefs(mActivity.get());
    String hkey=preferences.getString("hkey","");
    boolean limited=Utils.intNow(1000) - preferences.getLong("lastSyncTime",0) < INTENT_SYNC_MIN_INTERVAL;
    if (!limited) {
      ((DeckPicker)mActivity.get()).sync();
    }
 else {
      mActivity.get().showSimpleSnackbar(R.string.sync_too_busy,false);
    }
    if (hkey.length() > 0 && Connection.isOnline() && !limited) {
      mActivity.get().finishWithoutAnimation();
    }
  }
}
