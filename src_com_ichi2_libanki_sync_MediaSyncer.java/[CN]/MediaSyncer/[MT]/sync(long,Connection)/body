{
  con.publishProgress(R.string.sync_media_find);
  Log.i(AnkiDroidApp.TAG,"MediaSync: finding changed media");
  mCol.getMedia().findChanges();
  long lUsn=mCol.getMedia().usn();
  if (lUsn == mediaUsn && !mCol.getMedia().hasChanged()) {
    return "noChanges";
  }
  con.publishProgress(R.string.sync_media_remove);
  Log.i(AnkiDroidApp.TAG,"MediaSync: handling deleted media");
  List<String> lRem=removed();
  JSONArray rRem=mServer.remove(lRem,lUsn);
  if (rRem == null) {
    Log.e(AnkiDroidApp.TAG,"MediaSyncer: error (empty rRem) - returning");
    return null;
  }
  remove(rRem);
  con.publishProgress(R.string.sync_media_from_server);
  Log.i(AnkiDroidApp.TAG,"MediaSync: receiving media from server");
  while (true) {
    long usn=mCol.getMedia().usn();
    File zip=mServer.files(usn,mCol.getPath().replaceFirst("collection\\.anki2$","tmpSyncFromServer.zip"));
    if (zip == null) {
      break;
    }
    if (addFiles(zip)) {
      break;
    }
  }
  con.publishProgress(R.string.sync_media_to_server);
  Log.i(AnkiDroidApp.TAG,"MediaSync: sending media to server");
  while (true) {
    Pair<File,List<String>> zipAdded=files();
    if (zipAdded.second == null || zipAdded.second.size() == 0) {
      zipAdded.first.delete();
      break;
    }
    long usn=mServer.addFiles(zipAdded.first);
    if (usn == 0) {
      return null;
    }
    zipAdded.first.delete();
    mCol.getMedia().forgetAdded(zipAdded.second);
    mCol.getMedia().setUsn(usn);
  }
  con.publishProgress(R.string.sync_media_sanity_check);
  Log.i(AnkiDroidApp.TAG,"MediaSync: sanity check");
  long sMediaSanity=mServer.mediaSanity();
  Pair<Long,Long> cMediaSanity=mediaSanity();
  if (cMediaSanity.first != 0 || sMediaSanity != cMediaSanity.second) {
    Log.e(AnkiDroidApp.TAG,"Media sanity check failed. Diffs [local, server] - Logs: [" + cMediaSanity.first + ", 0], Counts: ["+ cMediaSanity.second+ ", "+ sMediaSanity+ "]");
    if (cMediaSanity.first != 0) {
      AnkiDroidApp.saveExceptionReportFile(new RuntimeException("Media sanity check failed. Logs not empty."),"doInBackgroundSync-mediaSync");
    }
 else {
      AnkiDroidApp.saveExceptionReportFile(new RuntimeException("Media sanity check failed. Counts are off."),"doInBackgroundSync-mediaSync");
    }
    mCol.getMedia().resetMediaDb();
    return "sanityFailed";
  }
  return "success";
}
