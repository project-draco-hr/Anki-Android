{
  Resources res=getResources();
  mCardModels=mDeck.cardModels(mNewFact);
  int size=mCardModels.size();
  String dialogItems[]=new String[size];
  cardModelIds.clear();
  int i=0;
  for (  Long id : mCardModels.keySet()) {
    dialogItems[i]=mCardModels.get(id).getName();
    cardModelIds.add(id);
    i++;
  }
  View contentView=getLayoutInflater().inflate(R.layout.fact_adder_card_model_list,null);
  mCardModelListView=(ListView)contentView.findViewById(R.id.card_model_list);
  mCardModelListView.setAdapter(new ArrayAdapter<String>(this,R.layout.dialog_check_item,dialogItems));
  for (int j=0; j < size; j++) {
    ;
    mCardModelListView.setItemChecked(j,mSelectedCardModels.containsKey(cardModelIds.get(j)));
  }
  mNewSelectedCardModels.clear();
  mNewSelectedCardModels.putAll(mSelectedCardModels);
  mCardModelListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      long m=cardModelIds.get(position);
      if (((CheckedTextView)view).isChecked()) {
        mNewSelectedCardModels.remove(m);
      }
 else {
        mNewSelectedCardModels.put(m,mCardModels.get(m));
      }
      mCardModelDialog.getButton(StyledDialog.BUTTON_POSITIVE).setEnabled(!mNewSelectedCardModels.isEmpty());
    }
  }
);
  mCardModelListView.setItemsCanFocus(false);
  StyledDialog.Builder builder=new StyledDialog.Builder(this);
  builder.setTitle(res.getString(R.string.select_card_model));
  builder.setPositiveButton(res.getString(R.string.select),new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      mSelectedCardModels.clear();
      mSelectedCardModels.putAll(mNewSelectedCardModels);
      cardModelsChanged();
    }
  }
);
  builder.setNegativeButton(res.getString(R.string.cancel),new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
    }
  }
);
  builder.setView(contentView);
  mCardModelDialog=builder.create();
}
