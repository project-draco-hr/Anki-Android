{
  Themes.applyTheme(this);
  super.onCreate(savedInstanceState);
  registerExternalStorageListener();
  View mainView=getLayoutInflater().inflate(R.layout.fact_adder,null);
  setContentView(mainView);
  Themes.setWallpaper(mainView);
  setTitle(R.string.factadder_title);
  mFieldsLayoutContainer=(LinearLayout)findViewById(R.id.FactAdderEditFieldsLayout);
  Themes.setTextViewStyle(mFieldsLayoutContainer);
  mAddButton=(Button)findViewById(R.id.FactAdderAddButton);
  mCloseButton=(Button)findViewById(R.id.FactAdderCloseButton);
  mSwapButton=(Button)findViewById(R.id.FactAdderSwapButton);
  mModelButton=(Button)findViewById(R.id.FactAdderModelButton);
  mCardModelButton=(Button)findViewById(R.id.FactAdderCardModelButton);
  mTags=(Button)findViewById(R.id.FactAdderTagButton);
  mTags.setText(getResources().getString(R.string.CardEditorTags,mFactTags));
  mNewSelectedCardModels=new LinkedHashMap<Long,CardModel>();
  cardModelIds=new ArrayList<Long>();
  Intent intent=getIntent();
  String action=intent.getAction();
  if (action != null && action.equals(INTENT_CREATE_FLASHCARD)) {
    prepareForIntentAddition();
    Bundle extras=intent.getExtras();
    mSourceLanguage=extras.getString("SOURCE_LANGUAGE");
    mTargetLanguage=extras.getString("TARGET_LANGUAGE");
    mSourceText=extras.getString("SOURCE_TEXT");
    mTargetText=extras.getString("TARGET_TEXT");
  }
 else   if (action != null && action.equals(INTENT_CREATE_FLASHCARD_SEND)) {
    prepareForIntentAddition();
    Bundle extras=intent.getExtras();
    mSourceText=extras.getString(Intent.EXTRA_SUBJECT);
    mTargetText=extras.getString(Intent.EXTRA_TEXT);
  }
 else {
    mDeck=AnkiDroidApp.deck();
    loadContents();
  }
  mAddButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      for (      FieldEditText current : mEditFields) {
        current.updateField();
      }
      mNewFact.setTags(mFactTags);
      DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ADD_FACT,mSaveFactHandler,new DeckTask.TaskData(mDeck,mNewFact,mSelectedCardModels));
    }
  }
);
  mModelButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      showDialog(DIALOG_MODEL_SELECT);
    }
  }
);
  mCardModelButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      recreateCardModelDialog();
      mCardModelDialog.show();
    }
  }
);
  mCloseButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      closeFactAdder();
    }
  }
);
  allTags=null;
  mSelectedTags=new HashSet<String>();
  mTags.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      recreateTagsDialog();
      if (!mTagsDialog.isShowing()) {
        mTagsDialog.show();
      }
    }
  }
);
}
