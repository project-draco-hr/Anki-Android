{
  Log.i(TAG,"getSounds");
  sounds=new ArrayList<MediaPlayer>();
  Matcher matcher=pattern.matcher(content);
  while (matcher.find()) {
    String contentToReplace=matcher.group();
    content=content.replace(contentToReplace,"");
    String sound=matcher.group(1);
    Log.i(TAG,"Sound " + matcher.groupCount() + ": "+ sound);
    MediaPlayer soundPlayer=new MediaPlayer();
    String soundPath=deckFilename.replaceAll(".anki","") + ".media/" + sound;
    Log.i(TAG,"getSounds - soundPath = " + soundPath);
    try {
      soundPlayer.setDataSource(soundPath);
      soundPlayer.prepare();
      sounds.add(soundPlayer);
      if (sounds.size() > 1) {
        sounds.get(sounds.size() - 2).setOnCompletionListener(new OnCompletionListener(){
          public void onCompletion(          MediaPlayer mp){
            try {
              int i=sounds.indexOf(mp) + 1;
              sounds.get(i).start();
            }
 catch (            Exception e) {
              Log.e(TAG,"playSounds - Error reproducing a sound = " + e.getMessage());
            }
          }
        }
);
      }
    }
 catch (    Exception e) {
      Log.e(TAG,"getSounds - Error setting data source for Media Player = " + e.getMessage());
    }
  }
  return content;
}
