{
  mDrawerList.setItemChecked(position,true);
  setTitle(mNavigationTitles[position]);
  mDrawerLayout.closeDrawer(mDrawerList);
switch (position) {
case DRAWER_DECK_PICKER:
    if (!(this instanceof DeckPicker)) {
      Intent deckPicker=new Intent(this,DeckPicker.class);
      deckPicker.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
      startActivityWithAnimation(deckPicker,ActivityTransitionAnimation.LEFT);
    }
  break;
case DRAWER_BROWSER:
Intent cardBrowser=new Intent(this,CardBrowser.class);
if (!(this instanceof CardBrowser)) {
if (this instanceof DeckPicker && !mFragmented) {
  cardBrowser.putExtra("fromDeckpicker",true);
}
startActivityForResultWithAnimation(cardBrowser,REQUEST_BROWSE_CARDS,ActivityTransitionAnimation.LEFT);
}
break;
case DRAWER_STATISTICS:
boolean selectAllDecksButton=false;
if (!(this instanceof Statistics)) {
if ((this instanceof DeckPicker && !mFragmented)) {
selectAllDecksButton=true;
}
AnkiStatsTaskHandler.setIsWholeCollection(selectAllDecksButton);
Intent intent=new Intent(this,Statistics.class);
intent.putExtra("selectedDeck",getCol().getDecks().selected());
startActivityForResultWithAnimation(intent,REQUEST_STATISTICS,ActivityTransitionAnimation.LEFT);
}
break;
case DRAWER_SETTINGS:
mOldColPath=CollectionHelper.getCurrentAnkiDroidDirectory(this);
startActivityForResultWithAnimation(new Intent(this,Preferences.class),REQUEST_PREFERENCES_UPDATE,ActivityTransitionAnimation.LEFT);
break;
case DRAWER_HELP:
Intent helpIntent=new Intent("android.intent.action.VIEW",Uri.parse(AnkiDroidApp.getManualUrl()));
startActivityWithoutAnimation(helpIntent);
break;
case DRAWER_FEEDBACK:
Intent feedbackIntent=new Intent("android.intent.action.VIEW",Uri.parse(AnkiDroidApp.getFeedbackUrl()));
startActivityWithoutAnimation(feedbackIntent);
break;
default :
break;
}
}
