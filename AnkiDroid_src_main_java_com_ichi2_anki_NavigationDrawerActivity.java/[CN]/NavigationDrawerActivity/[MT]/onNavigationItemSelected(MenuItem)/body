{
  if (item.isChecked()) {
    return true;
  }
switch (item.getItemId()) {
case R.id.nav_decks:
    Intent deckPicker=new Intent(this,DeckPicker.class);
  deckPicker.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
startActivityWithAnimation(deckPicker,ActivityTransitionAnimation.RIGHT);
break;
case R.id.nav_browser:
openCardBrowser();
break;
case R.id.nav_stats:
Intent intent=new Intent(this,Statistics.class);
intent.putExtra("selectedDeck",getCol().getDecks().selected());
startActivityForResultWithAnimation(intent,REQUEST_STATISTICS,ActivityTransitionAnimation.LEFT);
break;
case R.id.nav_night_mode:
mNightModeSwitch.performClick();
return true;
case R.id.nav_settings:
mOldColPath=CollectionHelper.getCurrentAnkiDroidDirectory(this);
startActivityForResultWithAnimation(new Intent(this,Preferences.class),REQUEST_PREFERENCES_UPDATE,ActivityTransitionAnimation.FADE);
break;
case R.id.nav_help:
Intent helpIntent=new Intent("android.intent.action.VIEW",Uri.parse(AnkiDroidApp.getManualUrl()));
startActivityWithoutAnimation(helpIntent);
break;
case R.id.nav_feedback:
Intent feedbackIntent=new Intent("android.intent.action.VIEW",Uri.parse(AnkiDroidApp.getFeedbackUrl()));
startActivityWithoutAnimation(feedbackIntent);
break;
default :
return false;
}
mDrawerLayout.closeDrawers();
return true;
}
