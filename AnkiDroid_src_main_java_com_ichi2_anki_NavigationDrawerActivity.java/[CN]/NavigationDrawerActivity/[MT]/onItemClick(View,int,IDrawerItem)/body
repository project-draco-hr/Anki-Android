{
  if (mSelectedItem == iDrawerItem.getIdentifier()) {
    mDrawer.closeDrawer();
    return true;
  }
switch (iDrawerItem.getIdentifier()) {
case DRAWER_DECK_PICKER:
    Intent deckPicker=new Intent(this,DeckPicker.class);
  deckPicker.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
startActivityWithAnimation(deckPicker,ActivityTransitionAnimation.RIGHT);
break;
case DRAWER_BROWSER:
Intent cardBrowser=new Intent(this,CardBrowser.class);
cardBrowser.putExtra("selectedDeck",getCol().getDecks().selected());
startActivityForResultWithAnimation(cardBrowser,REQUEST_BROWSE_CARDS,ActivityTransitionAnimation.LEFT);
break;
case DRAWER_STATISTICS:
Intent intent=new Intent(this,Statistics.class);
intent.putExtra("selectedDeck",getCol().getDecks().selected());
startActivityForResultWithAnimation(intent,REQUEST_STATISTICS,ActivityTransitionAnimation.LEFT);
break;
case DRAWER_SETTINGS:
mOldColPath=CollectionHelper.getCurrentAnkiDroidDirectory(this);
startActivityForResultWithAnimation(new Intent(this,Preferences.class),REQUEST_PREFERENCES_UPDATE,ActivityTransitionAnimation.FADE);
break;
case DRAWER_HELP:
Intent helpIntent=new Intent("android.intent.action.VIEW",Uri.parse(AnkiDroidApp.getManualUrl()));
startActivityWithoutAnimation(helpIntent);
break;
case DRAWER_FEEDBACK:
Intent feedbackIntent=new Intent("android.intent.action.VIEW",Uri.parse(AnkiDroidApp.getFeedbackUrl()));
startActivityWithoutAnimation(feedbackIntent);
break;
default :
return false;
}
mDrawer.closeDrawer();
mSelectedItem=iDrawerItem.getIdentifier();
return true;
}
