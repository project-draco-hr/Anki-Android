{
  isAborted=false;
  while (!ReliefDrawer.this.depthScanningIsFinished || rangeHasChanged()) {
    if (this.isAborted) {
      System.err.println("no relief legend will be drawn!");
      return;
    }
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
  }
  ReliefDrawer.this.depthScanningIsFinished=false;
  Color oldColor=g.getColor();
  Rectangle field=g.getClipBounds();
  double deltaZ=(ReliefDrawer.this.yrange[1] - ReliefDrawer.this.yrange[0]) / ReliefDrawer.this.borders.length;
  @SuppressWarnings("deprecation") float leftStart=plotSheet.xToGraphic(ReliefDrawer.this.xrange[1],field) + 10;
  double lowerStart=ReliefDrawer.this.f_xLowest;
  double upperEnd=0;
  double currentHeight=ReliefDrawer.this.yrange[0];
  double yToZQuotient=Math.abs(ReliefDrawer.this.yrange[1] - ReliefDrawer.this.yrange[0]) / (ReliefDrawer.this.f_xHighest - ReliefDrawer.this.f_xLowest);
  for (  double border : ReliefDrawer.this.borders) {
    upperEnd=border;
    deltaZ=yToZQuotient * (upperEnd - lowerStart);
    Color regionColor=ReliefDrawer.this.getColor((lowerStart + upperEnd) / 2);
    g.setColor(regionColor);
    g.fillRect(leftStart,plotSheet.yToGraphic(currentHeight + deltaZ,field),10,plotSheet.yToGraphic(currentHeight,field) - plotSheet.yToGraphic(currentHeight + deltaZ,field));
    currentHeight+=deltaZ;
    lowerStart=upperEnd;
  }
  g.setColor(Color.black);
  double ztics=ticsCalc(ReliefDrawer.this.f_xHighest - ReliefDrawer.this.f_xLowest,12);
  double startY=ReliefDrawer.this.yrange[0];
  double startZ=ReliefDrawer.this.f_xLowest;
  double currentY=startY;
  double currentZ=startZ;
  if (ztics < 1e-2 || ztics > 1e3)   this.isScientific=true;
  while (currentY <= ReliefDrawer.this.yrange[1]) {
    if (this.isScientific)     g.drawString(df.format(currentZ),leftStart + 22,plotSheet.yToGraphic(currentY,field));
 else     g.drawString(dfScience.format(currentZ),leftStart + 22,plotSheet.yToGraphic(currentY,field));
    currentZ+=ztics;
    currentY+=yToZQuotient * ztics;
  }
  g.setColor(oldColor);
}
