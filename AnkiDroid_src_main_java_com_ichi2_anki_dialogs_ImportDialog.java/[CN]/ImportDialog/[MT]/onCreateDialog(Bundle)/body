{
  super.onCreate(savedInstanceState);
  mType=getArguments().getInt("dialogType");
  Resources res=getResources();
  MaterialDialog.Builder builder=new MaterialDialog.Builder(getActivity());
  builder.cancelable(true);
switch (mType) {
case DIALOG_IMPORT_HINT:
    return builder.title(res.getString(R.string.import_title)).content(res.getString(R.string.import_hint,CollectionHelper.getCurrentAnkiDroidDirectory(getActivity()))).positiveText(res.getString(R.string.dialog_ok)).negativeText(res.getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
      @Override public void onPositive(      MaterialDialog dialog){
        ((ImportDialogListener)getActivity()).showImportDialog(DIALOG_IMPORT_SELECT);
      }
      @Override public void onNegative(      MaterialDialog dialog){
        dismissAllDialogFragments();
      }
    }
).show();
case DIALOG_IMPORT_SELECT:
  List<File> fileList=Utils.getImportableDecks(getActivity());
if (fileList.size() == 0) {
  UIUtils.showThemedToast(getActivity(),getResources().getString(R.string.upgrade_import_no_file_found,"'.apkg'"),false);
  return builder.showListener(new DialogInterface.OnShowListener(){
    @Override public void onShow(    DialogInterface dialog){
      dialog.cancel();
    }
  }
).show();
}
 else {
  String[] tts=new String[fileList.size()];
  final String[] importValues=new String[fileList.size()];
  for (int i=0; i < tts.length; i++) {
    tts[i]=fileList.get(i).getName().replace(".apkg","");
    importValues[i]=fileList.get(i).getAbsolutePath();
  }
  return builder.title(res.getString(R.string.import_select_title)).items(tts).itemsCallback(new MaterialDialog.ListCallback(){
    @Override public void onSelection(    MaterialDialog materialDialog,    View view,    int i,    CharSequence charSequence){
      String importPath=importValues[i];
      if (filenameFromPath(importPath).equals("collection.apkg")) {
        ((ImportDialogListener)getActivity()).showImportDialog(DIALOG_IMPORT_REPLACE_CONFIRM,importPath);
      }
 else {
        ((ImportDialogListener)getActivity()).showImportDialog(DIALOG_IMPORT_ADD_CONFIRM,importPath);
      }
    }
  }
).show();
}
case DIALOG_IMPORT_ADD_CONFIRM:
return builder.title(res.getString(R.string.import_title)).content(res.getString(R.string.import_message_add_confirm,filenameFromPath(getArguments().getString("dialogMessage")))).positiveText(res.getString(R.string.import_message_add)).negativeText(res.getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
  ((ImportDialogListener)getActivity()).importAdd(getArguments().getString("dialogMessage"));
  dismissAllDialogFragments();
}
}
).show();
case DIALOG_IMPORT_REPLACE_CONFIRM:
return builder.title(res.getString(R.string.import_title)).content(res.getString(R.string.import_message_replace_confirm,getArguments().getString("dialogMessage"))).positiveText(res.getString(R.string.dialog_positive_replace)).negativeText(res.getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
((ImportDialogListener)getActivity()).importReplace(getArguments().getString("dialogMessage"));
dismissAllDialogFragments();
}
}
).show();
default :
return null;
}
}
