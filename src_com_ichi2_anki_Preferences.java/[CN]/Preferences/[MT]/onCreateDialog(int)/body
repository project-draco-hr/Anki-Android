{
  Resources res=getResources();
  StyledDialog.Builder builder=new StyledDialog.Builder(this);
switch (id) {
case DIALOG_BACKUP:
    builder.setTitle(res.getString(R.string.backup_manager_title));
  builder.setCancelable(false);
builder.setMessage(res.getString(R.string.pref_backup_warning));
builder.setPositiveButton(res.getString(R.string.yes),new OnClickListener(){
@Override public void onClick(DialogInterface arg0,int arg1){
  lockCheckAction=true;
  useBackupPreference.setChecked(false);
  dialogMessage=getResources().getString(R.string.backup_delete);
  DeckTask.launchDeckTask(DeckTask.TASK_TYPE_DELETE_BACKUPS,mDeckOperationHandler,(DeckTask.TaskData[])null);
}
}
);
builder.setNegativeButton(res.getString(R.string.no),null);
break;
case DIALOG_ASYNC:
builder.setTitle(res.getString(R.string.async_mode));
builder.setCancelable(false);
builder.setMessage(res.getString(R.string.async_mode_message));
builder.setPositiveButton(res.getString(R.string.yes),new OnClickListener(){
@Override public void onClick(DialogInterface arg0,int arg1){
lockCheckAction=true;
asyncModePreference.setChecked(true);
setReloadDeck();
}
}
);
builder.setNegativeButton(res.getString(R.string.no),null);
break;
case DIALOG_WRITE_ANSWERS:
builder.setTitle(res.getString(R.string.write_answers));
builder.setCancelable(false);
builder.setMessage(res.getString(R.string.write_answers_message));
builder.setNegativeButton(res.getString(R.string.ok),null);
break;
}
return builder.create();
}
