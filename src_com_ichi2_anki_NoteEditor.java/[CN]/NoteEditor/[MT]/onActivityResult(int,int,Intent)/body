{
  super.onActivityResult(requestCode,resultCode,data);
  if (resultCode == DeckPicker.RESULT_DB_ERROR) {
    closeCardEditor(DeckPicker.RESULT_DB_ERROR);
  }
switch (requestCode) {
case REQUEST_INTENT_ADD:
    if (resultCode != RESULT_CANCELED) {
      mChanged=true;
      String id=data.getStringExtra(EXTRA_ID);
      if (id != null && MetaDB.removeIntentInformation(NoteEditor.this,id)) {
        updateIntentInformation();
      }
    }
  if (!mIntentInformation.isEmpty()) {
    showDialog(DIALOG_INTENT_INFORMATION);
  }
break;
case REQUEST_ADD:
if (resultCode != RESULT_CANCELED) {
mChanged=true;
}
break;
case REQUEST_MULTIMEDIA_EDIT:
if (resultCode != RESULT_CANCELED) {
Bundle extras=data.getExtras();
int index=extras.getInt(EditFieldActivity.EXTRA_RESULT_FIELD_INDEX);
IField field=(IField)extras.get(EditFieldActivity.EXTRA_RESULT_FIELD);
IMultimediaEditableNote mNote=NoteService.createEmptyNote(mEditorNote.model());
NoteService.updateMultimediaNoteFromJsonNote(mEditorNote,mNote);
mNote.setField(index,field);
mEditFields.get(index).setText(field.getFormattedValue());
NoteService.saveMedia((MultimediaEditableNote)mNote);
mChanged=true;
}
break;
}
}
