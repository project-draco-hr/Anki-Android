{
  View customView=null;
  boolean showFilterTags=false;
switch (mType) {
case TYPE_ADD_TAG:
    customView=addDialogContent();
  break;
case TYPE_FILTER_BY_TAG:
customView=filterByTagContent();
showFilterTags=true;
break;
case TYPE_CUSTOM_STUDY_TAGS:
customView=filterByTagContent();
showFilterTags=true;
break;
default :
break;
}
Resources res=getResources();
MaterialDialog.Builder builder=new MaterialDialog.Builder(getActivity()).title(mTitle).positiveText(res.getString(R.string.select)).negativeText(res.getString(R.string.dialog_cancel)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
mTagsDialogListener.onPositive(new ArrayList<String>(mStyledDialog.getCheckedItems()),mSelectedOption);
}
}
).cancelListener(mOnCancelListener).dismissListener(new OnDismissListener(){
@Override public void onDismiss(DialogInterface dialog){
mCurrentTags.clear();
mStyledDialog.updateCheckedItems();
if (mOnDismissListener != null) {
mOnDismissListener.onDismiss(mStyledDialog);
}
}
}
);
StyledDialog.Builder builder2=new StyledDialog.Builder(getActivity());
builder2.setTitle(mTitle);
builder2.setPositiveButton(res.getString(R.string.select),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
mTagsDialogListener.onPositive(new ArrayList<String>(mStyledDialog.getCheckedItems()),mSelectedOption);
}
}
);
builder2.setNegativeButton(res.getString(R.string.cancel),mNegativeButtonListener);
builder2.setOnCancelListener(mOnCancelListener);
builder2.setOnDismissListener(new DialogInterface.OnDismissListener(){
@Override public void onDismiss(DialogInterface dialog){
mCurrentTags.clear();
mStyledDialog.updateCheckedItems();
if (mOnDismissListener != null) {
mOnDismissListener.onDismiss(mStyledDialog);
}
}
}
);
builder2.setSelectAllListener(new CompoundButton.OnCheckedChangeListener(){
@Override public void onCheckedChanged(CompoundButton buttonView,boolean isChecked){
mStyledDialog.setItemListChecked(isChecked);
mCurrentTags.clear();
mCurrentTags.addAll(mStyledDialog.getCheckedItems());
}
}
);
if (customView != null) {
builder.customView(customView,true);
builder2.setView(customView,false,true);
}
builder2.setShowFilterTags(showFilterTags);
return builder2;
}
