{
  Timber.d("doInBackgroundImportAdd");
  Resources res=AnkiDroidApp.getInstance().getBaseContext().getResources();
  Collection col=params[0].getCollection();
  String path=params[0].getString();
  boolean sharedDeckImport=params[0].getBoolean();
  ProgressCallback pc=null;
  if (!sharedDeckImport) {
    pc=new ProgressCallback(this,res);
  }
  int addedCount=-1;
  try {
    Anki2Importer imp=new Anki2Importer(col,path,pc);
    AnkiDb ankiDB=col.getDb();
    ankiDB.getDatabase().beginTransaction();
    try {
      addedCount=imp.run();
      if (addedCount >= 0) {
        ankiDB.getDatabase().setTransactionSuccessful();
      }
    }
  finally {
      ankiDB.getDatabase().endTransaction();
      if (sharedDeckImport) {
        File tmpFile=new File(path);
        tmpFile.delete();
      }
    }
    if (addedCount >= 0) {
      ankiDB.execute("VACUUM");
      ankiDB.execute("ANALYZE");
    }
    publishProgress(new TaskData(res.getString(R.string.import_update_counts)));
    return new TaskData(addedCount,null,true);
  }
 catch (  RuntimeException e) {
    Timber.e(e,"doInBackgroundImportAdd - RuntimeException on importing cards");
    AnkiDroidApp.sendExceptionReport(e,"doInBackgroundImportAdd");
    return new TaskData(false);
  }
catch (  IOException e) {
    Timber.e(e,"doInBackgroundImportAdd - IOException on importing cards: ");
    AnkiDroidApp.sendExceptionReport(e,"doInBackgroundImportAdd");
    return new TaskData(false);
  }
}
