{
  Timber.d("doInBackgroundLoadModels");
  Collection col=CollectionHelper.getInstance().getCol(mContext);
  ArrayList<JSONObject> models=(ArrayList<JSONObject>)col.getModels().all();
  ArrayList<Integer> cardCount=new ArrayList<Integer>();
  Collections.sort(models,new Comparator<JSONObject>(){
    @Override public int compare(    JSONObject a,    JSONObject b){
      try {
        return a.getString("name").compareTo(b.getString("name"));
      }
 catch (      JSONException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  try {
    for (    JSONObject n : models) {
      long modID=n.getLong("id");
      cardCount.add(col.getModels().nids(col.getModels().get(modID)).size());
    }
  }
 catch (  JSONException e) {
    Timber.e("doInBackgroundLoadModels :: JSONException");
    return new TaskData(false);
  }
  Object[] data=new Object[2];
  data[0]=models;
  data[1]=cardCount;
  return (new TaskData(0,data,true));
}
