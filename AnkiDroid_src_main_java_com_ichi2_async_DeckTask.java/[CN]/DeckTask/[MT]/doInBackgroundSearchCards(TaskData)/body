{
  Timber.d("doInBackgroundSearchCards");
  Collection col=CollectionHelper.getInstance().getCol(mContext);
  Map<String,String> deckNames=(HashMap<String,String>)params[0].getObjArray()[0];
  String query=(String)params[0].getObjArray()[1];
  Boolean order=(Boolean)params[0].getObjArray()[2];
  List<Map<String,String>> searchResult=col.findCardsForCardBrowser(query,order,deckNames);
  for (int i=0; i < Math.min(CardBrowser.MIN_CARDS_TO_RENDER,searchResult.size()); i++) {
    Card c=col.getCard(Long.parseLong(searchResult.get(i).get("id"),10));
    CardBrowser.updateSearchItemQA(searchResult.get(i),c);
  }
  if (isCancelled()) {
    Timber.d("doInBackgroundSearchCards was cancelled so return null");
    return null;
  }
 else {
    publishProgress(new TaskData(searchResult));
  }
  return new TaskData(col.cardCount(col.getDecks().allIds()));
}
