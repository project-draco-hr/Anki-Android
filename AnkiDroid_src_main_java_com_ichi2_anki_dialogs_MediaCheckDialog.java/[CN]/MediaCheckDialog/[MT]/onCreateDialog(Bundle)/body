{
  super.onCreate(savedInstanceState);
  MaterialDialog.Builder builder=new MaterialDialog.Builder(getActivity());
  builder.title(getNotificationTitle());
switch (getArguments().getInt("dialogType")) {
case DIALOG_CONFIRM_MEDIA_CHECK:
    return builder.content(getNotificationMessage()).positiveText(res().getString(R.string.dialog_ok)).negativeText(res().getString(R.string.dialog_cancel)).cancelable(true).callback(new MaterialDialog.ButtonCallback(){
      @Override public void onPositive(      MaterialDialog dialog){
        ((MediaCheckDialogListener)getActivity()).mediaCheck();
        ((MediaCheckDialogListener)getActivity()).dismissAllDialogFragments();
      }
      @Override public void onNegative(      MaterialDialog dialog){
        ((MediaCheckDialogListener)getActivity()).dismissAllDialogFragments();
      }
    }
).show();
case DIALOG_MEDIA_CHECK_RESULTS:
  final ArrayList<String> nohave=getArguments().getStringArrayList("nohave");
final ArrayList<String> unused=getArguments().getStringArrayList("unused");
final ArrayList<String> invalid=getArguments().getStringArrayList("invalid");
String report="";
if (invalid.size() > 0) {
report+=String.format(res().getString(R.string.check_media_invalid),invalid.size());
}
if (unused.size() > 0) {
if (report.length() > 0) {
report+="\n";
}
report+=String.format(res().getString(R.string.check_media_unused),unused.size());
}
if (nohave.size() > 0) {
if (report.length() > 0) {
report+="\n";
}
report+=String.format(res().getString(R.string.check_media_nohave),nohave.size());
}
if (report.length() == 0) {
report=res().getString(R.string.check_media_no_unused_missing);
}
report=res().getString(R.string.check_media_db_updated) + "\n\n" + report;
builder.content(report).cancelable(true);
if (unused.size() > 0) {
builder.positiveText(res().getString(R.string.dialog_ok)).negativeText(res().getString(R.string.check_media_delete_unused)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
((MediaCheckDialogListener)getActivity()).dismissAllDialogFragments();
}
@Override public void onNegative(MaterialDialog dialog){
((MediaCheckDialogListener)getActivity()).deleteUnused(unused);
dismissAllDialogFragments();
}
}
);
}
 else {
builder.positiveText(res().getString(R.string.dialog_ok)).callback(new MaterialDialog.ButtonCallback(){
@Override public void onPositive(MaterialDialog dialog){
((MediaCheckDialogListener)getActivity()).dismissAllDialogFragments();
}
}
);
}
return builder.show();
default :
return null;
}
}
