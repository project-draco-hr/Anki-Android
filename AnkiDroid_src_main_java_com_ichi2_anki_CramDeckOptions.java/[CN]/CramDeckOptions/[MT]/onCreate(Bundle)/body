{
  if (!CompatHelper.isHoneycomb()) {
    Themes.applyTheme(this,Themes.THEME_ANDROID_DARK);
  }
  super.onCreate(icicle);
  mCol=CollectionHelper.getInstance().getCol(this);
  if (mCol == null) {
    finish();
    return;
  }
  Bundle extras=getIntent().getExtras();
  if (extras != null && extras.containsKey("did")) {
    mDeck=mCol.getDecks().get(extras.getLong("did"));
  }
 else {
    mDeck=mCol.getDecks().current();
  }
  Bundle initialConfig=getIntent().getBundleExtra("cramInitialConfig");
  if (initialConfig != null) {
    if (initialConfig.containsKey("searchSuffix")) {
      mPresetSearchSuffix=initialConfig.getString("searchSuffix");
    }
  }
  registerExternalStorageListener();
  try {
    if (mCol == null || mDeck.getInt("dyn") != 1) {
      Timber.w("CramDeckOptions - No Collection loaded or deck is not a dyn deck");
      finish();
      return;
    }
 else {
      mPref=new DeckPreferenceHack();
      mPref.registerOnSharedPreferenceChangeListener(this);
      this.addPreferencesFromResource(R.xml.cram_deck_options);
      this.buildLists();
      this.updateSummaries();
    }
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  String title=getResources().getString(R.string.deckpreferences_title);
  if (title.contains("XXX")) {
    try {
      title=title.replace("XXX",mDeck.getString("name"));
    }
 catch (    JSONException e) {
      title=title.replace("XXX","???");
    }
  }
  this.setTitle(title);
}
