{
  mLegendMap=new HashMap<String,Color>();
  Rectangle field=g.getClipBounds();
  this.currentScreen=screenNr;
  prepareRunnables();
  Vector<Drawable> offFrameDrawables=new Vector<Drawable>();
  Vector<Drawable> onFrameDrawables=new Vector<Drawable>();
  BufferedImage bufferedFrameImage=new BufferedImage(field.width,field.height,BufferedImage.TYPE_INT_ARGB);
  Graphics2D gFrame=bufferedFrameImage.createGraphics();
  gFrame.setClip(field);
  gFrame.setTypeface(typeface);
  g.setTypeface(typeface);
  g.setColor(Color.white);
  g.fillRect(0,0,field.width,field.height);
  g.setColor(Color.BLACK);
  gFrame.setColor(Color.BLACK);
  if (fontSizeSet) {
    g.setFontSize(fontSize);
    gFrame.setFontSize(fontSize);
  }
  int i=0;
  if (this.screenParts.get(screenNr).getDrawables() != null && this.screenParts.get(screenNr).getDrawables().size() != 0) {
    for (    Drawable draw : this.screenParts.get(screenNr).getDrawables()) {
      if (!draw.isOnFrame()) {
        offFrameDrawables.add(draw);
      }
 else {
        onFrameDrawables.add(draw);
      }
    }
  }
  System.err.println("Frame: " + field.width + " : "+ field.height);
  Color oldColor=gFrame.getColor();
  if (this.frameThickness > 0) {
    gFrame.setColor(Color.white);
    gFrame.fillRect(0,0,field.width,this.frameThickness);
    gFrame.fillRect(0,this.frameThickness,this.frameThickness,field.height);
    gFrame.fillRect(field.width + 1 - this.frameThickness,this.frameThickness,this.frameThickness + 2,field.height - this.frameThickness);
    gFrame.fillRect(this.frameThickness,field.height - this.frameThickness,field.width - this.frameThickness,this.frameThickness + 1);
    if (isBordered) {
      gFrame.setColor(Color.black);
      gFrame.fillRect(this.frameThickness - borderThickness + 1,this.frameThickness - borderThickness + 1,field.width - 2 * this.frameThickness + 2 * borderThickness - 2,borderThickness);
      gFrame.fillRect(this.frameThickness - borderThickness + 1,field.height - this.frameThickness,field.width - 2 * this.frameThickness + 2 * borderThickness - 2,borderThickness);
      gFrame.fillRect(this.frameThickness - borderThickness + 1,this.frameThickness - borderThickness + 1,borderThickness,field.height - 2 * this.frameThickness + 2 * borderThickness - 2);
      gFrame.fillRect(field.width - this.frameThickness,this.frameThickness - borderThickness + 1,borderThickness,field.height - 2 * this.frameThickness + 2 * borderThickness - 2);
    }
    gFrame.setColor(oldColor);
    if (hasTitle) {
      float oldFontSize=gFrame.getFontSize();
      float newFontSize=oldFontSize * 2;
      gFrame.setFontSize(newFontSize);
      FontMetrics fm=gFrame.getFontMetrics();
      float height=fm.getHeight();
      float width=fm.stringWidth(this.title);
      gFrame.drawString(this.title,field.width / 2 - width / 2,this.frameThickness - 10 - height);
      gFrame.setFontSize(oldFontSize);
    }
    Set<String> keySet=mLegendMap.keySet();
    int xPointer=10;
    float ySpacer=10;
    float rectangleSize=16;
    System.out.println("!!!!!!! " + mLegendMap.size());
    FontMetrics fm=gFrame.getFontMetrics();
    float currentPixelWidth=xPointer;
    for (    String legendName : keySet) {
      float stringWidth=fm.stringWidth(" : " + legendName);
      float height=fm.getHeight();
      float delta=rectangleSize - height;
      Color color=mLegendMap.get(legendName);
      gFrame.setColor(color);
      if (xPointer + rectangleSize * 2 + stringWidth >= field.width) {
        xPointer=10;
        ySpacer+=rectangleSize + 10;
      }
      gFrame.fillRect(xPointer,ySpacer,rectangleSize,rectangleSize);
      gFrame.setColor(Color.BLACK);
      gFrame.drawString(" : " + legendName,xPointer + rectangleSize,ySpacer + rectangleSize - delta / 2);
      xPointer+=rectangleSize * 2 + stringWidth;
    }
    gFrame.setColor(Color.BLACK);
  }
  gFrame.dispose();
  for (  Drawable offFrameDrawing : offFrameDrawables) {
    offFrameDrawing.paint(g);
  }
  ((Graphics2D)g).drawImage(bufferedFrameImage,null,0,0);
  for (  Drawable onFrameDrawing : onFrameDrawables) {
    onFrameDrawing.paint(g);
  }
}
