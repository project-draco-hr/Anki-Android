{
  Integer start=null;
  Integer end=null;
  int chunk=0;
switch (type) {
case TYPE_MONTH:
    start=0;
  end=31;
chunk=1;
break;
case TYPE_YEAR:
start=0;
end=52;
chunk=7;
break;
case TYPE_LIFE:
start=0;
end=null;
chunk=30;
break;
}
List<int[]> d=_due(start,end,chunk);
List<int[]> yng=new ArrayList<>();
List<int[]> mtr=new ArrayList<>();
int tot=0;
List<int[]> totd=new ArrayList<>();
for (int[] day : d) {
yng.add(new int[]{day[0],day[1]});
mtr.add(new int[]{day[0],day[2]});
tot+=day[1] + day[2];
totd.add(new int[]{day[0],tot});
}
oStats.forecastTotalReviews=tot;
oStats.forecastAverageReviews=(double)tot / (totd.size() * chunk);
oStats.forecastDueTomorrow=mCol.getDb().queryScalar(String.format(Locale.US,"select count() from cards where did in %s and queue in (2,3) " + "and due = ?",_limit()),new String[]{Integer.toString(mCol.getSched().getToday() + 1)});
}
