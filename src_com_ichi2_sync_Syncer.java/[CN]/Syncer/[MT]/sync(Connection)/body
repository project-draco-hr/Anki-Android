{
  mCol.save();
  HttpResponse ret=mServer.meta();
  if (ret == null || HttpSyncer.getReturnType(ret) == 403) {
    return "badAuth";
  }
  int rts;
  int lts;
  try {
    JSONArray ra=HttpSyncer.getDataJSONArray(ret);
    mRMod=ra.getLong(0);
    mRScm=ra.getInt(1);
    mMaxUsn=ra.getInt(2);
    rts=ra.getInt(3);
    mMediaUsn=ra.getInt(4);
    JSONArray la=meta();
    mLMod=la.getLong(0);
    mLScm=la.getInt(1);
    mMinUsn=la.getInt(2);
    lts=la.getInt(3);
    if (Math.abs(rts - lts) > 300) {
      return "clockOff";
    }
    if (mLMod == mRMod) {
      return "noChanges";
    }
 else     if (mLScm != mRScm) {
      return "fullSync";
    }
    mLNewer=mLMod > mRMod;
    JSONObject lrem=removed();
    JSONObject o=new JSONObject();
    o.put("minUsn",mMinUsn);
    o.put("lnewer",mLNewer);
    o.put("graves",lrem);
    JSONObject rrem=mServer.start(o);
    if (rrem == null) {
    }
    JSONObject lchg=changes();
    JSONObject rchg=mServer.applyChanges(lchg);
    if (rchg == null) {
      return "error";
    }
    mergeChanges(lchg,rchg);
    while (true) {
      JSONObject chunk=mServer.chunk();
      if (chunk == null) {
        return "error";
      }
      applyChunk(chunk);
      if (chunk.getBoolean("done")) {
        break;
      }
    }
    while (true) {
      JSONObject chunk=chunk();
      mServer.applyChunk(chunk);
      if (chunk.getBoolean("done")) {
        break;
      }
    }
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  return "success";
}
