{
  super.onCreate(savedInstanceState);
  Log.i(TAG,"onCreate - savedInstanceState: " + savedInstanceState);
  checkUpdates();
  registerExternalStorageListener();
  initResourceValues();
  Bundle extras=getIntent().getExtras();
  SharedPreferences preferences=restorePreferences();
  initLayout(R.layout.flashcard_portrait);
  if (extras != null && extras.getString(OPT_DB) != null) {
    deckFilename=extras.getString(OPT_DB);
    Log.i(TAG,"onCreate - deckFilename from extras: " + deckFilename);
  }
 else   if (savedInstanceState != null) {
    deckFilename=savedInstanceState.getString("deckFilename");
    Log.i(TAG,"onCreate - deckFilename from savedInstanceState: " + deckFilename);
  }
 else {
    Log.i(TAG,"onCreate - " + preferences.getAll().toString());
    deckFilename=preferences.getString("deckFilename",null);
    Log.i(TAG,"onCreate - deckFilename from preferences: " + deckFilename);
  }
  if (deckFilename == null || !new File(deckFilename).exists()) {
    Log.i(TAG,"onCreate - No previously selected deck or the previously selected deck is not available at the moment");
    if (isSdCardMounted()) {
      boolean generateSampleDeck=preferences.getBoolean("generateSampleDeck",true);
      if (generateSampleDeck) {
        Log.i(TAG,"onCreate - Generating sample deck...");
        String SAMPLE_DECK_FILENAME="/sdcard/country-capitals.anki";
        if (!new File("/sdcard","country-capitals.anki").exists()) {
          try {
            InputStream stream=getResources().getAssets().open("country-capitals.anki");
            boolean written=writeToFile(stream,SAMPLE_DECK_FILENAME);
            if (!written) {
              openDeckPicker();
              Log.i(TAG,"onCreate - The copy of country-capitals.anki to the sd card failed.");
              return;
            }
            Log.i(TAG,"onCreate - The copy of country-capitals.anki to the sd card was sucessful.");
          }
 catch (          IOException e) {
            e.printStackTrace();
          }
        }
        deckFilename=SAMPLE_DECK_FILENAME;
      }
 else {
        openDeckPicker();
      }
    }
  }
}
