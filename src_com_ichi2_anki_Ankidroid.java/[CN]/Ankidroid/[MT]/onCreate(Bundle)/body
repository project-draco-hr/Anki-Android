{
  super.onCreate(savedInstanceState);
  Bundle extras=getIntent().getExtras();
  initResourceValues();
  Log.i(TAG,"onCreate - savedInstanceState: " + savedInstanceState);
  SharedPreferences preferences=restorePreferences();
  if (extras != null && extras.getString(OPT_DB) != null) {
    deckFilename=extras.getString(OPT_DB);
    Log.i(TAG,"onCreate - deckFilename from extras: " + deckFilename);
  }
 else   if (savedInstanceState != null) {
    deckFilename=savedInstanceState.getString("deckFilename");
    Log.i(TAG,"onCreate - deckFilename from savedInstanceState: " + deckFilename);
  }
 else {
    Log.i(TAG,"onCreate - " + preferences.getAll().toString());
    deckFilename=preferences.getString("deckFilename",null);
    Log.i(TAG,"onCreate - deckFilename from preferences: " + deckFilename);
  }
  if (deckFilename == null || !new File(deckFilename).exists()) {
    boolean generateSampleDeck=preferences.getBoolean("generateSampleDeck",true);
    if (generateSampleDeck) {
      String SAMPLE_DECK_FILENAME="/sdcard/country-capitals.anki";
      if (!new File("/sdcard","country-capitals.anki").exists()) {
        try {
          InputStream stream=getResources().getAssets().open("country-capitals.anki");
          boolean written=writeToFile(stream,SAMPLE_DECK_FILENAME);
          if (!written) {
            openDeckPicker();
            return;
          }
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
      initLayout(R.layout.flashcard_portrait);
      deckFilename=SAMPLE_DECK_FILENAME;
      displayProgressDialogAndLoadDeck();
    }
 else {
      openDeckPicker();
    }
  }
 else {
    initLayout(R.layout.flashcard_portrait);
    displayProgressDialogAndLoadDeck();
  }
  deckSelected=true;
}
