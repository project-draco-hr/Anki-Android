{
  mTags="";
  mTagsBySrc=new String[TAGS_TEMPL + 1];
  mTagsBySrc[TAGS_FACT]="";
  mTagsBySrc[TAGS_MODEL]="";
  mTagsBySrc[TAGS_TEMPL]="";
  mId=Utils.genID();
  mType=TYPE_NEW;
  mRelativeDelay=mType;
  mTimerStarted=Double.NaN;
  mTimerStopped=Double.NaN;
  mModified=Utils.now();
  if (created != Double.NaN) {
    mCreated=created;
    mDue=created;
  }
 else {
    mDue=mModified;
  }
  isLeechSuspended=false;
  mCombinedDue=mDue;
  mDeck=deck;
  mFact=fact;
  if (fact != null) {
    mFactId=fact.getId();
  }
  mCardModel=cardModel;
  if (cardModel != null) {
    mCardModelId=cardModel.getId();
    mOrdinal=cardModel.getOrdinal();
    if (fact != null) {
      HashMap<String,String> qa=CardModel.formatQA(fact,cardModel,splitTags());
      mQuestion=qa.get("question");
      mAnswer=qa.get("answer");
    }
  }
}
