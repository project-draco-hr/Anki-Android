{
  tags="";
  id=Util.genID();
  type=2;
  isDue=1;
  timerStarted=Double.NaN;
  timerStopped=Double.NaN;
  modified=System.currentTimeMillis() / 1000.0;
  if (created != Double.NaN) {
    this.created=created;
    this.due=created;
  }
 else   due=modified;
  combinedDue=due;
  this.fact=fact;
  this.cardModel=cardModel;
  if (cardModel != null) {
    cardModelId=cardModel.id;
    ordinal=cardModel.ordinal;
    HashMap<String,HashMap<Long,String>> d=new HashMap<String,HashMap<Long,String>>();
    Iterator<FieldModel> iter=fact.model.fieldModels.iterator();
    while (iter.hasNext()) {
      FieldModel fm=iter.next();
      HashMap<Long,String> field=new HashMap<Long,String>();
      field.put(fm.id,fact.getFieldValue(fm.name));
      d.put(fm.name,field);
    }
    HashMap<String,String> qa=CardModel.formatQA(id,fact.modelId,d,splitTags(),cardModel);
    question=qa.get("question");
    answer=qa.get("answer");
  }
  if (updateStmt == null) {
    updateStmt=AnkiDb.database.compileStatement("UPDATE cards " + "SET factId = ?, " + "cardModelId = ?, "+ "created = ?, "+ "modified = ?, "+ "tags = ?, "+ "ordinal = ?, "+ "question = ?, "+ "answer = ?, "+ "priority = ?, "+ "interval = ?, "+ "lastInterval = ?, "+ "due = ?, "+ "lastDue = ?, "+ "factor = ?, "+ "lastFactor = ?, "+ "firstAnswered = ?, "+ "reps = ?, "+ "successive = ?, "+ "averageTime = ?, "+ "reviewTime = ?, "+ "youngEase0 = ?, "+ "youngEase1 = ?, "+ "youngEase2 = ?, "+ "youngEase3 = ?, "+ "youngEase4 = ?, "+ "matureEase0 = ?, "+ "matureEase1 = ?, "+ "matureEase2 = ?, "+ "matureEase3 = ?, "+ "matureEase4 = ?, "+ "yesCount = ?, "+ "noCount = ?, "+ "spaceUntil = ?, "+ "relativeDelay = 0, "+ "isDue = ?, "+ "type = ?, "+ "combinedDue = ? "+ "WHERE id = ?");
  }
}
