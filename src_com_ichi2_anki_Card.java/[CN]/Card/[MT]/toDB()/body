{
  if (reps == 0)   type=2;
 else   if (successive != 0)   type=1;
 else   type=0;
  ContentValues values=new ContentValues();
  values.put("factId",factId);
  values.put("cardModelId",cardModelId);
  values.put("created",created);
  values.put("modified",modified);
  values.put("tags",tags);
  values.put("ordinal",ordinal);
  values.put("question",question);
  values.put("answer",answer);
  values.put("priority",priority);
  values.put("interval",interval);
  values.put("lastInterval",lastInterval);
  values.put("due",due);
  values.put("lastDue",lastDue);
  values.put("factor",factor);
  values.put("lastFactor",lastFactor);
  values.put("firstAnswered",firstAnswered);
  values.put("reps",reps);
  values.put("successive",successive);
  values.put("averageTime",averageTime);
  values.put("reviewTime",reviewTime);
  values.put("youngEase0",youngEase0);
  values.put("youngEase1",youngEase1);
  values.put("youngEase2",youngEase2);
  values.put("youngEase3",youngEase3);
  values.put("youngEase4",youngEase4);
  values.put("matureEase0",matureEase0);
  values.put("matureEase1",matureEase1);
  values.put("matureEase2",matureEase2);
  values.put("matureEase3",matureEase3);
  values.put("matureEase4",matureEase4);
  values.put("yesCount",yesCount);
  values.put("noCount",noCount);
  values.put("spaceUntil",spaceUntil);
  values.put("isDue",isDue);
  values.put("type",type);
  values.put("combinedDue",Math.max(spaceUntil,due));
  values.put("relativeDelay",0.0);
  double start=System.currentTimeMillis();
  AnkiDatabaseManager.getDatabase(deck.deckPath).database.update("cards",values,"id = ?",new String[]{new Long(id).toString()});
}
