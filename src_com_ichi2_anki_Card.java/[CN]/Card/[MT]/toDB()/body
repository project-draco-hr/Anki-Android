{
  if (mReps == 0) {
    mType=TYPE_NEW;
  }
 else   if (mSuccessive != 0) {
    mType=TYPE_REV;
  }
 else {
    mType=TYPE_FAILED;
  }
  ContentValues values=new ContentValues();
  values.put("factId",mFactId);
  values.put("cardModelId",mCardModelId);
  values.put("created",mCreated);
  values.put("modified",mModified);
  values.put("tags",mTags);
  values.put("ordinal",mOrdinal);
  values.put("question",mQuestion);
  values.put("answer",mAnswer);
  values.put("priority",mPriority);
  values.put("interval",mInterval);
  values.put("lastInterval",mLastInterval);
  values.put("due",mDue);
  values.put("lastDue",mLastDue);
  values.put("factor",mFactor);
  values.put("lastFactor",mLastFactor);
  values.put("firstAnswered",mFirstAnswered);
  values.put("reps",mReps);
  values.put("successive",mSuccessive);
  values.put("averageTime",mAverageTime);
  values.put("reviewTime",mReviewTime);
  values.put("youngEase0",mYoungEase0);
  values.put("youngEase1",mYoungEase1);
  values.put("youngEase2",mYoungEase2);
  values.put("youngEase3",mYoungEase3);
  values.put("youngEase4",mYoungEase4);
  values.put("matureEase0",mMatureEase0);
  values.put("matureEase1",mMatureEase1);
  values.put("matureEase2",mMatureEase2);
  values.put("matureEase3",mMatureEase3);
  values.put("matureEase4",mMatureEase4);
  values.put("yesCount",mYesCount);
  values.put("noCount",mNoCount);
  values.put("spaceUntil",mSpaceUntil);
  values.put("isDue",mIsDue);
  values.put("type",mType);
  values.put("combinedDue",Math.max(mSpaceUntil,mDue));
  values.put("relativeDelay",0.0);
  AnkiDatabaseManager.getDatabase(mDeck.getDeckPath()).getDatabase().update("cards",values,"id = " + mId,null);
}
