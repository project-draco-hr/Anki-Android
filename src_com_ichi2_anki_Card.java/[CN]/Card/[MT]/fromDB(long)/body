{
  Cursor cursor=null;
  try {
    cursor=AnkiDatabaseManager.getDatabase(deck.deckPath).database.rawQuery("SELECT id, factId, cardModelId, created, modified, tags, " + "ordinal, question, answer, priority, interval, lastInterval, " + "due, lastDue, factor, lastFactor, firstAnswered, reps, "+ "successive, averageTime, reviewTime, youngEase0, youngEase1, "+ "youngEase2, youngEase3, youngEase4, matureEase0, matureEase1, "+ "matureEase2, matureEase3, matureEase4, yesCount, noCount, "+ "spaceUntil, isDue, type, combinedDue "+ "FROM cards "+ "WHERE id = "+ id,null);
    if (!cursor.moveToFirst()) {
      Log.w("anki","Card.java (fromDB(id)): No result from query.");
      return false;
    }
    this.id=cursor.getLong(0);
    factId=cursor.getLong(1);
    cardModelId=cursor.getLong(2);
    created=cursor.getDouble(3);
    modified=cursor.getDouble(4);
    tags=cursor.getString(5);
    ordinal=cursor.getInt(6);
    question=cursor.getString(7);
    answer=cursor.getString(8);
    priority=cursor.getInt(9);
    interval=cursor.getDouble(10);
    lastInterval=cursor.getDouble(11);
    due=cursor.getDouble(12);
    lastDue=cursor.getDouble(13);
    factor=cursor.getDouble(14);
    lastFactor=cursor.getDouble(15);
    firstAnswered=cursor.getDouble(16);
    reps=cursor.getInt(17);
    successive=cursor.getInt(18);
    averageTime=cursor.getDouble(19);
    reviewTime=cursor.getDouble(20);
    youngEase0=cursor.getInt(21);
    youngEase1=cursor.getInt(22);
    youngEase2=cursor.getInt(23);
    youngEase3=cursor.getInt(24);
    youngEase4=cursor.getInt(25);
    matureEase0=cursor.getInt(26);
    matureEase1=cursor.getInt(27);
    matureEase2=cursor.getInt(28);
    matureEase3=cursor.getInt(29);
    matureEase4=cursor.getInt(30);
    yesCount=cursor.getInt(31);
    noCount=cursor.getInt(32);
    spaceUntil=cursor.getDouble(33);
    isDue=cursor.getInt(34);
    type=cursor.getInt(35);
    combinedDue=cursor.getDouble(36);
  }
  finally {
    if (cursor != null) {
      cursor.close();
    }
  }
  return true;
}
