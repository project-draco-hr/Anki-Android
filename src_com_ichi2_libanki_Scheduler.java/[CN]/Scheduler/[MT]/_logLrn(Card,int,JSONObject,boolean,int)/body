{
  int taken;
  try {
    taken=Math.min(card.timeTaken(),_cardConf(card).getInt("maxTaken") * 1000);
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  int lastIvl=-(_delayForGrade(conf,Math.max(0,card.getGrade() - 1)));
  int ivl;
  if (leaving) {
    ivl=card.getIvl();
  }
 else {
    ivl=-_delayForGrade(conf,card.getGrade());
  }
  int time=(int)(Utils.now() * 1000);
  try {
    log(time,card.getId(),ease,ivl,lastIvl,card.getFactor(),taken,type);
  }
 catch (  SQLiteConstraintException e) {
    log(time + 10,card.getId(),ease,ivl,lastIvl,card.getFactor(),taken,type);
  }
}
