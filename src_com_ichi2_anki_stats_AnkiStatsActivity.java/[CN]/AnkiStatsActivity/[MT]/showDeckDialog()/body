{
  AlertDialog.Builder builder=new AlertDialog.Builder(this);
  LayoutInflater layoutInflater=LayoutInflater.from(this);
  View view=layoutInflater.inflate(R.layout.action_view_spinner,null);
  builder.setIcon(android.R.drawable.ic_input_get);
  builder.setView(view);
  builder.setTitle(getResources().getString(R.string.stats_select_decks));
  mDropDownDecks=AnkiDroidApp.getCol().getDecks().allSorted();
  mDropDownAdapter=new DeckDropDownAdapter(this,mDropDownDecks);
  mDeckSpinner=(Spinner)((RelativeLayout)view).getChildAt(0);
  mDeckSpinner.setAdapter(mDropDownAdapter);
  if (!AnkiStatsTaskHandler.isWholeCollection()) {
    String currentDeckName;
    try {
      currentDeckName=AnkiDroidApp.getCol().getDecks().current().getString("name");
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
    for (int dropDownDeckIdx=0; dropDownDeckIdx < mDropDownDecks.size(); dropDownDeckIdx++) {
      JSONObject deck=mDropDownDecks.get(dropDownDeckIdx);
      String deckName;
      try {
        deckName=deck.getString("name");
      }
 catch (      JSONException e) {
        throw new RuntimeException();
      }
      if (deckName.equals(currentDeckName)) {
        mDeckSpinner.setSelection(dropDownDeckIdx + 1,false);
        break;
      }
    }
  }
 else {
    mDeckSpinner.setSelection(0,false);
  }
  final boolean isWholeCollection=mIsWholeCollection;
  final long currentDeckId=mDeckId;
  mDeckSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parentView,    View selectedItemView,    int position,    long id){
      if (position == 0) {
        mIsWholeCollection=true;
      }
 else {
        JSONObject deck=mDropDownDecks.get(position - 1);
        Long deckId;
        try {
          deckId=deck.getLong("id");
        }
 catch (        JSONException e) {
          throw new RuntimeException();
        }
        mIsWholeCollection=false;
        mDeckId=deckId;
      }
    }
    @Override public void onNothingSelected(    AdapterView<?> parentView){
    }
  }
);
  builder.setPositiveButton(getResources().getString(R.string.dialog_ok),new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int id){
      AnkiStatsTaskHandler.setIsWholeCollection(mIsWholeCollection);
      if (!mIsWholeCollection)       AnkiDroidApp.getCol().getDecks().select(mDeckId);
      mSectionsPagerAdapter.notifyDataSetChanged();
    }
  }
);
  builder.setNegativeButton(getResources().getString(R.string.dialog_cancel),new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int id){
      mIsWholeCollection=isWholeCollection;
      mDeckId=currentDeckId;
      dialog.cancel();
      dialog.dismiss();
    }
  }
);
  AlertDialog alert=builder.create();
  alert.show();
}
