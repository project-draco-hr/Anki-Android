{
  Log.i(AnkiDroidApp.TAG,"Info - onCreate()");
  Themes.applyTheme(this);
  super.onCreate(savedInstanceState);
  Resources res=getResources();
  mType=getIntent().getIntExtra(TYPE_EXTRA,TYPE_ABOUT);
  setTitle(getTitleString());
  setContentView(R.layout.info);
  mWebView=(WebView)findViewById(R.id.info);
  mWebView.setBackgroundColor(res.getColor(Themes.getBackgroundColor()));
  Themes.setWallpaper((View)mWebView.getParent().getParent().getParent());
  Button continueButton=(Button)findViewById(R.id.info_continue);
  continueButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View arg0){
      if (mType == TYPE_ABOUT) {
        Info.this.startActivity(new Intent(Intent.ACTION_VIEW,Uri.parse("market://details?id=com.ichi2.anki")));
        return;
      }
      setResult(RESULT_OK);
switch (mType) {
case TYPE_WELCOME:
        AnkiDroidApp.getSharedPrefs(Info.this.getBaseContext()).edit().putLong("lastTimeOpened",System.currentTimeMillis()).commit();
      break;
case TYPE_NEW_VERSION:
    AnkiDroidApp.getSharedPrefs(Info.this.getBaseContext()).edit().putString("lastVersion",AnkiDroidApp.getPkgVersion()).commit();
  break;
case TYPE_UPGRADE_DECKS:
break;
}
finishWithAnimation();
}
}
);
StringBuilder sb=new StringBuilder();
switch (mType) {
case TYPE_ABOUT:
String[] content=res.getStringArray(R.array.about_content);
sb.append("<html><body text=\"#000000\" link=\"#E37068\" alink=\"#E37068\" vlink=\"#E37068\">");
sb.append(String.format(content[0],res.getString(R.string.app_name),res.getString(R.string.link_anki))).append("<br/><br/>");
sb.append(String.format(content[1],res.getString(R.string.link_issue_tracker),res.getString(R.string.link_wiki),res.getString(R.string.link_forum))).append("<br/><br/>");
sb.append(String.format(content[2],res.getString(R.string.link_wikipedia_open_source),res.getString(R.string.link_contribution),res.getString(R.string.link_contribution_contributors))).append(" ");
sb.append(String.format(content[3],res.getString(R.string.link_translation),res.getString(R.string.link_donation))).append("<br/><br/>");
sb.append(String.format(content[4],res.getString(R.string.licence_wiki),res.getString(R.string.link_source))).append("<br/><br/>");
sb.append("</body></html>");
mWebView.loadDataWithBaseURL("",sb.toString(),"text/html","utf-8",null);
((Button)findViewById(R.id.info_continue)).setText(res.getString(R.string.info_rate));
break;
case TYPE_WELCOME:
sb.append("<html><body text=\"#000000\" link=\"#E37068\" alink=\"#E37068\" vlink=\"#E37068\">");
sb.append("<big><b>");
sb.append(res.getString(R.string.studyoptions_welcome_title));
sb.append("</big></b><br><br>");
sb.append(res.getString(R.string.welcome_message).replace("\n","<br>"));
sb.append("</body></html>");
mWebView.loadDataWithBaseURL("",sb.toString(),"text/html","utf-8",null);
Button tutBut=(Button)findViewById(R.id.info_tutorial);
tutBut.setVisibility(View.VISIBLE);
tutBut.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
setResult(RESULT_OK);
Editor edit=AnkiDroidApp.getSharedPrefs(Info.this.getBaseContext()).edit();
edit.putLong("lastTimeOpened",System.currentTimeMillis());
edit.putBoolean("createTutorial",true);
edit.commit();
finishWithAnimation();
}
}
);
break;
case TYPE_NEW_VERSION:
sb.append(res.getString(R.string.new_version_message));
sb.append("<ul>");
String[] features=res.getStringArray(R.array.new_version_features);
for (int i=0; i < features.length; i++) {
sb.append("<li>");
sb.append(features[i]);
sb.append("</li>");
}
sb.append("</ul>");
sb.append("</body></html>");
mWebView.loadDataWithBaseURL("",sb.toString(),"text/html","utf-8",null);
AnkiDroidApp.getSharedPrefs(Info.this.getBaseContext()).edit().putBoolean("sslAcceptAll",false).commit();
break;
case TYPE_SHARED_DECKS:
mLoadingLayer=(RelativeLayout)findViewById(R.id.info_loading_layer);
mLoadingLayer.setVisibility(View.VISIBLE);
try {
mShareDecksTemplate=Utils.convertStreamToString(getAssets().open("shared_decks_template.html"));
}
 catch (IOException e) {
e.printStackTrace();
}
mWebView.setWebViewClient(new MobileAnkiWebview());
mWebView.loadUrl(res.getString(R.string.shared_decks_url));
mWebView.getSettings().setJavaScriptEnabled(true);
continueButton.setText(res.getString(R.string.download_button_return));
break;
case TYPE_UPGRADE_DECKS:
sb.append("<html><body>");
Button but=(Button)findViewById(R.id.info_tutorial);
but.setVisibility(View.VISIBLE);
Button syncButton=(Button)findViewById(R.id.info_sync);
syncButton.setVisibility(View.VISIBLE);
mUpgradeStage=getIntent().getIntExtra(TYPE_UPGRADE_STAGE,-1);
switch (mUpgradeStage) {
case UPGRADE_SCREEN_BASIC1:
sb.append(getString(R.string.deck_upgrade_major_warning));
but.setText(R.string.later);
but.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Themes.showThemedToast(Info.this,getString(R.string.deck_upgrade_start_again_to_upgrade_toast),false);
setResult(RESULT_CANCELED);
finish();
}
}
);
syncButton.setText(R.string.more_options);
syncButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_MORE_OPTIONS);
setResult(RESULT_OK,result);
finishWithAnimation();
}
}
);
continueButton.setText(R.string.now);
continueButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_BASIC2);
setResult(RESULT_OK,result);
finishWithAnimation();
}
}
);
break;
case UPGRADE_SCREEN_BASIC2:
sb.append(getString(R.string.deck_upgrade_recommended_method));
but.setText(R.string.back);
but.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_BASIC1);
result.putExtra(TYPE_ANIMATION_RIGHT,true);
setResult(RESULT_OK,result);
finishWithAnimation(false);
}
}
);
syncButton.setText(R.string.no);
syncButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_WEB_UPGRADE);
setResult(RESULT_OK,result);
finishWithAnimation();
}
}
);
continueButton.setText(R.string.yes);
continueButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_PC_UPGRADE);
setResult(RESULT_OK,result);
finishWithAnimation();
}
}
);
break;
case UPGRADE_SCREEN_MORE_OPTIONS:
sb.append(getString(R.string.deck_upgrade_more_options));
but.setText(R.string.upgrade_decks_button);
but.setText(R.string.back);
but.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_BASIC1);
result.putExtra(TYPE_ANIMATION_RIGHT,true);
setResult(RESULT_OK,result);
finishWithAnimation(false);
}
}
);
syncButton.setText(R.string.deck_upgrade_create_new_collection);
syncButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
StyledDialog.Builder builder=new StyledDialog.Builder(Info.this);
builder.setTitle(R.string.deck_upgrade_create_new_collection_title);
builder.setIcon(R.drawable.ic_dialog_alert);
builder.setMessage(R.string.deck_upgrade_not_import_warning);
Resources res=getResources();
builder.setPositiveButton(R.string.yes,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_CONTINUE);
setResult(RESULT_OK,result);
finishWithAnimation();
}
}
);
builder.setNegativeButton(R.string.no,null);
builder.show();
}
}
);
continueButton.setVisibility(View.GONE);
break;
case UPGRADE_SCREEN_WEB_UPGRADE:
sb.append(getString(R.string.deck_upgrade_via_web));
but.setText(R.string.back);
but.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_BASIC2);
result.putExtra(TYPE_ANIMATION_RIGHT,true);
setResult(RESULT_OK,result);
finishWithAnimation(false);
}
}
);
syncButton.setVisibility(View.GONE);
continueButton.setText(R.string.yes);
continueButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
lockScreenOrientation();
Connection.upgradeDecks(mWebUpgradeListener,new Connection.Payload(new Object[]{AnkiDroidApp.getCurrentAnkiDroidDirectory()}));
}
}
);
break;
case UPGRADE_SCREEN_PC_UPGRADE:
sb.append(getString(R.string.deck_upgrade_via_anki_desktop));
but.setText(R.string.back);
but.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_BASIC2);
result.putExtra(TYPE_ANIMATION_RIGHT,true);
setResult(RESULT_OK,result);
finishWithAnimation(false);
}
}
);
syncButton.setText(R.string.usb);
syncButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_MANUAL_UPGRADE);
setResult(RESULT_OK,result);
finishWithAnimation();
}
}
);
continueButton.setText(R.string.ankiweb);
continueButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_AUTO_UPGRADE);
setResult(RESULT_OK,result);
finishWithAnimation();
}
}
);
break;
case UPGRADE_SCREEN_MANUAL_UPGRADE:
sb.append(getString(R.string.deck_upgrade_manual));
but.setText(R.string.back);
but.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_BASIC2);
result.putExtra(TYPE_ANIMATION_RIGHT,true);
setResult(RESULT_OK,result);
finishWithAnimation(false);
}
}
);
syncButton.setText(R.string._import);
syncButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
File apkgFile=new File(AnkiDroidApp.getCurrentAnkiDroidDirectory(),DeckPicker.IMPORT_REPLACE_COLLECTION_NAME);
List<File> importables=Utils.getImportableDecks();
if (importables == null || !importables.contains(apkgFile)) {
Themes.showThemedToast(Info.this,getResources().getString(R.string.upgrade_import_no_file_found,DeckPicker.IMPORT_REPLACE_COLLECTION_NAME),false);
}
 else {
lockScreenOrientation();
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_IMPORT_REPLACE,mUpgradeImportListener,new DeckTask.TaskData(AnkiDroidApp.getCol(),apkgFile.getAbsolutePath()));
}
}
}
);
continueButton.setVisibility(View.GONE);
break;
case UPGRADE_SCREEN_AUTO_UPGRADE:
sb.append(getString(R.string.deck_upgrade_auto_upgrade));
but.setText(R.string.back);
but.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
Intent result=new Intent();
result.putExtra(TYPE_UPGRADE_STAGE,UPGRADE_SCREEN_PC_UPGRADE);
result.putExtra(TYPE_ANIMATION_RIGHT,true);
setResult(RESULT_OK,result);
finishWithAnimation(false);
}
}
);
syncButton.setText(R.string.download);
syncButton.setOnClickListener(new OnClickListener(){
@Override public void onClick(View arg0){
lockScreenOrientation();
downloadCollection();
}
}
);
continueButton.setVisibility(View.GONE);
break;
}
sb.append("</body></html>");
mWebView.loadDataWithBaseURL("",sb.toString(),"text/html","utf-8",null);
StyledDialog.Builder builder2=new StyledDialog.Builder(this);
builder2.setTitle(res.getString(R.string.connection_error_title));
builder2.setIcon(R.drawable.ic_dialog_alert);
builder2.setMessage(res.getString(R.string.connection_needed));
builder2.setPositiveButton(res.getString(R.string.ok),null);
mNoConnectionAlert=builder2.create();
break;
default :
finish();
break;
}
}
