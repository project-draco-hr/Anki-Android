{
  StyledDialog dialog=null;
  Resources res=getResources();
  StyledDialog.Builder builder=new StyledDialog.Builder(this);
switch (id) {
case DIALOG_USER_NOT_LOGGED_IN_SYNC:
    builder.setTitle(R.string.not_logged_in_title);
  builder.setIcon(R.drawable.ic_dialog_alert);
builder.setMessage(R.string.login_create_account_message);
builder.setNegativeButton(R.string.dialog_cancel,null);
builder.setPositiveButton(R.string.log_in,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
Intent myAccount=new Intent(Info.this,MyAccount.class);
myAccount.putExtra("notLoggedIn",true);
startActivityForResult(myAccount,LOG_IN_FOR_SYNC);
ActivityTransitionAnimation.slide(Info.this,ActivityTransitionAnimation.FADE);
}
}
);
dialog=builder.create();
break;
case DIALOG_UPGRADE_ERROR:
builder.setTitle(R.string.import_title);
builder.setPositiveButton(R.string.dialog_ok,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialogInterface,int i){
setResult(RESULT_CANCELED);
finishWithAnimation();
}
}
);
dialog=builder.create();
break;
case DIALOG_SYNC_LOG:
builder.setPositiveButton(R.string.dialog_ok,null);
dialog=builder.create();
break;
case DIALOG_SYNC_UPGRADE_REQUIRED:
builder.setMessage(res.getString(R.string.upgrade_required,res.getString(R.string.link_anki)));
builder.setPositiveButton(R.string.retry,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
downloadCollection();
}
}
);
builder.setNegativeButton(R.string.dialog_cancel,null);
dialog=builder.create();
break;
}
return dialog;
}
