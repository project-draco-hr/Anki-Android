{
  StyledDialog dialog=null;
  Resources res=getResources();
  StyledDialog.Builder builder=new StyledDialog.Builder(this);
switch (id) {
case DIALOG_USER_NOT_LOGGED_IN_SYNC:
    builder.setTitle(res.getString(R.string.connection_error_title));
  builder.setIcon(R.drawable.ic_dialog_alert);
builder.setMessage(res.getString(R.string.no_user_password_error_message));
builder.setNegativeButton(res.getString(R.string.cancel),null);
builder.setPositiveButton(res.getString(R.string.log_in),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
Intent myAccount=new Intent(Info.this,MyAccount.class);
myAccount.putExtra("notLoggedIn",true);
startActivityForResult(myAccount,LOG_IN_FOR_SYNC);
if (AnkiDroidApp.SDK_VERSION > 4) {
  ActivityTransitionAnimation.slide(Info.this,ActivityTransitionAnimation.FADE);
}
}
}
);
dialog=builder.create();
break;
case DIALOG_SYNC_LOG:
builder.setTitle(res.getString(R.string.sync_log_title));
builder.setPositiveButton(res.getString(R.string.ok),null);
dialog=builder.create();
break;
case DIALOG_SYNC_UPGRADE_REQUIRED:
builder.setMessage(res.getString(R.string.upgrade_required,res.getString(R.string.link_anki)));
builder.setPositiveButton(res.getString(R.string.retry),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
downloadCollection();
}
}
);
builder.setNegativeButton(res.getString(R.string.cancel),null);
builder.setTitle(res.getString(R.string.sync_log_title));
dialog=builder.create();
break;
}
return dialog;
}
