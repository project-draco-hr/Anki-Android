{
  PreferenceScreen screen;
switch (action) {
case "com.ichi2.anki.prefs.general":
    listener.addPreferencesFromResource(R.xml.preferences_general);
  screen=listener.getPreferenceScreen();
initializeLanguageDialog(screen);
break;
case "com.ichi2.anki.prefs.reviewing":
listener.addPreferencesFromResource(R.xml.preferences_reviewing);
screen=listener.getPreferenceScreen();
ListPreference fullscreenPreference=(ListPreference)screen.findPreference("fullscreenMode");
fullscreenPreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
public boolean onPreferenceChange(Preference preference,final Object newValue){
SharedPreferences prefs=AnkiDroidApp.getSharedPrefs(Preferences.this);
if (prefs.getBoolean("gestures",false) || !newValue.equals("2")) {
return true;
}
 else {
Toast.makeText(getApplicationContext(),R.string.full_screen_error_gestures,Toast.LENGTH_LONG).show();
return false;
}
}
}
);
Preference customButtonsPreference=screen.findPreference("custom_buttons_link");
customButtonsPreference.setOnPreferenceClickListener(new OnPreferenceClickListener(){
public boolean onPreferenceClick(Preference preference){
Intent i=CompatHelper.getCompat().getPreferenceSubscreenIntent(Preferences.this,"com.ichi2.anki.prefs.custom_buttons");
startActivity(i);
return true;
}
}
);
break;
case "com.ichi2.anki.prefs.appearance":
listener.addPreferencesFromResource(R.xml.preferences_appearance);
screen=listener.getPreferenceScreen();
initializeCustomFontsDialog(screen);
break;
case "com.ichi2.anki.prefs.gestures":
listener.addPreferencesFromResource(R.xml.preferences_gestures);
break;
case "com.ichi2.anki.prefs.custom_buttons":
getSupportActionBar().setTitle(R.string.custom_buttons);
listener.addPreferencesFromResource(R.xml.preferences_custom_buttons);
screen=listener.getPreferenceScreen();
Preference reset_custom_buttons=screen.findPreference("reset_custom_buttons");
reset_custom_buttons.setOnPreferenceClickListener(new OnPreferenceClickListener(){
public boolean onPreferenceClick(Preference preference){
SharedPreferences.Editor edit=AnkiDroidApp.getSharedPrefs(getBaseContext()).edit();
edit.remove("customButtonUndo");
edit.remove("customButtonMarkCard");
edit.remove("customButtonEditCard");
edit.remove("customButtonAddCard");
edit.remove("customButtonReplay");
edit.remove("customButtonBury");
edit.remove("customButtonSuspend");
edit.remove("customButtonDelete");
edit.remove("customButtonEnableWhiteboard");
edit.remove("customButtonClearWhiteboard");
edit.remove("customButtonShowHideWhiteboard");
edit.remove("customButtonSelectTts");
edit.remove("customButtonDeckOptions");
edit.apply();
return true;
}
}
);
break;
case "com.ichi2.anki.prefs.advanced":
listener.addPreferencesFromResource(R.xml.preferences_advanced);
screen=listener.getPreferenceScreen();
EditTextPreference collectionPathPreference=(EditTextPreference)screen.findPreference("deckPath");
collectionPathPreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
public boolean onPreferenceChange(Preference preference,final Object newValue){
final String newPath=(String)newValue;
try {
CollectionHelper.initializeAnkiDroidDirectory(newPath);
return true;
}
 catch (StorageAccessException e) {
Timber.e(e,"Could not initialize directory: %s",newPath);
Toast.makeText(getApplicationContext(),R.string.dialog_collection_path_not_dir,Toast.LENGTH_LONG).show();
return false;
}
}
}
);
Preference customSyncServerPreference=screen.findPreference("custom_sync_server_link");
customSyncServerPreference.setOnPreferenceClickListener(new OnPreferenceClickListener(){
public boolean onPreferenceClick(Preference preference){
Intent i=CompatHelper.getCompat().getPreferenceSubscreenIntent(Preferences.this,"com.ichi2.anki.prefs.custom_sync_server");
startActivity(i);
return true;
}
}
);
Preference advancedStatisticsPreference=screen.findPreference("advanced_statistics_link");
advancedStatisticsPreference.setOnPreferenceClickListener(new OnPreferenceClickListener(){
public boolean onPreferenceClick(Preference preference){
Intent i=CompatHelper.getCompat().getPreferenceSubscreenIntent(Preferences.this,"com.ichi2.anki.prefs.advanced_statistics");
startActivity(i);
return true;
}
}
);
Preference fullSyncPreference=screen.findPreference("force_full_sync");
fullSyncPreference.setOnPreferenceClickListener(new OnPreferenceClickListener(){
public boolean onPreferenceClick(Preference preference){
getCol().modSchemaNoCheck();
getCol().setMod();
Toast.makeText(getApplicationContext(),android.R.string.ok,Toast.LENGTH_SHORT).show();
return true;
}
}
);
removeUnnecessaryAdvancedPrefs(screen);
break;
case "com.ichi2.anki.prefs.custom_sync_server":
getSupportActionBar().setTitle(R.string.custom_sync_server_title);
listener.addPreferencesFromResource(R.xml.preferences_custom_sync_server);
break;
case "com.ichi2.anki.prefs.advanced_statistics":
getSupportActionBar().setTitle(R.string.advanced_statistics_title);
listener.addPreferencesFromResource(R.xml.preferences_advanced_statistics);
break;
}
}
