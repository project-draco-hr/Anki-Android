{
  Themes.applyTheme(this);
  super.onCreate(savedInstanceState);
  restorePreferences();
  Resources res=getResources();
  Stats stats=Stats.currentStats();
  if (stats != null) {
    mSeriesList=stats.getSeriesList();
    mMeta=stats.getMetaInfo();
  }
 else   if (savedInstanceState != null) {
    int len=savedInstanceState.getInt("seriesListLen");
    mSeriesList=new double[len][];
    for (int i=0; i < len; i++) {
      mSeriesList[i]=(double[])savedInstanceState.getSerializable("seriesList" + i);
    }
    mMeta=(Object[])savedInstanceState.getSerializable("meta");
  }
 else {
    finish();
  }
  String title=res.getString((Integer)mMeta[1]);
  boolean backwards=(Boolean)mMeta[2];
  int[] valueLabels=(int[])mMeta[3];
  int[] barColors=(int[])mMeta[4];
  int[] axisTitles=(int[])mMeta[5];
  String subTitle=(String)mMeta[6];
  if (mSeriesList == null || mSeriesList[0].length < 2) {
    finish();
    return;
  }
  View mainView=getLayoutInflater().inflate(R.layout.statistics,null);
  setContentView(mainView);
  mainView.setBackgroundColor(Color.WHITE);
  if (mChartView == null) {
    setTitle(title);
    AnkiDroidApp.getCompat().setSubtitle(this,subTitle);
    for (int i=1; i < mSeriesList.length; i++) {
      XYSeries series=new XYSeries(res.getString(valueLabels[i - 1]));
      for (int j=0; j < mSeriesList[i].length; j++) {
        series.add(mSeriesList[0][j],mSeriesList[i][j]);
      }
      mDataset.addSeries(series);
      XYSeriesRenderer renderer=new XYSeriesRenderer();
      renderer.setColor(res.getColor(barColors[i - 1]));
      mRenderer.addSeriesRenderer(renderer);
    }
    if (mSeriesList.length == 1) {
      mRenderer.setShowLegend(false);
    }
    if (backwards) {
      mPan=new double[]{mSeriesList[0][0] - 0.5,0.5};
    }
 else {
      mPan=new double[]{-0.5,mSeriesList[0][mSeriesList[0].length - 1] + 0.5};
    }
    mRenderer.setLegendTextSize(17);
    mRenderer.setBarSpacing(0.4);
    mRenderer.setLegendHeight(60);
    mRenderer.setAxisTitleTextSize(17);
    mRenderer.setLabelsTextSize(17);
    mRenderer.setXAxisMin(mPan[0]);
    mRenderer.setXAxisMax(mPan[1]);
    mRenderer.setYAxisMin(0);
    mRenderer.setGridColor(Color.LTGRAY);
    mRenderer.setShowGrid(true);
    mRenderer.setXTitle(res.getStringArray(R.array.due_x_axis_title)[axisTitles[0]]);
    mRenderer.setYTitle(res.getString(axisTitles[1]));
    mRenderer.setBackgroundColor(Color.WHITE);
    mRenderer.setMarginsColor(Color.WHITE);
    mRenderer.setAxesColor(Color.BLACK);
    mRenderer.setLabelsColor(Color.BLACK);
    mRenderer.setYLabelsColor(0,Color.BLACK);
    mRenderer.setYLabelsAngle(-90);
    mRenderer.setXLabelsColor(Color.BLACK);
    mRenderer.setXLabelsAlign(Align.CENTER);
    mRenderer.setYLabelsAlign(Align.CENTER);
    mRenderer.setZoomEnabled(false,false);
    mRenderer.setMargins(new int[]{15,48,30,10});
    mRenderer.setAntialiasing(true);
    mRenderer.setPanEnabled(true,false);
    mRenderer.setPanLimits(mPan);
    mChartView=ChartFactory.getBarChartView(this,mDataset,mRenderer,BarChart.Type.STACKED);
    FrameLayout layout=(FrameLayout)findViewById(R.id.chart);
    layout.addView(mChartView);
  }
 else {
    mChartView.repaint();
  }
  gestureDetector=new GestureDetector(new MyGestureDetector());
  mChartView.setOnTouchListener(new View.OnTouchListener(){
    public boolean onTouch(    View v,    MotionEvent event){
      return gestureDetector.onTouchEvent(event);
    }
  }
);
}
