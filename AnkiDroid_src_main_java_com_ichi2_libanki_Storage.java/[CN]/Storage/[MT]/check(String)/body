{
  AnkiDb db=AnkiDatabaseManager.getDatabase(path);
  try {
    if (!db.queryString("PRAGMA integrity_check").equalsIgnoreCase("ok")) {
      return false;
    }
  }
 catch (  SQLException _) {
    return false;
  }
  if (db.queryScalar("SELECT version FROM decks") < 65) {
    return false;
  }
  db.execute("create index if not exists ix_cards_factId on cards (factId)");
  db.execute("create index if not exists ix_fields_factId on fieldModels (factId)");
  db.execute("analyze");
  if (db.queryColumn(Integer.class,"select id from fields where fieldModelId not in (" + "select distinct id from fieldModels)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select distinct facts.id from facts, fieldModels where " + "facts.modelId = fieldModels.modelId and fieldModels.id not in " + "(select fieldModelId from fields where factId = facts.id)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select id from cards where factId not in (select id from facts)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select id from cards where cardModelId not in (select id from cardModels)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select id from cards where cardModelId not in (select cm.id from " + "cardModels cm, facts f where cm.modelId = f.modelId and " + "f.id = cards.factId)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select facts.id from facts " + "where facts.id not in (select distinct factId from cards)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select id from fields where factId not in (select id from facts)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select id from fields where ordinal != (select ordinal from fieldModels " + "where id = fieldModelId)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select id from cards where relativeDelay != (case " + "when successive then 1 when reps then 0 else 2 end)",0).size() > 0) {
    return false;
  }
  if (db.queryColumn(Integer.class,"select id from cards where type != (case " + "when type >= 0 then relativeDelay else relativeDelay - 3 end)",0).size() > 0) {
    return false;
  }
  return true;
}
