{
  super.onCreate(savedInstanceState);
  mType=getArguments().getInt("dialogType");
  Resources res=getResources();
  StyledDialog.Builder builder=new StyledDialog.Builder(getActivity());
  setCancelable(true);
switch (mType) {
case DIALOG_LOAD_FAILED:
    setCancelable(false);
  builder.setMessage(res.getString(R.string.open_collection_failed_message,BackupManager.BROKEN_DECKS_SUFFIX,res.getString(R.string.repair_deck)));
builder.setTitle(R.string.open_collection_failed_title);
builder.setIcon(R.drawable.ic_dialog_alert);
builder.setPositiveButton(res.getString(R.string.error_handling_options),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_ERROR_HANDLING);
}
}
);
builder.setNegativeButton(res.getString(R.string.close),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).exit();
}
}
);
return builder.create();
case DIALOG_DB_ERROR:
setCancelable(false);
builder.setMessage(R.string.answering_error_message);
builder.setTitle(R.string.answering_error_title);
builder.setIcon(R.drawable.ic_dialog_alert);
builder.setPositiveButton(res.getString(R.string.error_handling_options),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_ERROR_HANDLING);
}
}
);
builder.setNeutralButton(res.getString(R.string.answering_error_report),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).sendErrorReport();
dismissAllDialogFragments();
}
}
);
builder.setNegativeButton(res.getString(R.string.close),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).exit();
}
}
);
StyledDialog d=builder.create();
d.getButton(DialogInterface.BUTTON_NEUTRAL).setEnabled(((DatabaseErrorDialogListener)getActivity()).hasErrorFiles());
return d;
case DIALOG_ERROR_HANDLING:
builder.setTitle(res.getString(R.string.error_handling_title));
builder.setIcon(R.drawable.ic_dialog_alert);
builder.setSingleChoiceItems(new String[]{"1"},0,null);
builder.setNegativeButton(res.getString(R.string.dialog_cancel),null);
StyledDialog dialog=builder.create();
ArrayList<String> options=new ArrayList<String>();
ArrayList<Integer> values=new ArrayList<Integer>();
if (AnkiDroidApp.getCol() == null) {
options.add(res.getString(R.string.backup_retry_opening));
values.add(0);
}
 else {
options.add(res.getString(R.string.check_db));
values.add(1);
}
options.add(res.getString(R.string.backup_error_menu_repair));
values.add(2);
options.add(res.getString(R.string.backup_restore));
values.add(3);
options.add(res.getString(R.string.backup_full_sync_from_server));
values.add(4);
options.add(res.getString(R.string.backup_del_collection));
values.add(5);
String[] titles=new String[options.size()];
mRepairValues=new int[options.size()];
for (int i=0; i < options.size(); i++) {
titles[i]=options.get(i);
mRepairValues[i]=values.get(i);
}
dialog.setItems(titles,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
switch (mRepairValues[which]) {
case 0:
((DatabaseErrorDialogListener)getActivity()).startLoadingCollection();
return;
case 1:
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_CONFIRM_DATABASE_CHECK);
return;
case 2:
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_REPAIR_COLLECTION);
return;
case 3:
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_RESTORE_BACKUP);
return;
case 4:
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_FULL_SYNC_FROM_SERVER);
return;
case 5:
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_NEW_COLLECTION);
return;
}
}
}
);
return dialog;
case DIALOG_REPAIR_COLLECTION:
builder.setTitle(res.getString(R.string.backup_repair_deck));
builder.setMessage(res.getString(R.string.repair_deck_dialog,BackupManager.BROKEN_DECKS_SUFFIX));
builder.setIcon(R.drawable.ic_dialog_alert);
builder.setPositiveButton(res.getString(R.string.dialog_positive_repair),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).repairDeck();
dismissAllDialogFragments();
}
}
);
builder.setNegativeButton(res.getString(R.string.dialog_cancel),null);
return builder.create();
case DIALOG_RESTORE_BACKUP:
File[] files=BackupManager.getBackups(new File(AnkiDroidApp.getCollectionPath()));
mBackups=new File[files.length];
for (int i=0; i < files.length; i++) {
mBackups[i]=files[files.length - 1 - i];
}
if (mBackups.length == 0) {
builder.setTitle(getResources().getString(R.string.backup_restore));
builder.setMessage(res.getString(R.string.backup_restore_no_backups));
builder.setPositiveButton(res.getString(R.string.dialog_ok),new Dialog.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_ERROR_HANDLING);
}
}
);
}
 else {
String[] dates=new String[mBackups.length];
for (int i=0; i < mBackups.length; i++) {
dates[i]=mBackups[i].getName().replaceAll(".*-(\\d{4}-\\d{2}-\\d{2})-(\\d{2})-(\\d{2}).apkg","$1 ($2:$3 h)");
}
builder.setTitle(res.getString(R.string.backup_restore_select_title));
builder.setIcon(android.R.drawable.ic_input_get);
builder.setSingleChoiceItems(dates,dates.length,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
if (mBackups[which].length() > 0) {
((DatabaseErrorDialogListener)getActivity()).restoreFromBackup(mBackups[which].getPath());
dismissAllDialogFragments();
}
 else {
Dialog invalidFileDialog=new AlertDialog.Builder(getActivity()).setTitle(R.string.backup_error).setMessage(R.string.backup_invalid_file_error).setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
}
}
).create();
invalidFileDialog.show();
}
}
}
);
}
return builder.create();
case DIALOG_NEW_COLLECTION:
builder.setTitle(res.getString(R.string.backup_new_collection));
builder.setMessage(res.getString(R.string.backup_del_collection_question));
builder.setPositiveButton(res.getString(R.string.dialog_positive_create),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
AnkiDroidApp.closeCollection(false);
String path=AnkiDroidApp.getCollectionPath();
AnkiDatabaseManager.closeDatabase(path);
if (BackupManager.moveDatabaseToBrokenFolder(path,false)) {
((DatabaseErrorDialogListener)getActivity()).startLoadingCollection();
}
 else {
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_ERROR_HANDLING);
}
dismissAllDialogFragments();
}
}
);
builder.setNegativeButton(res.getString(R.string.dialog_cancel),null);
return builder.create();
case DIALOG_CONFIRM_DATABASE_CHECK:
builder.setTitle(res.getString(R.string.check_db_title));
builder.setMessage(res.getString(R.string.check_db_warning));
builder.setPositiveButton(res.getString(R.string.dialog_ok),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).integrityCheck();
dismissAllDialogFragments();
}
}
);
builder.setNegativeButton(res.getString(R.string.dialog_cancel),null);
return builder.create();
case DIALOG_CONFIRM_RESTORE_BACKUP:
builder.setTitle(res.getString(R.string.restore_backup_title));
builder.setMessage(res.getString(R.string.restore_backup));
builder.setPositiveButton(res.getString(R.string.dialog_continue),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
((DatabaseErrorDialogListener)getActivity()).showDatabaseErrorDialog(DIALOG_RESTORE_BACKUP);
}
}
);
builder.setNegativeButton(res.getString(R.string.dialog_cancel),null);
return builder.create();
case DIALOG_FULL_SYNC_FROM_SERVER:
builder.setTitle(res.getString(R.string.backup_full_sync_from_server));
builder.setMessage(res.getString(R.string.backup_full_sync_from_server_question));
builder.setPositiveButton(res.getString(R.string.dialog_positive_overwrite),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
DatabaseErrorDialogListener activity=(DatabaseErrorDialogListener)getActivity();
activity.sync("download",activity.getSyncMediaUsn());
dismissAllDialogFragments();
}
}
);
builder.setNegativeButton(res.getString(R.string.dialog_cancel),null);
return builder.create();
default :
return null;
}
}
