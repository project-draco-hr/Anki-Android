{
  File fontfile=new File(path);
  String name=Utils.removeFileExtension(fontfile.getName());
  String family=name;
  List<String> attributes=new ArrayList<>();
  if (fromAssets) {
    path=fAssetPathPrefix.concat(fontfile.getName());
  }
  Typeface tf=getTypeface(ctx,path);
  if (tf == null) {
    return null;
  }
  if (tf.isBold() || name.toLowerCase(Locale.US).contains("bold")) {
    attributes.add("font-weight: bolder;");
    family=family.replaceFirst("(?i)-?Bold","");
  }
 else   if (name.toLowerCase(Locale.US).contains("light")) {
    attributes.add("font-weight: lighter;");
    family=family.replaceFirst("(?i)-?Light","");
  }
 else {
    attributes.add("font-weight: normal;");
  }
  if (tf.isItalic() || name.toLowerCase(Locale.US).contains("italic")) {
    attributes.add("font-style: italic;");
    family=family.replaceFirst("(?i)-?Italic","");
  }
 else   if (name.toLowerCase(Locale.US).contains("oblique")) {
    attributes.add("font-style: oblique;");
    family=family.replaceFirst("(?i)-?Oblique","");
  }
 else {
    attributes.add("font-style: normal;");
  }
  if (name.toLowerCase(Locale.US).contains("condensed") || name.toLowerCase(Locale.US).contains("narrow")) {
    attributes.add("font-stretch: condensed;");
    family=family.replaceFirst("(?i)-?Condensed","");
    family=family.replaceFirst("(?i)-?Narrow(er)?","");
  }
 else   if (name.toLowerCase(Locale.US).contains("expanded") || name.toLowerCase(Locale.US).contains("wide")) {
    attributes.add("font-stretch: expanded;");
    family=family.replaceFirst("(?i)-?Expanded","");
    family=family.replaceFirst("(?i)-?Wide(r)?","");
  }
  AnkiFont createdFont=new AnkiFont(name,family,attributes,path);
  SharedPreferences preferences=AnkiDroidApp.getSharedPrefs(ctx);
  String defaultFont=preferences.getString("defaultFont","");
  boolean overrideFont=preferences.getString("overrideFontBehavior","0").equals("1");
  if (defaultFont.equalsIgnoreCase(name)) {
    if (overrideFont) {
      createdFont.setAsOverride();
    }
 else {
      createdFont.setAsDefault();
    }
  }
  return createdFont;
}
