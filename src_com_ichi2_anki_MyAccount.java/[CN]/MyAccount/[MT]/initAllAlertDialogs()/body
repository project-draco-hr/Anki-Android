{
  Resources res=getResources();
  StyledDialog.Builder builder=new StyledDialog.Builder(this);
  builder.setTitle(res.getString(R.string.connection_error_title));
  builder.setIcon(R.drawable.ic_dialog_alert);
  builder.setMessage(res.getString(R.string.connection_needed));
  builder.setPositiveButton(res.getString(R.string.ok),null);
  mNoConnectionAlert=builder.create();
  builder.setTitle(res.getString(R.string.register_title));
  builder.setIcon(R.drawable.ic_dialog_alert);
  builder.setMessage(res.getString(R.string.register_error));
  builder.setPositiveButton(res.getString(R.string.ok),null);
  mErrorAlert=builder.create();
  builder.setTitle(res.getString(R.string.register_title));
  builder.setIcon(R.drawable.ic_dialog_alert);
  builder.setMessage(res.getString(R.string.register_mismatch));
  builder.setPositiveButton(res.getString(R.string.ok),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      mUsername1.setText("");
      mUsername2.setText("");
      mPassword1.setText("");
      mPassword2.setText("");
    }
  }
);
  mRegisterAlert=builder.create();
  builder=new StyledDialog.Builder(this);
  builder.setTitle(res.getString(R.string.log_in));
  builder.setIcon(R.drawable.ic_dialog_alert);
  builder.setMessage(res.getString(R.string.invalid_username_password));
  builder.setPositiveButton(res.getString(R.string.ok),null);
  mInvalidUserPassAlert=builder.create();
  builder=new StyledDialog.Builder(this);
  builder.setTitle(res.getString(R.string.connection_error_title));
  builder.setIcon(R.drawable.ic_dialog_alert);
  builder.setMessage(res.getString(R.string.connection_error_message));
  builder.setPositiveButton(res.getString(R.string.retry),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      login();
    }
  }
);
  builder.setNegativeButton(res.getString(R.string.cancel),null);
  mConnectionErrorAlert=builder.create();
}
