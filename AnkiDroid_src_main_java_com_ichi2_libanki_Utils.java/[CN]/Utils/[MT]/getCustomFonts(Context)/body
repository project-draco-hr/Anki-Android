{
  String deckPath=CollectionHelper.getCurrentAnkiDroidDirectory(context);
  String fontsPath=deckPath + "/fonts/";
  File fontsDir=new File(fontsPath);
  int fontsCount=0;
  File[] fontsList=null;
  if (fontsDir.exists() && fontsDir.isDirectory()) {
    fontsCount=fontsDir.listFiles().length;
    fontsList=fontsDir.listFiles();
  }
  String[] ankiDroidFonts=null;
  try {
    ankiDroidFonts=context.getAssets().list("fonts");
  }
 catch (  IOException e) {
    Timber.e(e,"Error on retrieving ankidroid fonts");
  }
  List<AnkiFont> fonts=new ArrayList<>();
  for (int i=0; i < fontsCount; i++) {
    String filePath=fontsList[i].getAbsolutePath();
    String filePathExtension=getFileExtension(filePath);
    for (    String fontExtension : FONT_FILE_EXTENSIONS) {
      if (filePathExtension.equalsIgnoreCase(fontExtension)) {
        AnkiFont font=AnkiFont.createAnkiFont(context,filePath,false);
        if (font != null) {
          fonts.add(font);
        }
        break;
      }
    }
  }
  if (ankiDroidFonts != null) {
    for (    String ankiDroidFont : ankiDroidFonts) {
      AnkiFont font=AnkiFont.createAnkiFont(context,ankiDroidFont,true);
      if (font != null) {
        fonts.add(font);
      }
    }
  }
  return fonts;
}
