{
  Log.i(AnkiDroidApp.TAG,"buildUpdate");
  RemoteViews updateViews=new RemoteViews(context.getPackageName(),R.layout.widget);
  Intent ankiDroidIntent=new Intent(context,StudyOptions.class);
  ankiDroidIntent.setAction(Intent.ACTION_MAIN);
  ankiDroidIntent.addCategory(Intent.CATEGORY_LAUNCHER);
  PendingIntent pendingAnkiDroidIntent=PendingIntent.getActivity(context,0,ankiDroidIntent,0);
  updateViews.setOnClickPendingIntent(R.id.anki_droid_logo,pendingAnkiDroidIntent);
  if (!AnkiDroidApp.isSdCardMounted()) {
    updateViews.setTextViewText(R.id.anki_droid_title,context.getText(R.string.sdcard_missing_message));
    updateViews.setTextViewText(R.id.anki_droid_name,"");
    updateViews.setTextViewText(R.id.anki_droid_status,"");
    if (mMountReceiver == null) {
      mMountReceiver=new BroadcastReceiver(){
        @Override public void onReceive(        Context context,        Intent intent){
          String action=intent.getAction();
          if (action.equals(Intent.ACTION_MEDIA_MOUNTED)) {
            Log.i(AnkiDroidApp.TAG,"mMountReceiver - Action = Media Mounted");
            if (remounted) {
              WidgetStatus.update(getBaseContext());
              remounted=false;
              if (mMountReceiver != null) {
                unregisterReceiver(mMountReceiver);
              }
            }
 else {
              remounted=true;
            }
          }
        }
      }
;
      IntentFilter iFilter=new IntentFilter();
      iFilter.addAction(Intent.ACTION_MEDIA_MOUNTED);
      iFilter.addDataScheme("file");
      registerReceiver(mMountReceiver,iFilter);
    }
    return updateViews;
  }
  if (dueDecks == null || updateDueDecksNow) {
    updateDueDecks();
  }
  if (dueCardsCount > 0) {
    Resources resources=getResources();
    String decksText=resources.getQuantityString(R.plurals.widget_decks,dueDecks.size(),dueDecks.size());
    String text=resources.getQuantityString(R.plurals.widget_cards_in_decks_due,dueCardsCount,dueCardsCount,decksText);
    updateViews.setTextViewText(R.id.anki_droid_title,text);
    if (currentDueDeck < 0 || currentDueDeck > dueDecks.size() - 1) {
      currentDueDeck=0;
    }
    DeckStatus deckStatus=dueDecks.get(currentDueDeck);
    updateViews.setTextViewText(R.id.anki_droid_name,deckStatus.mDeckName);
    updateViews.setTextViewText(R.id.anki_droid_status,getDeckStatusString(deckStatus));
    PendingIntent openPendingIntent=getOpenPendingIntent(context,"");
    updateViews.setOnClickPendingIntent(R.id.anki_droid_name,openPendingIntent);
    updateViews.setOnClickPendingIntent(R.id.anki_droid_status,openPendingIntent);
    if (currentDueDeck > 0) {
      updateViews.setImageViewResource(R.id.anki_droid_prev,R.drawable.widget_left_arrow);
      updateViews.setOnClickPendingIntent(R.id.anki_droid_prev,getPrevPendingIntent(context));
    }
 else {
      updateViews.setImageViewResource(R.id.anki_droid_prev,R.drawable.widget_left_arrow_disabled);
      updateViews.setOnClickPendingIntent(R.id.anki_droid_prev,getIgnoredPendingIntent(context));
    }
    if (currentDueDeck < dueDecks.size() - 1) {
      updateViews.setImageViewResource(R.id.anki_droid_next,R.drawable.widget_right_arrow);
      updateViews.setOnClickPendingIntent(R.id.anki_droid_next,getNextPendingIntent(context));
    }
 else {
      updateViews.setImageViewResource(R.id.anki_droid_next,R.drawable.widget_right_arrow_disabled);
      updateViews.setOnClickPendingIntent(R.id.anki_droid_next,getIgnoredPendingIntent(context));
    }
    updateViews.setViewVisibility(R.id.anki_droid_name,View.VISIBLE);
    updateViews.setViewVisibility(R.id.anki_droid_status,View.VISIBLE);
    updateViews.setViewVisibility(R.id.anki_droid_next,View.VISIBLE);
    updateViews.setViewVisibility(R.id.anki_droid_prev,View.VISIBLE);
  }
 else {
    updateViews.setTextViewText(R.id.anki_droid_title,context.getString(R.string.widget_no_cards_due));
    updateViews.setTextViewText(R.id.anki_droid_name,"");
    updateViews.setTextViewText(R.id.anki_droid_status,"");
    updateViews.setViewVisibility(R.id.anki_droid_name,View.INVISIBLE);
    updateViews.setViewVisibility(R.id.anki_droid_status,View.INVISIBLE);
    updateViews.setViewVisibility(R.id.anki_droid_next,View.INVISIBLE);
    updateViews.setViewVisibility(R.id.anki_droid_prev,View.INVISIBLE);
  }
  return updateViews;
}
