{
  if (!AnkiDroidApp.colIsOpen()) {
    loadCollection();
    return;
  }
  DeckTask.launchDeckTask(DeckTask.TASK_TYPE_CHECK_DATABASE,new DeckTask.TaskListener(){
    @Override public void onPreExecute(){
      mProgressDialog=StyledProgressDialog.show(DeckPicker.this,"",getResources().getString(R.string.check_db_message),true);
    }
    @Override public void onPostExecute(    TaskData result){
      if (mProgressDialog.isShowing()) {
        mProgressDialog.dismiss();
      }
      if (result.getBoolean()) {
        StyledDialog dialog=(StyledDialog)onCreateDialog(DIALOG_OK);
        double shrunk=Math.round(result.getLong() / 1024.0);
        if (shrunk > 0.0) {
          dialog.setMessage(String.format(Locale.getDefault(),getResources().getString(R.string.check_db_acknowledge_shrunk),shrunk));
        }
 else {
          dialog.setMessage(getResources().getString(R.string.check_db_acknowledge));
        }
        dialog.show();
      }
 else {
        handleDbError();
      }
    }
    @Override public void onProgressUpdate(    TaskData... values){
    }
    @Override public void onCancelled(){
    }
  }
,new DeckTask.TaskData(AnkiDroidApp.getCol()));
}
