{
  Log.i(AnkiDroidApp.TAG,"DeckPicker - onCreate");
  super.onCreate(savedInstanceState);
  setTitleText();
  mSelf=this;
  setContentView(R.layout.deck_picker);
  registerExternalStorageListener();
  initDialogs();
  mSyncAllBar=(LinearLayout)findViewById(R.id.sync_all_bar);
  mSyncAllButton=(Button)findViewById(R.id.sync_all_button);
  mSyncAllButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      if (AnkiDroidApp.isUserLoggedIn()) {
        mSyncAllButton.setClickable(false);
        SharedPreferences preferences=PrefSettings.getSharedPrefs(getBaseContext());
        String username=preferences.getString("username","");
        String password=preferences.getString("password","");
        Connection.syncAllDecks(mSyncAllDecksListener,new Connection.Payload(new Object[]{username,password,mDeckList}));
      }
 else {
        showDialog(DIALOG_USER_NOT_LOGGED_IN);
      }
    }
  }
);
  mStatisticsAllButton=(Button)findViewById(R.id.statistics_all_button);
  mStatisticsAllButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      mStatisticType=-1;
      showDialog(DIALOG_SELECT_STATISTICS_TYPE);
    }
  }
);
  mDeckList=new ArrayList<HashMap<String,String>>();
  mDeckListView=(ListView)findViewById(R.id.files);
  mDeckListAdapter=new SimpleAdapter(this,mDeckList,R.layout.deck_item,new String[]{"name","due","new","showProgress","notes","rateOfCompletitionMat","rateOfCompletitionAll"},new int[]{R.id.DeckPickerName,R.id.DeckPickerDue,R.id.DeckPickerNew,R.id.DeckPickerProgress,R.id.DeckPickerUpgradeNotesButton,R.id.DeckPickerCompletitionMat,R.id.DeckPickerCompletitionAll});
  mDeckListAdapter.setViewBinder(new SimpleAdapter.ViewBinder(){
    @Override public boolean setViewValue(    View view,    Object data,    String text){
      if (view instanceof ProgressBar) {
        if (text.equals("true")) {
          view.setVisibility(View.VISIBLE);
        }
 else {
          view.setVisibility(View.GONE);
        }
        return true;
      }
      if (view.getId() == R.id.DeckPickerCompletitionMat || view.getId() == R.id.DeckPickerCompletitionAll) {
        int mScreenWidth=mDeckListView.getWidth();
        LinearLayout.LayoutParams lparam=new LinearLayout.LayoutParams(0,0);
        lparam.width=(int)(mScreenWidth * Integer.parseInt(text) / 100);
        lparam.height=2;
        view.setLayoutParams(lparam);
      }
      if (view.getId() == R.id.DeckPickerUpgradeNotesButton) {
        if (text.equals("")) {
          view.setVisibility(View.GONE);
        }
 else {
          view.setVisibility(View.VISIBLE);
          view.setTag(text);
          view.setOnClickListener(new OnClickListener(){
            @Override public void onClick(            View v){
              String tag=(String)v.getTag();
              if (tag == null) {
                tag="";
              }
              mUpgradeNotesAlert.setMessage(tag);
              mUpgradeNotesAlert.show();
            }
          }
);
        }
        return true;
      }
      return false;
    }
  }
);
  mDeckListView.setOnItemClickListener(mDeckSelHandler);
  mDeckListView.setAdapter(mDeckListAdapter);
  registerForContextMenu(mDeckListView);
  SharedPreferences preferences=PrefSettings.getSharedPrefs(getBaseContext());
  populateDeckList(preferences.getString("deckPath",AnkiDroidApp.getStorageDirectory()));
  mSwipeEnabled=preferences.getBoolean("swipe",false);
  gestureDetector=new GestureDetector(new MyGestureDetector());
  mDeckListView.setOnTouchListener(new View.OnTouchListener(){
    public boolean onTouch(    View v,    MotionEvent event){
      if (gestureDetector.onTouchEvent(event)) {
        return true;
      }
      return false;
    }
  }
);
}
