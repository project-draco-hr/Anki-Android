{
  Log.i(AnkiDroidApp.TAG,"DeckPicker - onCreate");
  if (!isTaskRoot()) {
    Log.i(AnkiDroidApp.TAG,"DeckPicker - onCreate: Detected multiple instance of this activity, closing it and return to root activity");
    Intent reloadIntent=new Intent(DeckPicker.this,DeckPicker.class);
    reloadIntent.setAction(Intent.ACTION_MAIN);
    reloadIntent.putExtras(getIntent().getExtras());
    reloadIntent.addCategory(Intent.CATEGORY_LAUNCHER);
    reloadIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    finish();
    startActivityIfNeeded(reloadIntent,0);
  }
  Themes.applyTheme(this);
  super.onCreate(savedInstanceState);
  Intent intent=getIntent();
  SharedPreferences preferences=restorePreferences();
  showOtherScreensIfNecessary(preferences);
  View mainView=getLayoutInflater().inflate(R.layout.deck_picker,null);
  setContentView(mainView);
  Themes.setContentStyle(mainView,Themes.CALLER_DECKPICKER);
  registerExternalStorageListener();
  mDeckpickerButtons=(View)findViewById(R.id.deckpicker_buttons);
  mSyncAllButton=(Button)findViewById(R.id.sync_all_button);
  mSyncAllButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      syncAllDecks();
    }
  }
);
  mStatisticsAllButton=(Button)findViewById(R.id.statistics_all_button);
  mStatisticsAllButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      mStatisticType=-1;
      showDialog(DIALOG_SELECT_STATISTICS_TYPE);
    }
  }
);
  mDeckList=new ArrayList<HashMap<String,String>>();
  mDeckListView=(ListView)findViewById(R.id.files);
  mDeckListAdapter=new ThemedAdapter(this,mDeckList,R.layout.deck_item,new String[]{"name","due","new","complMat","complAll"},new int[]{R.id.DeckPickerName,R.id.DeckPickerDue,R.id.DeckPickerNew,R.id.DeckPickerCompletionMat,R.id.DeckPickerCompletionAll});
  mDeckListAdapter.setViewBinder(new SimpleAdapter.ViewBinder(){
    @Override public boolean setViewValue(    View view,    Object data,    String text){
      return false;
    }
  }
);
  mDeckListView.setOnItemClickListener(mDeckSelHandler);
  mDeckListView.setAdapter(mDeckListAdapter);
  registerForContextMenu(mDeckListView);
  DeckTask.launchDeckTask(DeckTask.TASK_TYPE_OPEN_COLLECTION,mOpenCollectionHandler,null);
  if (mSwipeEnabled) {
    gestureDetector=new GestureDetector(new MyGestureDetector());
    mDeckListView.setOnTouchListener(new View.OnTouchListener(){
      public boolean onTouch(      View v,      MotionEvent event){
        if (gestureDetector.onTouchEvent(event)) {
          return true;
        }
        return false;
      }
    }
);
  }
}
