{
  if (getDrawerToggle().onOptionsItemSelected(item)) {
    return true;
  }
  Resources res=getResources();
switch (item.getItemId()) {
case R.id.action_sync:
    sync();
  return true;
case R.id.action_add_note_from_deck_picker:
addNote();
return true;
case R.id.action_shared_decks:
if (getCol() != null) {
addSharedDeck();
}
return true;
case R.id.action_new_deck:
StyledDialog.Builder builder2=new StyledDialog.Builder(DeckPicker.this);
builder2.setTitle(res.getString(R.string.new_deck));
mDialogEditText=new EditText(DeckPicker.this);
builder2.setView(mDialogEditText,false,false);
builder2.setPositiveButton(res.getString(R.string.create),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
String deckName=mDialogEditText.getText().toString().replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]","");
Log.i(AnkiDroidApp.TAG,"Creating deck: " + deckName);
getCol().getDecks().id(deckName,true);
loadCounts();
}
}
);
builder2.setNegativeButton(res.getString(R.string.dialog_cancel),null);
builder2.create().show();
return true;
case R.id.action_import:
showImportDialog(ImportDialog.DIALOG_IMPORT_HINT);
return true;
case R.id.action_new_filtered_deck:
StyledDialog.Builder builder3=new StyledDialog.Builder(DeckPicker.this);
builder3.setTitle(res.getString(R.string.new_deck));
mDialogEditText=new EditText(DeckPicker.this);
ArrayList<String> names=getCol().getDecks().allNames();
int n=1;
String cramDeckName="Cram 1";
while (names.contains(cramDeckName)) {
n++;
cramDeckName="Cram " + n;
}
mDialogEditText.setText(cramDeckName);
builder3.setView(mDialogEditText,false,false);
builder3.setPositiveButton(res.getString(R.string.create),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
long id=getCol().getDecks().newDyn(mDialogEditText.getText().toString());
openStudyOptions(id,new Bundle());
}
}
);
builder3.setNegativeButton(res.getString(R.string.dialog_cancel),null);
builder3.create().show();
return true;
case R.id.action_check_database:
showDatabaseErrorDialog(DatabaseErrorDialog.DIALOG_CONFIRM_DATABASE_CHECK);
return true;
case R.id.action_check_media:
showMediaCheckDialog(MediaCheckDialog.DIALOG_CONFIRM_MEDIA_CHECK);
return true;
case R.id.action_tutorial:
createTutorialDeck();
return true;
case R.id.action_restore_backup:
showDatabaseErrorDialog(DatabaseErrorDialog.DIALOG_CONFIRM_RESTORE_BACKUP);
return true;
case R.id.action_export:
StyledDialog.Builder builder=new StyledDialog.Builder(this);
builder.setMessage(res.getString(R.string.confirm_apkg_export));
builder.setPositiveButton(res.getString(R.string.dialog_ok),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
boolean exportMedia=false;
Object[] inputArgs=new Object[3];
inputArgs[0]=getCol().getPath();
inputArgs[1]=getCol().getPath().replace(".anki2",".apkg");
inputArgs[2]=exportMedia;
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_EXPORT_APKG,mExportListener,new TaskData(inputArgs));
}
}
);
builder.setNegativeButton(res.getString(R.string.dialog_cancel),null);
builder.create().show();
return true;
default :
return super.onOptionsItemSelected(item);
}
}
