{
  Resources res=getResources();
switch (item.getItemId()) {
case MENU_HELP:
    showDialog(DIALOG_SELECT_HELP);
  return true;
case MENU_CREATE_DECK:
StyledDialog.Builder builder2=new StyledDialog.Builder(DeckPicker.this);
builder2.setTitle(res.getString(R.string.new_deck));
mDialogEditText=(EditText)new EditText(DeckPicker.this);
builder2.setView(mDialogEditText,false,false);
builder2.setPositiveButton(res.getString(R.string.create),new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
String deckName=mDialogEditText.getText().toString().replaceAll("[\'\"\\s\\n\\r\\[\\]\\(\\)]","");
Log.i(AnkiDroidApp.TAG,"Creating deck: " + deckName);
mCol.getDecks().id(deckName,true);
loadCounts();
}
}
);
builder2.setNegativeButton(res.getString(R.string.cancel),null);
builder2.create().show();
return true;
case MENU_ABOUT:
startActivity(new Intent(DeckPicker.this,Info.class));
if (UIUtils.getApiLevel() > 4) {
ActivityTransitionAnimation.slide(DeckPicker.this,ActivityTransitionAnimation.RIGHT);
}
return true;
case MENU_DOWNLOAD_SHARED_DECK:
openSharedDeckPicker();
return true;
case MENU_MY_ACCOUNT:
startActivity(new Intent(DeckPicker.this,MyAccount.class));
return true;
case MENU_PREFERENCES:
startActivityForResult(new Intent(DeckPicker.this,Preferences.class),PREFERENCES_UPDATE);
return true;
case MENU_FEEDBACK:
Intent i=new Intent(DeckPicker.this,Feedback.class);
i.putExtra("request",REPORT_FEEDBACK);
startActivityForResult(i,REPORT_FEEDBACK);
if (UIUtils.getApiLevel() > 4) {
ActivityTransitionAnimation.slide(this,ActivityTransitionAnimation.RIGHT);
}
return true;
case CHECK_DATABASE:
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_CHECK_DATABASE,new DeckTask.TaskListener(){
@Override public void onPreExecute(){
mProgressDialog=StyledProgressDialog.show(DeckPicker.this,"",getResources().getString(R.string.check_db_message),true);
}
@Override public void onPostExecute(TaskData result){
if (mProgressDialog.isShowing()) {
mProgressDialog.dismiss();
}
if (result.getBoolean()) {
StyledDialog dialog=(StyledDialog)onCreateDialog(DIALOG_OK);
dialog.setTitle(getResources().getString(R.string.check_db_title));
dialog.setMessage(String.format(Utils.ENGLISH_LOCALE,getResources().getString(R.string.check_db_result_message),Math.round(result.getLong() / 1024)));
dialog.show();
}
 else {
showDialog(DIALOG_DB_ERROR);
}
}
@Override public void onProgressUpdate(TaskData... values){
}
}
,new DeckTask.TaskData(mCol));
return true;
default :
return super.onOptionsItemSelected(item);
}
}
