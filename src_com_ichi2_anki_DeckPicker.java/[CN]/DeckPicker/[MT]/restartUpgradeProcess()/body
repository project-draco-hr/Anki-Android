{
  StyledDialog.Builder builder=new StyledDialog.Builder(DeckPicker.this);
  builder.setTitle(R.string.deck_upgrade_title);
  builder.setIcon(R.drawable.ic_dialog_alert);
  builder.setMessage(getString(R.string.deck_upgrade_rename_warning,UPGRADE_OLD_COLLECTION_RENAME));
  builder.setPositiveButton(R.string.yes,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      AnkiDroidApp.closeCollection(true);
      String path=AnkiDroidApp.getCurrentAnkiDroidDirectory();
      File apkgExport=new File(path,UPGRADE_OLD_COLLECTION_RENAME);
      if (apkgExport.exists()) {
        int i=0;
        File altname;
        do {
          altname=new File(path,UPGRADE_OLD_COLLECTION_RENAME + i);
          ++i;
        }
 while (altname.exists());
        apkgExport.renameTo(altname);
      }
      DeckTask.launchDeckTask(DeckTask.TASK_TYPE_EXPORT_APKG,mUpgradeExportListener,new DeckTask.TaskData(new Object[]{AnkiDroidApp.getCollectionPath(),apkgExport.getAbsolutePath(),false}));
    }
  }
);
  builder.setCancelable(false);
  builder.setNegativeButton(R.string.no,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext()).edit().putInt("lastUpgradeVersion",AnkiDroidApp.getPkgVersionCode()).commit();
    }
  }
);
  builder.show();
}
