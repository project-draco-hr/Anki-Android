{
  AdapterContextMenuInfo info=(AdapterContextMenuInfo)item.getMenuInfo();
  waitForDeckLoaderThread();
  Resources res=getResources();
  @SuppressWarnings("unchecked") HashMap<String,String> data=(HashMap<String,String>)mDeckListAdapter.getItem(info.position);
  String deckPath=null;
  Deck deck=null;
switch (item.getItemId()) {
case R.id.delete_deck:
    mCurrentDeckPath=data.get("filepath");
  showDialog(DIALOG_DELETE_DECK);
return true;
case R.id.reset_language:
resetDeckLanguages(data.get("filepath"));
return true;
case R.id.optimize_deck:
deckPath=data.get("filepath");
deck=getDeck(deckPath);
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_OPTIMIZE_DECK,mOptimizeDeckHandler,new DeckTask.TaskData(deck,0));
return true;
case R.id.set_custom_dictionary:
String[] dicts=res.getStringArray(R.array.dictionary_labels);
String[] vals=res.getStringArray(R.array.dictionary_values);
int currentSet=MetaDB.getLookupDictionary(DeckPicker.this,data.get("filepath"));
mCurrentDeckPath=data.get("filepath");
String[] labels=new String[dicts.length + 1];
mDictValues=new int[dicts.length + 1];
int currentChoice=0;
labels[0]=res.getString(R.string.deckpicker_select_dictionary_default);
mDictValues[0]=-1;
for (int i=1; i < labels.length; i++) {
labels[i]=dicts[i - 1];
mDictValues[i]=Integer.parseInt(vals[i - 1]);
if (currentSet == mDictValues[i]) {
currentChoice=i;
}
}
StyledDialog.Builder builder=new StyledDialog.Builder(this);
builder.setTitle(res.getString(R.string.deckpicker_select_dictionary_title));
builder.setSingleChoiceItems(labels,currentChoice,new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int item){
MetaDB.storeLookupDictionary(DeckPicker.this,mCurrentDeckPath,mDictValues[item]);
}
}
);
StyledDialog alert=builder.create();
alert.show();
return true;
case R.id.download_missing_media:
deckPath=data.get("filepath");
deck=getDeck(deckPath);
Reviewer.setupMedia(deck);
Connection.downloadMissingMedia(mDownloadMediaListener,new Connection.Payload(new Object[]{deck}));
return true;
case R.id.remove_backups:
mCurrentDeckPath=null;
mCurrentDeckPath=data.get("filepath");
showDialog(DIALOG_DELETE_BACKUPS);
return true;
default :
return super.onContextItemSelected(item);
}
}
