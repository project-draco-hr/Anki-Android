{
  Log.i(TAG,"Thread run - Beginning");
  int len=0;
  if (mFileList != null) {
    len=mFileList.length;
  }
  if (len > 0 && mFileList != null) {
    mLock.lock();
    try {
      Log.i(TAG,"Thread run - Inside lock");
      mIsFinished=false;
      for (int i=0; i < len; i++) {
        Log.i(TAG,"Thread run - Before break mDeckIsSelected = " + mDeckIsSelected);
        if (mDeckIsSelected) {
          break;
        }
        String path=mFileList[i].getAbsolutePath();
        Deck deck;
        try {
          deck=Deck.openDeck(path);
        }
 catch (        SQLException e) {
          Log.w(TAG,"Could not open database " + path);
          continue;
        }
        int dueCards=deck.failedSoonCount + deck.revCount;
        int totalCards=deck.cardCount;
        int newCards=deck.newCountToday;
        deck.closeDeck();
        Bundle data=new Bundle();
        data.putString("absPath",path);
        data.putInt("due",dueCards);
        data.putInt("total",totalCards);
        data.putInt("new",newCards);
        Message msg=Message.obtain();
        msg.setData(data);
        mHandler.sendMessage(msg);
      }
      mIsFinished=true;
      mCondFinished.signal();
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
 finally {
      mLock.unlock();
    }
  }
}
