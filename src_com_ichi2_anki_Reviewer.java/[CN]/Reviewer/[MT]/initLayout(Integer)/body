{
  setContentView(layout);
  mMainLayout=findViewById(R.id.main_layout);
  mCardFrame=(FrameLayout)findViewById(R.id.flashcard);
  mTouchLayer=(FrameLayout)findViewById(R.id.touch_layer);
  mTouchLayer.setOnTouchListener(mGestureListener);
  if (mPrefTextSelection) {
    mClipboard=(ClipboardManager)getSystemService(Context.CLIPBOARD_SERVICE);
  }
  mCardFrame.removeAllViews();
  mCard=createWebView();
  mCardFrame.addView(mCard);
  if (mCustomFontFiles.length != 0) {
    mNextCard=createWebView();
    mNextCard.setVisibility(View.GONE);
    mCardFrame.addView(mNextCard);
  }
  gestureDetector=new GestureDetector(new MyGestureDetector());
  if (mShakeEnabled) {
    mSensorManager=(SensorManager)getSystemService(Context.SENSOR_SERVICE);
    mSensorManager.registerListener(mSensorListener,mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER),SensorManager.SENSOR_DELAY_NORMAL);
    mAccel=0.00f;
    mAccelCurrent=SensorManager.GRAVITY_EARTH;
    mAccelLast=SensorManager.GRAVITY_EARTH;
  }
  mEase1=(Button)findViewById(R.id.ease1);
  mEase1.setOnClickListener(mSelectEaseHandler);
  mEase2=(Button)findViewById(R.id.ease2);
  mEase2.setOnClickListener(mSelectEaseHandler);
  mEase3=(Button)findViewById(R.id.ease3);
  mEase3.setOnClickListener(mSelectEaseHandler);
  mEase4=(Button)findViewById(R.id.ease4);
  mEase4.setOnClickListener(mSelectEaseHandler);
  mNext1=(TextView)findViewById(R.id.nextTime1);
  mNext2=(TextView)findViewById(R.id.nextTime2);
  mNext3=(TextView)findViewById(R.id.nextTime3);
  mNext4=(TextView)findViewById(R.id.nextTime4);
  mFlipCard=(Button)findViewById(R.id.flip_card);
  mFlipCard.setOnClickListener(mFlipCardListener);
  mFlipCard.setText(getResources().getString(R.string.show_answer));
  mTextBarRed=(TextView)findViewById(R.id.red_number);
  mTextBarBlack=(TextView)findViewById(R.id.black_number);
  mTextBarBlue=(TextView)findViewById(R.id.blue_number);
  if (mShowProgressBars) {
    mDailyBar=(View)findViewById(R.id.daily_bar);
    mGlobalBar=(View)findViewById(R.id.global_bar);
    mProgressBars=(LinearLayout)findViewById(R.id.progress_bars);
  }
  mCardTimer=(Chronometer)findViewById(R.id.card_time);
  float headTextSize=(float)(mCardTimer.getTextSize() * 0.63);
  mCardTimer.setTextSize(headTextSize);
  mChosenAnswer=(TextView)findViewById(R.id.choosen_answer);
  mChosenAnswer.setTextSize((float)(headTextSize * 1.02));
  if (mPrefWhiteboard) {
    mWhiteboard=new Whiteboard(this,null);
    FrameLayout.LayoutParams lp2=new FrameLayout.LayoutParams(LayoutParams.FILL_PARENT,LayoutParams.FILL_PARENT);
    mWhiteboard.setLayoutParams(lp2);
    FrameLayout fl=(FrameLayout)findViewById(R.id.whiteboard);
    fl.addView(mWhiteboard);
    mWhiteboard.setOnTouchListener(new View.OnTouchListener(){
      @Override public boolean onTouch(      View v,      MotionEvent event){
        if (mShowWhiteboard) {
          return false;
        }
        if (gestureDetector.onTouchEvent(event)) {
          return true;
        }
        return false;
      }
    }
);
  }
  mAnswerField=(EditText)findViewById(R.id.answer_field);
  if (mInvertedColors) {
    invertColors();
  }
 else {
    mNextTimeTextColor=getResources().getColor(R.color.next_time_usual_color);
    mNextTimeTextRecomColor=getResources().getColor(R.color.next_time_recommended_color);
    mForegroundColor=getResources().getColor(R.color.next_time_usual_color);
  }
  initControls();
}
