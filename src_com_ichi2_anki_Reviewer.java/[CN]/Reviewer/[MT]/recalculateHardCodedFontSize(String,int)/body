{
  if (null == content || 0 == content.trim().length()) {
    return "";
  }
  StringBuilder sb=new StringBuilder(content);
  boolean foundNext=true;
  int start=0;
  int posFontSize=0;
  int posPx=0;
  int intSize;
  double doubleSize;
  boolean isEm=true;
  String sizeS;
  DecimalFormatSymbols symbols;
  DecimalFormat dFormat;
  while (foundNext) {
    posFontSize=sb.indexOf("font-size:",start);
    if (-1 == posFontSize) {
      foundNext=false;
      continue;
    }
 else {
      start=posFontSize + 10;
      posPx=sb.indexOf("px;",start);
      isEm=false;
      if (-1 == posPx) {
        posPx=sb.indexOf("em;",start);
        isEm=true;
      }
      if (-1 == posPx) {
        posPx=sb.indexOf("pt",start);
      }
    }
    if (17 < (posPx - posFontSize)) {
      continue;
    }
 else {
      start=posPx + 3;
      sizeS=sb.substring(posFontSize + 10,posPx).trim();
      if (isEm) {
        symbols=new DecimalFormatSymbols();
        symbols.setDecimalSeparator('.');
        dFormat=new DecimalFormat("0.##");
        dFormat.setDecimalFormatSymbols(symbols);
        try {
          doubleSize=dFormat.parse(sizeS).doubleValue();
        }
 catch (        ParseException e) {
          continue;
        }
        doubleSize=doubleSize * percentage / 100;
        sizeS=dFormat.format(doubleSize);
      }
 else {
        try {
          intSize=Integer.parseInt(sizeS);
        }
 catch (        NumberFormatException e) {
          start=posFontSize + 10;
          continue;
        }
        intSize=intSize * percentage / 100;
        sizeS=Integer.toString(intSize);
      }
      sb.replace(posFontSize + 10,posPx,sizeS);
    }
  }
  return sb.toString();
}
