{
  Resources res=getResources();
  boolean sessionComplete=false;
  boolean noMoreCards=false;
  Deck deck=AnkiDroidApp.deck();
  if (deck == null) {
    return new boolean[]{false,false};
  }
  long sessionRepLimit=deck.getSessionRepLimit();
  long sessionTime=deck.getSessionTimeLimit();
  String sessionMessage=null;
  String leechMessage;
  if (values[0].isPreviousCardLeech()) {
    if (values[0].isPreviousCardSuspended()) {
      leechMessage=res.getString(R.string.leech_suspend_notification);
    }
 else {
      leechMessage=res.getString(R.string.leech_notification);
    }
    Themes.showThemedToast(Reviewer.this,leechMessage,true);
  }
  if ((sessionRepLimit > 0) && (mSessionCurrReps >= sessionRepLimit)) {
    sessionComplete=true;
    sessionMessage=res.getString(R.string.session_question_limit_reached);
  }
 else   if ((sessionTime > 0) && (System.currentTimeMillis() >= mSessionTimeLimit)) {
    sessionComplete=true;
    sessionMessage=res.getString(R.string.session_time_limit_reached);
  }
 else   if (mIsLastCard) {
    noMoreCards=true;
    mProgressDialog=ProgressDialog.show(Reviewer.this,"",getResources().getString(R.string.saving_changes),true);
    setOutAnimation(true);
  }
 else {
    Card newCard=values[0].getCard();
    if (newCard == null) {
      noMoreCards=true;
      mProgressDialog=ProgressDialog.show(Reviewer.this,"",getResources().getString(R.string.saving_changes),true);
      setOutAnimation(false);
      return new boolean[]{sessionComplete,noMoreCards};
    }
    mCurrentCard=newCard;
    if (mPrefWriteAnswers) {
      String[] answer=mCurrentCard.getComparedFieldAnswer();
      comparedFieldAnswer=answer[0];
      comparedFieldClass=answer[1];
    }
 else {
      comparedFieldAnswer=null;
    }
    Reviewer.this.setProgressBarIndeterminateVisibility(false);
    Reviewer.this.unblockControls();
    Reviewer.this.displayCardQuestion();
  }
  if (mChosenAnswer.getText().equals("")) {
    setDueMessage();
  }
  if (sessionMessage != null) {
    Themes.showThemedToast(Reviewer.this,sessionMessage,true);
  }
  return new boolean[]{sessionComplete,noMoreCards};
}
