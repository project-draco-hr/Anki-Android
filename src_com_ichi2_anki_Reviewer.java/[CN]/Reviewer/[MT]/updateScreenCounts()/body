{
  if (mCurrentCard == null) {
    return;
  }
  try {
    String[] title=mSched.getCol().getDecks().get(mCurrentCard.getDid()).getString("name").split("::");
    setTitle(title[title.length - 1]);
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
  int[] counts=mSched.counts(mCurrentCard);
  int eta=mSched.eta(counts,false);
  UIUtils.setActionBarSubtitle(this,getResources().getQuantityString(R.plurals.reviewer_window_title,eta,eta));
  SpannableString newCount=new SpannableString(String.valueOf(counts[0]));
  SpannableString lrnCount=new SpannableString(String.valueOf(counts[1]));
  SpannableString revCount=new SpannableString(String.valueOf(counts[2]));
  if (mPrefHideDueCount) {
    revCount=new SpannableString("???");
  }
switch (mCurrentCard.getQueue()) {
case Card.TYPE_NEW:
    newCount.setSpan(new UnderlineSpan(),0,newCount.length(),0);
  break;
case Card.TYPE_LRN:
lrnCount.setSpan(new UnderlineSpan(),0,lrnCount.length(),0);
break;
case Card.TYPE_REV:
revCount.setSpan(new UnderlineSpan(),0,revCount.length(),0);
break;
}
mTextBarRed.setText(newCount);
mTextBarBlack.setText(lrnCount);
mTextBarBlue.setText(revCount);
}
