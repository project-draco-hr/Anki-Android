{
  Log.i(AnkiDroidApp.TAG,"updateCard");
  int questionStartsAt=content.indexOf("<a name=\"question\"></a><hr/>");
  if (sDisplayAnswer && isQuestionDisplayed() && (questionStartsAt != -1)) {
    content=Sound.parseSounds(mDeckFilename,content.substring(0,questionStartsAt - 1),true) + Sound.parseSounds(mDeckFilename,content.substring(questionStartsAt,content.length()),false);
  }
 else {
    content=Sound.parseSounds(mDeckFilename,content,false);
  }
  content=LaTeX.parseLaTeX(AnkiDroidApp.deck(),content);
  content=content.replace("font-weight:600;","font-weight:700;");
  if (mPrefUseRubySupport) {
    content=RubyParser.ankiRubyToMarkup(content);
  }
  String baseUrl="";
  if (mCurrentCard != null) {
    Deck currentDeck=AnkiDroidApp.deck();
    Model myModel=Model.getModel(currentDeck,mCurrentCard.getCardModelId(),false);
    baseUrl=Utils.getBaseUrl(myModel,mDeckFilename);
    content=myModel.getCSSForFontColorSize(mCurrentCard.getCardModelId(),mDisplayFontSize) + content;
  }
 else {
    mCard.getSettings().setDefaultFontSize(calculateDynamicFontSize(content));
    baseUrl="file://" + mDeckFilename.replace(".anki",".media/");
  }
  String card=mCardTemplate.replace("::content::",content);
  Log.i(AnkiDroidApp.TAG,"base url = " + baseUrl);
  mCard.loadDataWithBaseURL(baseUrl,card,"text/html","utf-8",null);
  if (!mConfigurationChanged) {
    Sound.playSounds();
  }
}
