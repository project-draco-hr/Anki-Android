{
  Log.i(AnkiDroidApp.TAG,"updateCard");
  if (mCurrentSimpleInterface) {
    fillFlashcard(mShowAnimations);
    return;
  }
  if (mCurrentCard == null) {
    mCard.getSettings().setDefaultFontSize(calculateDynamicFontSize(content));
  }
  String question="";
  String answer="";
  Sound.resetSounds();
  int qa=MetaDB.LANGUAGES_QA_QUESTION;
  if (sDisplayAnswer) {
    qa=MetaDB.LANGUAGES_QA_ANSWER;
  }
  answer=Sound.parseSounds(mBaseUrl,content,mSpeakText,qa);
  content=question + answer;
  content=content.replace("font-weight:600;","font-weight:700;");
  Log.i(AnkiDroidApp.TAG,"content card = \n" + content);
  StringBuilder style=new StringBuilder();
  style.append(mCustomFontStyle);
  float relativeFontScale=250 * ((float)mDisplayFontSize / 100);
  String fontScaleStyle=String.format("BODY { font-size: %s%%; }",relativeFontScale);
  style.append(fontScaleStyle);
  Log.i(AnkiDroidApp.TAG,"::style::" + style);
  if (mNightMode) {
    content=HtmlColors.invertColors(content);
  }
  content=SmpToHtmlEntity(content);
  mCardContent=new SpannedString(mCardTemplate.replace("::content::",content).replace("::style::",style.toString()));
  Log.i(AnkiDroidApp.TAG,"base url = " + mBaseUrl);
  fillFlashcard(mShowAnimations);
  if (!mConfigurationChanged && mPlaySoundsAtStart)   playSounds();
}
