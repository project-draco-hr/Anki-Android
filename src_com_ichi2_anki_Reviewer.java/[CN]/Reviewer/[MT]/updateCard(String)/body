{
  mBaseUrl="";
  Boolean isJapaneseModel=false;
  content=recalculateHardCodedFontSize(content,mDisplayFontSize);
  if (mCurrentCard != null) {
    final String japaneseModelTag="Japanese";
    Deck currentDeck=AnkiDroidApp.deck();
    Model myModel=Model.getModel(currentDeck,mCurrentCard.getCardModelId(),false);
    if (myModel == null) {
      Log.e(AnkiDroidApp.TAG,"updateCard - no Model could be fetched. Closing Reviewer and showing db-error dialog");
      Reviewer.this.setResult(RESULT_ANSWERING_ERROR);
      closeReviewer(true);
    }
    mBaseUrl=Utils.getBaseUrl(mMediaDir,myModel,currentDeck);
    int nightBackground=Themes.getNightModeCardBackground(this);
    content=myModel.getCSSForFontColorSize(mCurrentCard.getCardModelId(),mDisplayFontSize,mNightMode,nightBackground) + Model.invertColors(content,mNightMode);
    isJapaneseModel=myModel.hasTag(japaneseModelTag);
    mCurrentBackgroundColor=myModel.getBackgroundColor(mCurrentCard.getCardModelId());
  }
 else {
    mCard.getSettings().setDefaultFontSize(calculateDynamicFontSize(content));
    mBaseUrl=Utils.urlEncodeMediaDir(mDeckFilename.replace(".anki",".media/"));
  }
  int questionStartsAt=content.indexOf("<a name=\"question\"></a><hr/>");
  String question="";
  String answer="";
  if (isQuestionDisplayed()) {
    if (sDisplayAnswer && (questionStartsAt != -1)) {
      question=Sound.parseSounds(mBaseUrl,content.substring(0,questionStartsAt),mSpeakText,MetaDB.LANGUAGES_QA_QUESTION);
      answer=Sound.parseSounds(mBaseUrl,content.substring(questionStartsAt,content.length()),mSpeakText,MetaDB.LANGUAGES_QA_ANSWER);
    }
 else {
      question=Sound.parseSounds(mBaseUrl,content.substring(0,content.length() - 5),mSpeakText,MetaDB.LANGUAGES_QA_QUESTION) + "<hr/>";
    }
  }
 else {
    int qa=MetaDB.LANGUAGES_QA_QUESTION;
    if (sDisplayAnswer) {
      qa=MetaDB.LANGUAGES_QA_ANSWER;
    }
    answer=Sound.parseSounds(mBaseUrl,content,mSpeakText,qa);
  }
  question=LaTeX.parseLaTeX(AnkiDroidApp.deck(),question);
  answer=LaTeX.parseLaTeX(AnkiDroidApp.deck(),answer);
  if (mPrefUseRubySupport && isJapaneseModel) {
    content=RubyParser.ankiStripKanji(question) + RubyParser.ankiRubyToMarkup(answer);
  }
 else {
    content=question + answer;
  }
  content=content.replace("font-weight:600;","font-weight:700;");
  if (isHebrewFixEnabled()) {
    content=applyFixForHebrew(content);
  }
  StringBuilder style=new StringBuilder();
  style.append(getCustomFontsStyle());
  style.append(getDefaultFontStyle());
  style.append(getDeckStyle(mCurrentCard.mDeck.getDeckPath()));
  mCardContent=mCardTemplate.replace("::content::",content).replace("::style::",style.toString());
  fillFlashcard(mShowAnimations);
  if (!mConfigurationChanged && mPlaySoundsAtStart) {
    if (!mSpeakText) {
      Sound.playSounds(null,0);
    }
 else     if (!sDisplayAnswer) {
      Sound.playSounds(Utils.stripHTML(getQuestion()),MetaDB.LANGUAGES_QA_QUESTION);
    }
 else {
      Sound.playSounds(Utils.stripHTML(getAnswer()),MetaDB.LANGUAGES_QA_ANSWER);
    }
  }
}
