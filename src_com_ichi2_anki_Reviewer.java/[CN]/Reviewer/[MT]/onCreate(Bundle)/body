{
  Themes.applyTheme(this);
  super.onCreate(savedInstanceState);
  Log.i(AnkiDroidApp.TAG,"Reviewer - onCreate");
  mChangeBorderStyle=Themes.getTheme() == Themes.THEME_ANDROID_LIGHT || Themes.getTheme() == Themes.THEME_ANDROID_DARK;
  setVolumeControlStream(AudioManager.STREAM_MUSIC);
  Collection col=AnkiDroidApp.getCol();
  if (col == null) {
    reloadCollection(savedInstanceState);
    return;
  }
 else {
    mSched=col.getSched();
    mCollectionFilename=col.getPath();
    mBaseUrl=Utils.getBaseUrl(col.getMedia().getDir());
    restorePreferences();
    try {
      String[] title=mSched.getCol().getDecks().current().getString("name").split("::");
      AnkiDroidApp.getCompat().setTitle(this,title[title.length - 1],mInvertedColors);
    }
 catch (    JSONException e) {
      throw new RuntimeException(e);
    }
    AnkiDroidApp.getCompat().setSubtitle(this,"",mInvertedColors);
    if (mPrefFullscreenReview) {
      getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
      if (AnkiDroidApp.SDK_VERSION <= 11) {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
      }
    }
    registerExternalStorageListener();
    if (mNightMode) {
      mCurrentBackgroundColor=Themes.getNightModeCardBackground(this);
    }
 else {
      mCurrentBackgroundColor=Color.WHITE;
    }
    mRefreshWebview=getRefreshWebviewAndInitializeWebviewVariables();
    initLayout(R.layout.flashcard);
    if (mPrefTextSelection) {
      clipboardSetText("");
      Lookup.initialize(this,mCollectionFilename);
    }
    try {
      mCardTemplate=Utils.convertStreamToString(getAssets().open("card_template.html"));
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    mSessionCurrReps=0;
    if (mSpeakText) {
      ReadText.initializeTts(this,mCollectionFilename);
    }
    if (mPrefWhiteboard && MetaDB.getWhiteboardState(this,mCollectionFilename) == 1) {
      mShowWhiteboard=true;
      mWhiteboard.setVisibility(View.VISIBLE);
    }
    DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ANSWER_CARD,mAnswerCardHandler,new DeckTask.TaskData(mSched,null,0));
  }
}
