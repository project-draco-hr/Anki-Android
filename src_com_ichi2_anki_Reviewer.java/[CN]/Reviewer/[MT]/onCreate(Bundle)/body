{
  super.onCreate(savedInstanceState);
  mNextTimeTextColor=getResources().getColor(R.color.next_time_usual_color);
  mNextTimeTextRecomColor=getResources().getColor(R.color.next_time_recommended_color);
  Log.i(AnkiDroidApp.TAG,"Reviewer - onCreate");
  if (AnkiDroidApp.deck() == null) {
    setResult(StudyOptions.CONTENT_NO_EXTERNAL_STORAGE);
    finish();
  }
 else {
    restorePreferences();
    if (mPrefFullscreenReview) {
      getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
      requestWindowFeature(Window.FEATURE_NO_TITLE);
    }
    requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
    registerExternalStorageListener();
    initLayout(R.layout.flashcard);
switch (mDictionary) {
case DICTIONARY_AEDICT:
      mDictionaryAction="sk.baka.aedict.action.ACTION_SEARCH_EDICT";
case DICTIONARY_LEO:
    mDictionaryAction="android.intent.action.VIEW";
}
mIsDictionaryAvailable=Utils.isIntentAvailable(this,mDictionaryAction);
Log.i(AnkiDroidApp.TAG,"Is intent available = " + mIsDictionaryAvailable);
try {
  mCardTemplate=Utils.convertStreamToString(getAssets().open("card_template.html"));
  mCardTemplate=mCardTemplate.replaceFirst("var availableWidth = \\d*;","var availableWidth = " + getAvailableWidthInCard() + ";");
}
 catch (IOException e) {
  e.printStackTrace();
}
long timelimit=AnkiDroidApp.deck().getSessionTimeLimit() * 1000;
Log.i(AnkiDroidApp.TAG,"SessionTimeLimit: " + timelimit + " ms.");
mSessionTimeLimit=System.currentTimeMillis() + timelimit;
mSessionCurrReps=0;
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ANSWER_CARD,mAnswerCardHandler,new DeckTask.TaskData(0,AnkiDroidApp.deck(),null));
}
}
