{
  Themes.applyTheme(this);
  super.onCreate(savedInstanceState);
  Log.i(AnkiDroidApp.TAG,"Reviewer - onCreate");
  mChangeBorderStyle=Themes.getTheme() != Themes.THEME_BLUE;
  setVolumeControlStream(AudioManager.STREAM_MUSIC);
  Deck deck=AnkiDroidApp.deck();
  if (deck == null) {
    setResult(StudyOptions.CONTENT_NO_EXTERNAL_STORAGE);
    finish();
  }
 else {
    mCurrentScheduler=deck.getSched();
    mMediaDir=setupMedia(deck);
    restorePreferences();
    deck.resetUndo();
    if (mPrefFullscreenReview) {
      getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
      if (Integer.valueOf(android.os.Build.VERSION.SDK) < 11) {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
      }
    }
    requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
    registerExternalStorageListener();
    if (mNightMode) {
      mCurrentBackgroundColor=Themes.getNightModeCardBackground(this);
    }
 else {
      mCurrentBackgroundColor=Color.WHITE;
    }
    mCustomFontFiles=Utils.getCustomFonts(getBaseContext());
    initLayout(R.layout.flashcard);
    if (mPrefTextSelection) {
      mClipboard.setText("");
      Lookup.initialize(this,mDeckFilename);
    }
    try {
      mCardTemplate=Utils.convertStreamToString(getAssets().open("card_template.html"));
      mCardTemplate=mCardTemplate.replaceFirst("var availableWidth = \\d*;","var availableWidth = " + getAvailableWidthInCard() + ";");
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    mSessionCurrReps=0;
    if (mSpeakText && Integer.valueOf(android.os.Build.VERSION.SDK) > 3) {
      ReadText.initializeTts(this,mDeckFilename);
    }
    if (mPrefWhiteboard && MetaDB.getWhiteboardState(this,mDeckFilename) == 1) {
      mShowWhiteboard=true;
      mWhiteboard.setVisibility(View.VISIBLE);
    }
    DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ANSWER_CARD,mAnswerCardHandler,new DeckTask.TaskData(0,deck,null));
  }
}
