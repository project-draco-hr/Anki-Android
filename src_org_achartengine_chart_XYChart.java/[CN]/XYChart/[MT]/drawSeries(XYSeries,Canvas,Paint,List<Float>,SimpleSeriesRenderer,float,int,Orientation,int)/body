{
  BasicStroke stroke=seriesRenderer.getStroke();
  Cap cap=paint.getStrokeCap();
  Join join=paint.getStrokeJoin();
  float miter=paint.getStrokeMiter();
  PathEffect pathEffect=paint.getPathEffect();
  Style style=paint.getStyle();
  if (stroke != null) {
    PathEffect effect=null;
    if (stroke.getIntervals() != null) {
      effect=new DashPathEffect(stroke.getIntervals(),stroke.getPhase());
    }
    setStroke(stroke.getCap(),stroke.getJoin(),stroke.getMiter(),Style.FILL_AND_STROKE,effect,paint);
  }
  float[] points=MathHelper.getFloats(pointsList);
  drawSeries(canvas,paint,points,seriesRenderer,yAxisValue,seriesIndex,startIndex);
  if (isRenderPoints(seriesRenderer)) {
    ScatterChart pointsChart=getPointsChart();
    if (pointsChart != null) {
      pointsChart.drawSeries(canvas,paint,points,seriesRenderer,yAxisValue,seriesIndex,startIndex);
    }
  }
  paint.setTextSize(seriesRenderer.getChartValuesTextSize());
  if (or == Orientation.HORIZONTAL) {
    paint.setTextAlign(Align.CENTER);
  }
 else {
    paint.setTextAlign(Align.LEFT);
  }
  if (seriesRenderer.isDisplayChartValues()) {
    paint.setTextAlign(seriesRenderer.getChartValuesTextAlign());
    drawChartValuesText(canvas,series,seriesRenderer,paint,points,seriesIndex,startIndex);
  }
  if (stroke != null) {
    setStroke(cap,join,miter,style,pathEffect,paint);
  }
}
