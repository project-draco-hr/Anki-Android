{
  View row=convertView;
  DownloadViewWrapper wrapper=null;
  Resources res=getResources();
  if (row == null) {
    row=getLayoutInflater().inflate(R.layout.download_deck_item,null);
    Themes.setContentStyle(row,Themes.CALLER_DOWNLOAD_DECK);
    wrapper=new DownloadViewWrapper(row);
    row.setTag(wrapper);
  }
 else {
    wrapper=(DownloadViewWrapper)row.getTag();
  }
  TextView headerTitle=wrapper.getHeaderTitle();
  TextView downloadingSharedDeckTitle=wrapper.getDownloadTitle();
  ProgressBar progressBar=wrapper.getProgressBar();
  TextView progressText=wrapper.getProgressBarText();
  TextView estimatedText=wrapper.getEstimatedTimeText();
  TextView sharedDeckTitle=wrapper.getDeckTitle();
  TextView sharedDeckFacts=wrapper.getDeckFacts();
  Object obj=mAllPersonalDecks.get(position);
  if (obj instanceof Download) {
    Download download=(Download)obj;
    sharedDeckTitle.setVisibility(View.GONE);
    sharedDeckFacts.setVisibility(View.GONE);
    if (position == 0) {
      headerTitle.setText(res.getString(R.string.currently_downloading));
      headerTitle.setVisibility(View.VISIBLE);
    }
 else {
      headerTitle.setVisibility(View.GONE);
    }
    downloadingSharedDeckTitle.setText(download.getTitle());
    downloadingSharedDeckTitle.setVisibility(View.VISIBLE);
    progressBar.setVisibility(View.VISIBLE);
    long downloaded=0l;
switch (download.getStatus()) {
case Download.STATUS_STARTED:
      progressText.setText(res.getString(R.string.starting_download));
    break;
case Download.STATUS_DOWNLOADING:
  progressText.setText(res.getString(R.string.downloading));
downloaded=download.getDownloaded();
estimatedText.setText(String.valueOf(downloaded / 1024) + " kB");
break;
case Download.STATUS_COMPLETE:
progressText.setText(res.getString(R.string.downloaded));
mDownloadSuccessful=true;
break;
default :
progressText.setText(res.getString(R.string.error));
break;
}
progressText.setVisibility(View.VISIBLE);
estimatedText.setVisibility(View.VISIBLE);
}
 else {
String personalDeckTitle=(String)obj;
if (position > 0 && (mAllPersonalDecks.get(position - 1) instanceof Download)) {
headerTitle.setText(res.getString(R.string.personal_decks));
headerTitle.setVisibility(View.VISIBLE);
}
 else {
headerTitle.setVisibility(View.GONE);
}
downloadingSharedDeckTitle.setVisibility(View.GONE);
progressBar.setVisibility(View.GONE);
progressText.setVisibility(View.GONE);
estimatedText.setVisibility(View.GONE);
sharedDeckTitle.setText(personalDeckTitle);
sharedDeckTitle.setVisibility(View.VISIBLE);
sharedDeckFacts.setVisibility(View.GONE);
}
return row;
}
