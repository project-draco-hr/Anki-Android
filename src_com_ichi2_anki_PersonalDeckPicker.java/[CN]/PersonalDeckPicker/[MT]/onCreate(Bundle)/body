{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.download_deck_picker);
  registerExternalStorageListener();
  initAlertDialogs();
  SharedPreferences pref=PrefSettings.getSharedPrefs(getBaseContext());
  username=pref.getString("username","");
  password=pref.getString("password","");
  serviceIntent=new Intent(PersonalDeckPicker.this,DownloadManagerService.class);
  serviceIntent.putExtra("username",username);
  serviceIntent.putExtra("password",password);
  serviceIntent.putExtra("destination",pref.getString("deckPath",AnkiDroidApp.getStorageDirectory()));
  bindService(serviceIntent,mConnection,Context.BIND_AUTO_CREATE);
  mPersonalDeckDownloads=new ArrayList<Download>();
  mPersonalDecks=new ArrayList<String>();
  mAllPersonalDecks=new ArrayList<Object>();
  mPersonalDecksAdapter=new PersonalDecksAdapter();
  mPersonalDecksListView=(ListView)findViewById(R.id.list);
  mPersonalDecksListView.setAdapter(mPersonalDecksAdapter);
  mPersonalDecksListView.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      SharedPreferences pref=PrefSettings.getSharedPrefs(getBaseContext());
      deckName=(String)mAllPersonalDecks.get(position);
      deckPath=pref.getString("deckPath",AnkiDroidApp.getStorageDirectory()) + "/" + deckName+ ".anki";
      Download personalDeckDownload=new Download(deckName);
      mPersonalDeckDownloads.add(personalDeckDownload);
      refreshPersonalDecksList();
      try {
        startService(serviceIntent);
        mService.downloadFile(personalDeckDownload);
      }
 catch (      RemoteException e) {
        e.printStackTrace();
      }
    }
  }
);
  Connection.getPersonalDecks(getPersonalDecksListener,new Connection.Payload(new Object[]{username,password}));
}
