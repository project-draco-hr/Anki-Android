{
  Timber.d("updateCard()");
  if (mCurrentCard == null) {
    mCard.getSettings().setDefaultFontSize(calculateDynamicFontSize(content));
  }
  if (sDisplayAnswer) {
    if (!mAnswerSoundsAdded) {
      String answerSoundSource=removeFrontSideAudio(content);
      mSoundPlayer.addSounds(mBaseUrl,answerSoundSource,Sound.SOUNDS_ANSWER);
      mAnswerSoundsAdded=true;
    }
  }
 else {
    mSoundPlayer.resetSounds();
    mAnswerSoundsAdded=false;
    mSoundPlayer.addSounds(mBaseUrl,content,Sound.SOUNDS_QUESTION);
  }
  content=Sound.expandSounds(mBaseUrl,content);
  content=content.replace("font-weight:600;","font-weight:700;");
  String cardClass="card card" + (mCurrentCard.getOrd() + 1);
  if (mPrefCenterVertically) {
    cardClass+=" vertically_centered";
  }
  Timber.d("content card = \n %s",content);
  StringBuilder style=new StringBuilder();
  mExtensions.updateCssStyle(style);
  if (mCardZoom != 100) {
    style.append(String.format("body { zoom: %s }\n",mCardZoom / 100.0));
  }
  if (mImageZoom != 100) {
    style.append(String.format("img { zoom: %s }\n",mImageZoom / 100.0));
  }
  Timber.d("::style::",style);
  if (mNightMode) {
    cardClass+=" night_mode";
    if (!mCurrentCard.css().contains(".night_mode")) {
      content=HtmlColors.invertColors(content);
    }
  }
  content=SmpToHtmlEntity(content);
  mCardContent=new SpannedString(mCardTemplate.replace("::content::",content).replace("::style::",style.toString()).replace("::class::",cardClass));
  Timber.d("base url = %s",mBaseUrl);
  if (SAVE_CARD_CONTENT) {
    try {
      FileOutputStream f=new FileOutputStream(new File(CollectionHelper.getCurrentAnkiDroidDirectory(this),"card.html"));
      try {
        f.write(mCardContent.toString().getBytes());
      }
  finally {
        f.close();
      }
    }
 catch (    IOException e) {
      Timber.d(e,"failed to save card");
    }
  }
  fillFlashcard();
  if (!mConfigurationChanged) {
    playSounds(false);
  }
}
