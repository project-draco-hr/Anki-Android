{
  Timber.d("displayCardAnswer()");
  if (mCurrentCard == null) {
    return;
  }
  if (typeAnswer()) {
    InputMethodManager inputMethodManager=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
    inputMethodManager.hideSoftInputFromWindow(mAnswerField.getWindowToken(),0);
  }
  sDisplayAnswer=true;
  String answer=mCurrentCard.a();
  Sound.stopSounds();
  answer=getCol().getMedia().escapeImages(answer);
  if (mPrefFixArabic) {
    answer=ArabicUtilities.reshapeSentence(answer,true);
  }
  mAnswerField.setVisibility(View.GONE);
  if (mPrefFixArabic) {
    mTypeCorrect=ArabicUtilities.reshapeSentence(mTypeCorrect,true);
  }
  String userAnswer=cleanTypedAnswer(mAnswerField.getText().toString());
  String correctAnswer=cleanCorrectAnswer(mTypeCorrect);
  Timber.d("correct answer = %s",correctAnswer);
  Timber.d("user answer = %s",userAnswer);
  answer=typeAnsAnswerFilter(answer,userAnswer,correctAnswer);
  mIsSelecting=false;
  updateCard(enrichWithQADiv(answer,true));
  showEaseButtons();
  if (mPrefUseTimer) {
    mTimeoutHandler.removeCallbacks(mShowQuestionTask);
    mTimeoutHandler.postDelayed(mShowQuestionTask,mWaitQuestionSecond * 1000);
  }
}
