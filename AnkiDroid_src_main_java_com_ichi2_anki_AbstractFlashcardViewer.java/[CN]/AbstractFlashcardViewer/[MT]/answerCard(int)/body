{
  if (mInAnswer) {
    return;
  }
  mIsSelecting=false;
  hideLookupButton();
  int buttonNumber=getCol().getSched().answerButtons(mCurrentCard);
  if (buttonNumber < ease) {
    return;
  }
switch (ease) {
case EASE_FAILED:
    mChosenAnswer.setText("\u2022");
  mChosenAnswer.setTextColor(getResources().getColor(R.color.material_red_500));
break;
case EASE_HARD:
mChosenAnswer.setText("\u2022\u2022");
mChosenAnswer.setTextColor(getResources().getColor(buttonNumber == 4 ? R.color.material_blue_grey_700 : R.color.material_green_500));
break;
case EASE_MID:
mChosenAnswer.setText("\u2022\u2022\u2022");
mChosenAnswer.setTextColor(getResources().getColor(buttonNumber == 4 ? R.color.material_green_500 : R.color.material_blue_grey_700));
break;
case EASE_EASY:
mChosenAnswer.setText("\u2022\u2022\u2022\u2022");
mChosenAnswer.setTextColor(getResources().getColor(R.color.material_blue_grey_700));
break;
}
mTimerHandler.removeCallbacks(removeChosenAnswerText);
mTimerHandler.postDelayed(removeChosenAnswerText,mShowChosenAnswerLength);
Sound.stopSounds();
mCurrentEase=ease;
DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ANSWER_CARD,mAnswerCardHandler,new DeckTask.TaskData(getCol(),mSched,mCurrentCard,mCurrentEase));
}
