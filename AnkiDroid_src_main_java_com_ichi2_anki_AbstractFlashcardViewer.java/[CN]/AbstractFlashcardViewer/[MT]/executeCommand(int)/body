{
switch (which) {
case GESTURE_NOTHING:
    break;
case GESTURE_SHOW_ANSWER:
  if (!sDisplayAnswer) {
    displayCardAnswer();
  }
break;
case GESTURE_ANSWER_EASE1:
if (sDisplayAnswer) {
answerCard(EASE_1);
}
 else {
displayCardAnswer();
}
break;
case GESTURE_ANSWER_EASE2:
if (sDisplayAnswer) {
answerCard(EASE_2);
}
 else {
displayCardAnswer();
}
break;
case GESTURE_ANSWER_EASE3:
if (sDisplayAnswer) {
answerCard(EASE_3);
}
 else {
displayCardAnswer();
}
break;
case GESTURE_ANSWER_EASE4:
if (sDisplayAnswer) {
answerCard(EASE_4);
}
 else {
displayCardAnswer();
}
break;
case GESTURE_ANSWER_RECOMMENDED:
if (sDisplayAnswer) {
answerCard(getRecommendedEase(false));
}
 else {
displayCardAnswer();
}
break;
case GESTURE_ANSWER_BETTER_THAN_RECOMMENDED:
if (sDisplayAnswer) {
answerCard(getRecommendedEase(true));
}
 else {
displayCardAnswer();
}
break;
case GESTURE_EXIT:
closeReviewer(RESULT_DEFAULT,false);
break;
case GESTURE_UNDO:
if (getCol().undoAvailable()) {
undo();
}
break;
case GESTURE_EDIT:
editCard();
break;
case GESTURE_MARK:
onMark(mCurrentCard);
break;
case GESTURE_LOOKUP:
lookUpOrSelectText();
break;
case GESTURE_BURY_CARD:
dismiss(Collection.DismissType.BURY_CARD);
break;
case GESTURE_BURY_NOTE:
dismiss(Collection.DismissType.BURY_NOTE);
break;
case GESTURE_SUSPEND_CARD:
dismiss(Collection.DismissType.SUSPEND_CARD);
break;
case GESTURE_SUSPEND_NOTE:
dismiss(Collection.DismissType.SUSPEND_NOTE);
break;
case GESTURE_DELETE:
showDeleteNoteDialog();
break;
case GESTURE_PLAY_MEDIA:
playSounds(true);
break;
}
}
