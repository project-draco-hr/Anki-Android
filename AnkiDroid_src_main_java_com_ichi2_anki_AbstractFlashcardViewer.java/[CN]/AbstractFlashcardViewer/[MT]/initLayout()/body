{
  mMainLayout=findViewById(R.id.main_layout);
  mCardContainer=(FrameLayout)findViewById(R.id.flashcard_frame);
  mTopBarLayout=(RelativeLayout)findViewById(R.id.top_bar);
  mCardFrame=(FrameLayout)findViewById(R.id.flashcard);
  mTouchLayer=(FrameLayout)findViewById(R.id.touch_layer);
  mTouchLayer.setOnTouchListener(mGestureListener);
  if (!mDisableClipboard && mLongClickWorkaround) {
    mTouchLayer.setOnLongClickListener(mLongClickListener);
  }
  if (!mDisableClipboard) {
    mClipboard=(ClipboardManager)getSystemService(Context.CLIPBOARD_SERVICE);
  }
  mCardFrame.removeAllViews();
  gestureDetector=new GestureDetectorCompat(this,new MyGestureDetector());
  mEase1=(TextView)findViewById(R.id.ease1);
  mEase1.setTypeface(TypefaceHelper.get(this,"Roboto-Medium"));
  mEase1Layout=(LinearLayout)findViewById(R.id.flashcard_layout_ease1);
  mEase1Layout.setOnClickListener(mSelectEaseHandler);
  mEase2=(TextView)findViewById(R.id.ease2);
  mEase2.setTypeface(TypefaceHelper.get(this,"Roboto-Medium"));
  mEase2Layout=(LinearLayout)findViewById(R.id.flashcard_layout_ease2);
  mEase2Layout.setOnClickListener(mSelectEaseHandler);
  mEase3=(TextView)findViewById(R.id.ease3);
  mEase3.setTypeface(TypefaceHelper.get(this,"Roboto-Medium"));
  mEase3Layout=(LinearLayout)findViewById(R.id.flashcard_layout_ease3);
  mEase3Layout.setOnClickListener(mSelectEaseHandler);
  mEase4=(TextView)findViewById(R.id.ease4);
  mEase4.setTypeface(TypefaceHelper.get(this,"Roboto-Medium"));
  mEase4Layout=(LinearLayout)findViewById(R.id.flashcard_layout_ease4);
  mEase4Layout.setOnClickListener(mSelectEaseHandler);
  mNext1=(TextView)findViewById(R.id.nextTime1);
  mNext2=(TextView)findViewById(R.id.nextTime2);
  mNext3=(TextView)findViewById(R.id.nextTime3);
  mNext4=(TextView)findViewById(R.id.nextTime4);
  mNext1.setTypeface(TypefaceHelper.get(this,"Roboto-Regular"));
  mNext2.setTypeface(TypefaceHelper.get(this,"Roboto-Regular"));
  mNext3.setTypeface(TypefaceHelper.get(this,"Roboto-Regular"));
  mNext4.setTypeface(TypefaceHelper.get(this,"Roboto-Regular"));
  if (!mShowNextReviewTime) {
    mNext1.setVisibility(View.GONE);
    mNext2.setVisibility(View.GONE);
    mNext3.setVisibility(View.GONE);
    mNext4.setVisibility(View.GONE);
  }
  mFlipCard=(Button)findViewById(R.id.flip_card);
  mFlipCard.setTypeface(TypefaceHelper.get(this,"Roboto-Medium"));
  mFlipCardLayout=(LinearLayout)findViewById(R.id.flashcard_layout_flip);
  mFlipCardLayout.setOnClickListener(mFlipCardListener);
  if (!mButtonHeightSet && mRelativeButtonSize != 100) {
    ViewGroup.LayoutParams params=mFlipCardLayout.getLayoutParams();
    params.height=params.height * mRelativeButtonSize / 100;
    params=mEase1Layout.getLayoutParams();
    params.height=params.height * mRelativeButtonSize / 100;
    params=mEase2Layout.getLayoutParams();
    params.height=params.height * mRelativeButtonSize / 100;
    params=mEase3Layout.getLayoutParams();
    params.height=params.height * mRelativeButtonSize / 100;
    params=mEase4Layout.getLayoutParams();
    params.height=params.height * mRelativeButtonSize / 100;
    mButtonHeightSet=true;
  }
  mTextBarNew=(TextView)findViewById(R.id.new_number);
  mTextBarLearn=(TextView)findViewById(R.id.learn_number);
  mTextBarReview=(TextView)findViewById(R.id.review_number);
  if (!mShowRemainingCardCount) {
    mTextBarNew.setVisibility(View.GONE);
    mTextBarLearn.setVisibility(View.GONE);
    mTextBarReview.setVisibility(View.GONE);
  }
  mCardTimer=(Chronometer)findViewById(R.id.card_time);
  mChosenAnswer=(TextView)findViewById(R.id.choosen_answer);
  mAnswerField=(EditText)findViewById(R.id.answer_field);
  mLookUpIcon=findViewById(R.id.lookup_button);
  mLookUpIcon.setVisibility(View.GONE);
  mLookUpIcon.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View arg0){
      Timber.i("AbstractFlashcardViewer:: Lookup button pressed");
      if (clipboardHasText()) {
        lookUp();
      }
    }
  }
);
  initControls();
}
