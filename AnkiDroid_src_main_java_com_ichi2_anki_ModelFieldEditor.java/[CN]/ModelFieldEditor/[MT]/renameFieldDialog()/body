{
  mFieldNameInput=new EditText(this);
  mFieldNameInput.setSingleLine(true);
  mFieldNameInput.setText(mFieldLabels.get(currentPos));
  mFieldNameInput.setSelection(mFieldNameInput.getText().length());
  new MaterialDialog.Builder(this).title(R.string.rename_model).positiveText(R.string.dialog_ok).customView(mFieldNameInput,true).callback(new MaterialDialog.ButtonCallback(){
    @Override public void onPositive(    MaterialDialog dialog){
      String fieldLabel=mFieldNameInput.getText().toString().replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]","");
      if (fieldLabel.length() == 0) {
        showToast(getResources().getString(R.string.toast_empty_name));
      }
 else       if (containsField(fieldLabel)) {
        showToast(getResources().getString(R.string.toast_duplicate_field));
      }
 else {
        try {
          renameField();
        }
 catch (        ConfirmModSchemaException e) {
          ConfirmationDialog c=new ConfirmationDialog(){
            public void confirm(){
              try {
                mCol.modSchema(false);
                renameField();
              }
 catch (              ConfirmModSchemaException e) {
              }
              dismissContextMenu();
            }
            public void cancel(){
              dismissContextMenu();
            }
          }
;
          c.setArgs(getResources().getString(R.string.full_sync_confirmation));
          ModelFieldEditor.this.showDialogFragment(c);
        }
      }
    }
  }
).negativeText(R.string.dialog_cancel).show();
}
