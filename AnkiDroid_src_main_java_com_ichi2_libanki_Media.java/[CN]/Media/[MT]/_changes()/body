{
  Map<String,Object[]> cache=new HashMap<String,Object[]>();
  Cursor cur=null;
  try {
    cur=mDb.getDatabase().rawQuery("select fname, csum, mtime from media where csum is not null",null);
    while (cur.moveToNext()) {
      String name=cur.getString(0);
      String csum=cur.getString(1);
      Long mod=cur.getLong(2);
      cache.put(name,new Object[]{csum,mod,false});
    }
  }
 catch (  SQLException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (cur != null) {
      cur.close();
    }
  }
  List<String> added=new ArrayList<String>();
  List<String> removed=new ArrayList<String>();
  for (  File f : new File(dir()).listFiles()) {
    if (f.isDirectory()) {
      continue;
    }
    String fname=f.getName();
    if (fname.equalsIgnoreCase("thumbs.db")) {
      continue;
    }
    if (hasIllegal(fname)) {
      continue;
    }
    long sz=f.length();
    if (sz == 0) {
      f.delete();
      continue;
    }
    if (sz > 100 * 1024 * 1024) {
      mCol.log("ignoring file over 100MB",f);
      continue;
    }
    String normf=HtmlUtil.nfcNormalized(fname);
    if (!fname.equals(normf)) {
      File nf=new File(dir(),normf);
      if (nf.exists()) {
        f.delete();
      }
 else {
        f.renameTo(nf);
      }
    }
    if (!cache.containsKey(fname)) {
      added.add(fname);
    }
 else {
      if (_mtime(f.getAbsolutePath()) != (Long)cache.get(fname)[1]) {
        if (!_checksum(f.getAbsolutePath()).equals(cache.get(fname)[0])) {
          added.add(fname);
        }
      }
      cache.get(fname)[2]=true;
    }
  }
  for (  String fname : cache.keySet()) {
    if (!((Boolean)cache.get(fname)[2])) {
      removed.add(fname);
    }
  }
  return new Pair<List<String>,List<String>>(added,removed);
}
