{
  String[] flist=Utils.splitFields((String)data[6]);
  Map<String,String> fields=new HashMap<String,String>();
  long modelId=(Long)data[2];
  JSONObject model=mModels.get(modelId);
  Map<String,Pair<Integer,JSONObject>> fmap=mModels.fieldMap(model);
  for (  String fname : fmap.keySet()) {
    fields.put(fname,flist[fmap.get(fname).first]);
  }
  fields.put("Tags",(String)data[5]);
  try {
    fields.put("Type",(String)model.get("name"));
    fields.put("Deck",mDecks.name((Long)data[3]));
    JSONObject template;
    if (model.getInt("type") == Sched.MODEL_STD) {
      template=model.getJSONArray("tmpls").getJSONObject((Integer)data[4]);
    }
 else {
      template=model.getJSONArray("tmpls").getJSONObject(0);
    }
    fields.put("Card",template.getString("name"));
    fields.put("c" + (((Integer)data[4]) + 1),"1");
    HashMap<String,String> d=new HashMap<String,String>();
    d.put("id",Long.toString((Long)data[0]));
    String qfmt=template.getString("qfmt");
    String afmt=template.getString("afmt");
    String html;
    String format;
    Models.fieldParser fparser=new Models.fieldParser(fields);
    Matcher m=sRegexPattern.matcher(qfmt);
    if (m.find()) {
      format=m.replaceFirst("{{cq:" + String.valueOf(((Integer)data[4]) + 1) + ":");
      html=Mustache.compiler().compile(format).execute(fparser);
    }
 else {
      html=mModels.getCmpldTemplate(modelId,(Integer)data[4],args)[0].execute(fparser);
    }
    html=(String)AnkiDroidApp.getHooks().runFilter("mungeQA",html,"q",fields,model,data,this);
    d.put("q",html);
    if (model.getInt("type") == Sched.MODEL_CLOZE) {
      if (getModels()._availClozeOrds(model,(String)data[6],false).size() == 0) {
        d.put("q","Please edit this note and add some cloze deletions.");
      }
    }
    fields.put("FrontSide",mMedia.stripAudio(d.get("q")));
    fparser=new Models.fieldParser(fields);
    m=sRegexPattern.matcher(afmt);
    if (m.find()) {
      format=m.replaceFirst("{{ca:" + String.valueOf(((Integer)data[4]) + 1) + ":");
      html=Mustache.compiler().compile(format).execute(fparser);
    }
 else {
      html=mModels.getCmpldTemplate(modelId,(Integer)data[4],args)[1].execute(fparser);
    }
    html=(String)AnkiDroidApp.getHooks().runFilter("mungeQA",html,"a",fields,model,data,this);
    d.put("a",html);
    if (model.getInt("type") == Sched.MODEL_CLOZE) {
      if (getModels()._availClozeOrds(model,(String)data[6],false).size() == 0) {
        d.put("q",AnkiDroidApp.getAppResources().getString(com.ichi2.anki.R.string.empty_cloze_warning,"<a href=" + HELP_SITE + "#cloze>"+ AnkiDroidApp.getAppResources().getString(com.ichi2.anki.R.string.help_cloze)+ "</a>"));
      }
    }
    return d;
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
}
