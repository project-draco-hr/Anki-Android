{
  String[] flist=Utils.splitFields((String)data[6]);
  Map<String,String> fields=new HashMap<String,String>();
  long modelId=(Long)data[2];
  JSONObject model=mModels.get(modelId);
  String[] fnames=mModels.orderedFields(model);
  for (int i=0; i < flist.length; i++) {
    fields.put(fnames[i],flist[i]);
  }
  fields.put("Tags",(String)data[5]);
  try {
    fields.put("Type",(String)model.get("name"));
    fields.put("Deck",mDecks.name((Long)data[3]));
    JSONObject template=model.getJSONArray("tmpls").getJSONObject((Integer)data[4]);
    fields.put("Card",template.getString("name"));
    Models.fieldParser fparser=new Models.fieldParser(fields);
    HashMap<String,String> d=new HashMap<String,String>();
    d.put("id",Long.toString((Long)data[0]));
    d.put("q",mModels.getCmpldTemplate(modelId,(Integer)data[4])[0].execute(fparser));
    d.put("a",mModels.getCmpldTemplate(modelId,(Integer)data[4])[1].execute(fparser));
    return d;
  }
 catch (  JSONException e) {
    throw new RuntimeException(e);
  }
}
