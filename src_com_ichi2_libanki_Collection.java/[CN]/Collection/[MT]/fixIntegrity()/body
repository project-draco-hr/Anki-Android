{
  File file=new File(mPath);
  long oldSize=file.length();
  try {
    mDb.getDatabase().beginTransaction();
    try {
      save();
      if (!mDb.queryString("PRAGMA integrity_check").equals("ok")) {
        return -1;
      }
      ArrayList<Long> ids=mDb.queryColumn(Long.class,"SELECT id FROM notes WHERE id NOT IN (SELECT DISTINCT nid FROM cards)",0);
      _remNotes(Utils.arrayList2array(ids));
      mTags.registerNotes();
      for (      JSONObject m : mModels.all()) {
        updateFieldCache(Utils.arrayList2array(mModels.nids(m)));
      }
      mDb.getDatabase().setTransactionSuccessful();
    }
  finally {
      mDb.getDatabase().endTransaction();
    }
  }
 catch (  RuntimeException e) {
    Log.e(AnkiDroidApp.TAG,"doInBackgroundCheckDatabase - RuntimeException on marking card: " + e);
    AnkiDroidApp.saveExceptionReportFile(e,"doInBackgroundCheckDatabase");
    return -1;
  }
  optimize();
  file=new File(mPath);
  long newSize=file.length();
  return (long)((oldSize - newSize) / 1024);
}
